@{
    ViewBag.Title = "Báo cáo theo tháng";
      Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<style>
    .tab-nav.tn-justified > li{
        width: 33%!important;
        padding: 0px;
    }
</style>
<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-md-6">
                <h3>Báo cáo theo tháng</h3>
                <h5 class="smallDate" data-role="small-date"></h5>
            </div>
        </div>
        <hr />
        <ul id="TabList" class="tab-nav tn-justified" style="overflow: hidden;width: 100%">
            <li class="active waves-effect col-lg-6"><a data-toggle="tab" id="buildTabAll" href="#all"><i class="fa fa-globe"></i> Hệ Thống</a></li>
            <li class="waves-effect col-lg-6"><a data-toggle="tab" id="buildTabStore" href="#storesTab"><i class="fa fa-home"></i> Cửa hàng</a></li>
            <li class="waves-effect col-lg-6"><a data-toggle="tab" id="buildTabGroup" href="#storesGroupTab"><i class="fa fa-users"></i> Nhóm cửa hàng</a></li>
        </ul>
        <div class="tab-content">
            <div id="all" class="tab-pane fade in active">
        <div class="row">
            <div class="col-md-12" style="margin-top: 19px;">
                <div class="input-group" style="margin-left: -15px;">
                    <!-- Daterange picker -->
                    <div class="dateTime width230 pull-right">
                        <div class="fg-line m-t-5">
                            <input name="startYear1" id="startYear1" readonly onchange="SetDateForForm1()" class="date-picker-year form-control text-center" />
                            @*<a class="myCelenderA" id=""><i class="fa fa-calendar"></i></a>*@
                        </div>
                    </div>
                    <div class="input-group-btn FindButtonDateTime">
                        <a class="btn btn-primary FindDateTime" id="btnSearch1" style="height: 35px;">
                            <i class="left-icon fa fa-search"></i> Tìm
                        </a>
                    </div>
                    <form id="form-create-session" class="form-inline" style="display:none">
                        <input type="text" id="sTime1" name="startTime1" placeholder="Chọn giờ bắt đầu" />
                        <input type="text" id="eTime1" name="endTime1" placeholder="Chọn giờ kết thúc" />
                    </form>
                    <form id="form-create-session" class="form-inline" style="display:none">
                        <input type="text" id="sTime2" name="startTime2" placeholder="Chọn giờ bắt đầu" />
                        <input type="text" id="eTime2" name="endTime2" placeholder="Chọn giờ kết thúc" />
                    </form>
                    <form id="form-create-session" class="form-inline" style="display:none">
                        <input type="text" id="sTime3" name="startTime3" placeholder="Chọn giờ bắt đầu" />
                        <input type="text" id="eTime3" name="endTime3" placeholder="Chọn giờ kết thúc" />
                    </form>
                </div>

            </div>
        </div>
       
            <div>
                <!-- LINE CHART -->
                <button type="button" data-show="show" id="btnChart1" class="btn btn-primary btn-sm" style="width:150px" onclick="ShowChart1()">
                    <i class="fa fa-plus">
                    </i> Hiển thị biểu đồ
                </button>
                <!-- export to excel -->
                <button type="submit" id="export1" class="btn btn-primary btn-sm pull-right">
                    <i class="fa fa-download"></i>
                    Xuất ra file Excel
                </button>
            </div>
                @*<div id="container1" data-show="show" style="min-width: 310px; height: 300px; display:none;padding:7px;"></div>
                <div id="containerpie1" data-show="show" style="min-width: 310px; height: 300px;padding:7px;"></div>*@
                <div id="containerCol1" style="min-width: 310px;height:400px;padding:7px;display:none;transition: visibility 0s, opacity 0.5s linear;"></div>

                <div id="datatable1" style="padding-top:5px;">
                    
                </div>
        <form class="hidden" id="formMonthReportExcel1" action="@Url.Action("ExportMonthTableToExcel","TimeReport")">
            <input id="startTime1" name="startTime" />
            <input id="endTime1" name="endTime" />
            <input id="selectedStoreId1" name="selectedStoreId" value="0" />
        </form>

            </div>
            <div id="storesTab" class="tab-pane fade in">
                <div class="row">
                    <div class="col-md-12" style="margin-top: 19px;">
                        <label>Cửa hàng: </label>
                        <div class="input-group" style="margin-left: -15px;">
                            <div class="col-md-3">
                                <select class="selectpicker" id="storeCombobox">

                                </select>
                            </div>
                            <!-- Daterange picker -->
                            <div class="dateTime width230 pull-right">
                                <div class="fg-line m-t-5">
                                    <input name="startYear2" id="startYear2" readonly onchange="SetDateForForm2()" class="date-picker-year form-control text-center" />
                                </div>
                            </div>
                            <div class="input-group-btn FindButtonDateTime">
                                <a class="btn btn-primary FindDateTime" id="btnSearch2" style="height: 35px;">
                                    <i class="left-icon fa fa-search"></i> Tìm
                                </a>
                            </div>
                            @*<form id="form-create-session" class="form-inline" style="display:none">
                                <input type="text" id="sTime2" name="startTime2" placeholder="Chọn giờ bắt đầu" />
                                <input type="text" id="eTime2" name="endTime2" placeholder="Chọn giờ kết thúc" />
                            </form>*@
                        </div>

                    </div>
                </div>

                <!-- LINE CHART -->
                <div>
                <button type="button" data-show="show" id="btnChart2" class="btn btn-primary btn-sm" style="width:150px" onclick="ShowChart2()">
                    <i class="fa fa-plus">
                    </i> Hiển thị biểu đồ
                </button>
                    <!-- export to excel -->
                    <button type="submit" id="export2" class="btn btn-primary btn-sm pull-right">
                        <i class="fa fa-download"></i>
                        Xuất ra file Excel
                    </button>
                </div>
                @*<div id="container2" data-show="show" style="min-width: 150px; height: 300px; display:none;padding:7px;"></div>*@
                <div id="containerCol2" style="min-width: 310px;height:400px;padding:7px;display:none;transition: visibility 0s, opacity 0.5s linear;"></div>
                <div id="datatable2" style="padding-top:5px;">
                   
                </div>
        <form class="hidden" id="formMonthReportExcel2" action="@Url.Action("ExportMonthTableToExcel","TimeReport")">
            <input id="startTime2" name="startTime" />
            <input id="endTime2" name="endTime" />
            <input id="selectedStoreId2" name="selectedStoreId"/>
        </form>

            </div>
            <div id="storesGroupTab" class="tab-pane fade in">
                <div class="row">
                    <div class="col-md-12" style="margin-top: 19px;">
                        <label>Nhóm cửa hàng: </label>
                        <div class="input-group" style="margin-left: -15px;">
                            <div class="col-md-3">
                                <select class="selectpicker" id="storeGroupCombobox"></select>
                            </div>
                            <!-- Daterange picker -->
                            <div class="dateTime width230 pull-right">
                                <div class="fg-line m-t-5">
                                    <input name="startYear3" id="startYear3" readonly onchange="SetDateForForm3()" class="date-picker-year form-control text-center" />
                                    @*<a class="myCelenderA" id=""><i class="fa fa-calendar"></i></a>*@
                                </div>
                            </div>
                            <div class="input-group-btn FindButtonDateTime">
                                <a class="btn btn-primary FindDateTime" id="btnSearch3" style="height: 35px;">
                                    <i class="left-icon fa fa-search"></i> Tìm
                                </a>
                            </div>
                            @*<form id="form-create-session" class="form-inline" style="display:none">
                                <input type="text" id="sTime3" name="startTime3" placeholder="Chọn giờ bắt đầu" />
                                <input type="text" id="eTime3" name="endTime3" placeholder="Chọn giờ kết thúc" />
                            </form>*@
                        </div>

                    </div>
                </div>

                <div>
                <!-- LINE CHART -->
                <button type="button" data-show="show" id="btnChart3" class="btn btn-primary btn-sm" style="width:150px" onclick="ShowChart3()">
                    <i class="fa fa-plus">
                    </i> Hiển thị biểu đồ
                </button>
                    <!-- export to excel -->
                    <button type="submit" id="export3" class="btn btn-primary btn-sm pull-right">
                        <i class="fa fa-download"></i>
                        Xuất ra file Excel
                    </button>
                </div>
                @*<div id="container3" data-show="show" style="min-width: 310px; height: 300px; display:none;padding:7px;"></div>*@
                <div id="containerCol3" style="min-width: 310px;height:400px;padding:7px;display:none;transition: visibility 0s, opacity 0.5s linear;"></div>

                <div id="datatable3" style="padding-top:5px;">
                    
                </div>
                <form class="hidden" id="formMonthReportExcel3" action="@Url.Action("ExportMonthTableToExcelforGroup","TimeReport")">
                    <input id="startTime3" name="startTime" />
                    <input id="endTime3" name="endTime" />
                    <input id="selectedGroupId" name="selectedGroupId" />
                </form>

            </div>
        </div>

        @*<form class="hidden" id="formMonthReportExcelTest" action="@Url.Action("ExportMonthTableToExceltest","TimeReport")">
            <input id="startTime1" name="startTime" />
            <input id="endTime1" name="endTime" />
            <input id="storeId1" name="storeId" />
        </form>*@
        </div>
    </div>
        <script>
            $(document).ready(function () {
                GetStoreList();
                GetStoreGroupList()
                $("#eTime1").val("31/12/" + new Date().getFullYear());
                $("#sTime1").val("01/01/" + new Date().getFullYear());
                $('#startYear1').val(new Date().getFullYear());
                $("#eTime2").val("31/12/" + new Date().getFullYear());
                $("#sTime2").val("01/01/" + new Date().getFullYear());
                $('#startYear2').val(new Date().getFullYear());
                $("#eTime3").val("31/12/" + new Date().getFullYear());
                $("#sTime3").val("01/01/" + new Date().getFullYear());
                $('#startYear3').val(new Date().getFullYear());
                $('.date-picker-year').datepicker({
                    changeYear: true,
                    showButtonPanel: true,
                    format: 'yyyy',
                    viewMode: "years",
                    orientation: "left",
                    endDate: new Date(),
                    autoclose: true,
                    minViewMode: "years",
                    onClose: function (dateText, inst) {
                        var year = $("#ui-datepicker-div .ui-datepicker-year :selected").val();
                        $(this).datepicker('setDate', new Date(year, 1));
                    }
                });
                $(".date-picker-year").focus(function () {
                    $(".ui-datepicker-month").hide();
                });

                hourReportAll();
            });
            function SetDateForForm1() {
                if ($("#startYear1").val() != null && $("#startYear1").val() != "") {
                    $("#eTime1").val("31/12/" + $("#startYear1").val());
                    $("#sTime1").val("01/01/" + $("#startYear1").val());
                }
            }
            function SetDateForForm2() {
                if ($("#startYear2").val() != null && $("#startYear2").val() != "") {
                    $("#eTime2").val("31/12/" + $("#startYear2").val());
                    $("#sTime2").val("01/01/" + $("#startYear2").val());
                }
            }
            function SetDateForForm3() {
                if ($("#startYear3").val() != null && $("#startYear3").val() != "") {
                    $("#eTime3").val("31/12/" + $("#startYear3").val());
                    $("#sTime3").val("01/01/" + $("#startYear3").val());
                }
            }
            function RefreshTable() {
                var oTable = $("#monthRReport").dataTable();
                oTable._fnPageChange(0);
                oTable._fnAjaxUpdate();
            };
            function GetStoreList() {
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("LoadStoreList", "TimeReport")',
                    success: function (result) {
                        for (var i = 0; i < result.store.length; i++) {
                            $('#storeCombobox').append('<option value="' + result.store[i].ID + '">' + result.store[i].Name + '</option>')
                        }
                            $('#storeCombobox').selectpicker('refresh');
                    }

                });
            }
            function GetStoreGroupList() {
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("LoadStoreGroupList", "TimeReport")',
                    success: function (result) {
                        if (result.storeGroup.length==0) {
                            $('#buildTabGroup').hide();
                        }
                        else {
                            for (var i = 0; i < result.storeGroup.length; i++) {
                                $('#storeGroupCombobox').append('<option value="' + result.storeGroup[i].GroupID + '">' + result.storeGroup[i].GroupName + '</option>')
                            }
                                $('#storeGroupCombobox').selectpicker('refresh');
                        }
                    }

                });
            }
            var InitProDatatable1 = function (data) {
                $('#datatable1').html('<table id="monthRReportAll" class="table table-condensed table-striped table-bordered table-hover">'
                            + '<thead>'
                            + '<tr>'
                            + '<th>'
                                + '<label class="">Tháng</label>'
                            + '</th>'
                            + '<th>'
                                + '<label class="">Số hóa đơn (Mang đi)</label>'
                            + '</th>'
                            + '<th>'
                                + '<label class="">Số hóa đơn (Tại store)</label>'
                            + '</th>'
                            + '<th>'
                                + '<label class="">Số hóa đơn (Giao hàng)</label>'
                            + '</th>'
                            + '<th>'
                               + '<label class="">Tổng số hóa đơn</label>'
                            + '</th>'
                            + '<th>'
                               + '<label class="">Tổng giảm giá</label>'
                            + '</th>'
                            + '<th>'
                                + '<label class="">Doanh thu</label>'
                            + '</th>'
                            + '</tr>'
                            + '</thead>'
                            + '<tbody></tbody>'
                            + '</table');

                $("#monthRReportAll").dataTable({
                    "bFilter": false,
                    "bSort": false,
                    "bRetrieve": true,
                    "bScrollCollapse": true,
                    'data': data,
                    "bProcessing": true,
                    "bPaginate": false,
                    "iDisplayLength": 50,
                    "aLengthMenu": [50, 100],
                    "oLanguage": {
                        "sSearch": "Tìm kiếm:",
                        "sZeroRecords": "Không có dữ liệu phù hợp",
                        "sInfo": "Hiển thị từ _START_ đến _END_ trên tổng số _TOTAL_ dòng",
                        "sEmptyTable": "Không có dữ liệu",
                        "sInfoFiltered": " - lọc ra từ _MAX_ dòng",
                        "sLengthMenu": "Hiển thị _MENU_ dòng",
                        "sProcessing": "Đang xử lý...",
                        "oPaginate": {
                            "sNext": "<i class='fa fa-chevron-right'></i>",
                            "sPrevious": "<i class='fa fa-chevron-left'></i>"
                        }
                    },
                    "aoColumnDefs": [
                        {
                            "aTargets": [0, 1, 2, 3, 4, 5, 6],
                            "bSortable": false,
                            "sClass": "text-center"
                        },
                    ],
                    "bAutoWidth": false
                }).fnSetFilteringDelay(delaySearch);
                $('table').wrap('<div class="tableDiv-responsive" />');
            };
            var InitProDatatable2 = function (data) {
                $('#datatable2').html('<table id="monthRReportStores" class="table table-condensed table-striped table-bordered table-hover">'
                            + '<thead>'
                            + '<tr>'
                            + '<th>'
                                + '<label class="">Tháng</label>'
                            + '</th>'
                            + '<th>'
                                + '<label class="">Số hóa đơn (Mang đi)</label>'
                            + '</th>'
                            + '<th>'
                                + '<label class="">Số hóa đơn (Tại store)</label>'
                            + '</th>'

                            + '<th>'
                                + '<label class="">Số hóa đơn (Giao hàng)</label>'
                            + '</th>'
                            + '<th>'
                               + '<label class="">Tổng số hóa đơn</label>'
                            + '</th>'
                            + '<th>'
                               + '<label class="">Tổng giảm giá</label>'
                            + '</th>'
                            + '<th>'
                                + '<label class="">Doanh thu</label>'
                            + '</th>'
                            + '</tr>'
                            + '</thead>'
                            + '<tbody></tbody>'
                            + '</table');

                $("#monthRReportStores").dataTable({
                    "bFilter": false,
                    "bSort": false,
                    "bRetrieve": true,
                    "bScrollCollapse": true,
                    'data': data,
                    "bProcessing": true,
                    "bPaginate": false,
                    "iDisplayLength": 50,
                    "aLengthMenu": [50, 100],
                    "oLanguage": {
                        "sSearch": "Tìm kiếm:",
                        "sZeroRecords": "Không có dữ liệu phù hợp",
                        "sInfo": "Hiển thị từ _START_ đến _END_ trên tổng số _TOTAL_ dòng",
                        "sEmptyTable": "Không có dữ liệu",
                        "sInfoFiltered": " - lọc ra từ _MAX_ dòng",
                        "sLengthMenu": "Hiển thị _MENU_ dòng",
                        "sProcessing": "Đang xử lý...",
                        "oPaginate": {
                            "sNext": "<i class='fa fa-chevron-right'></i>",
                            "sPrevious": "<i class='fa fa-chevron-left'></i>"
                        }
                    },
                    "aoColumnDefs": [
                        {
                            "aTargets": [0, 1, 2, 3, 4, 5, 6],
                            "bSortable": false,
                            "sClass": "text-center"
                        },
                    ],
                    "bAutoWidth": false
                }).fnSetFilteringDelay(delaySearch);
                $('table').wrap('<div class="tableDiv-responsive" />');
            };
            var InitProDatatable3 = function (data) {
                $('#datatable3').html('<table id="monthRReportGroup" class="table table-condensed table-striped table-bordered table-hover">'
                            + '<thead>'
                            + '<tr>'
                            + '<th>'
                                + '<label class="">Tháng</label>'
                            + '</th>'
                            + '<th>'
                                + '<label class="">Số hóa đơn (Mang đi)</label>'
                            + '</th>'
                            + '<th>'
                                + '<label class="">Số hóa đơn (Tại store)</label>'
                            + '</th>'
                            + '<th>'
                                + '<label class="">Số hóa đơn (Giao hàng)</label>'
                            + '</th>'
                            + '<th>'
                               + '<label class="">Tổng số hóa đơn</label>'
                            + '</th>'
                            + '<th>'
                               + '<label class="">Tổng giảm giá</label>'
                            + '</th>'
                            + '<th>'
                                + '<label class="">Doanh thu</label>'
                            + '</th>'
                            + '</tr>'
                            + '</thead>'
                            + '<tbody></tbody>'
                            + '</table');

                $("#monthRReportGroup").dataTable({
                    "bFilter": false,
                    "bSort": false,
                    "bRetrieve": true,
                    "bScrollCollapse": true,
                    'data': data,
                    "bProcessing": true,
                    "bPaginate": false,
                    "iDisplayLength": 50,
                    "aLengthMenu": [50, 100],
                    "oLanguage": {
                        "sSearch": "Tìm kiếm:",
                        "sZeroRecords": "Không có dữ liệu phù hợp",
                        "sInfo": "Hiển thị từ _START_ đến _END_ trên tổng số _TOTAL_ dòng",
                        "sEmptyTable": "Không có dữ liệu",
                        "sInfoFiltered": " - lọc ra từ _MAX_ dòng",
                        "sLengthMenu": "Hiển thị _MENU_ dòng",
                        "sProcessing": "Đang xử lý...",
                        "oPaginate": {
                            "sNext": "<i class='fa fa-chevron-right'></i>",
                            "sPrevious": "<i class='fa fa-chevron-left'></i>"
                        }
                    },
                    "aoColumnDefs": [
                        {
                            "aTargets": [0, 1, 2, 3, 4, 5, 6],
                            "bSortable": false,
                            "sClass": "text-center"
                        }
                    ],
                    "bAutoWidth": false
                }).fnSetFilteringDelay(delaySearch);
                $('table').wrap('<div class="tableDiv-responsive" />');
            };
            //seach button + store on change
            $('#btnSearch1').on('click', function () {
                if ($("#eTime1").val().length > 16 || $("#sTime1").val().length > 16) {
                    ShowMessage("Vui lòng nhập thời gian đúng định dạng", 3);
                    return;
                }
                else {
                    $('#selectedStoreId').val($('#allStores').val());
                    hourReportAll();
                }
            });
            $('#btnSearch2').on('click', function () {
                if ($("#eTime2").val().length > 16 || $("#sTime2").val().length > 16) {
                    ShowMessage("Vui lòng nhập thời gian đúng định dạng", 3);
                    return;
                }
                else {
                    $('#selectedStoreId').val($('#storeCombobox').val());
                    hourReportStores();
                }
            });
            $('#btnSearch3').on('click', function () {
                if ($("#eTime3").val().length > 16 || $("#sTime3").val().length > 16) {
                    ShowMessage("Vui lòng nhập thời gian đúng định dạng", 3);
                    return;
                }
                else {
                    $('#selectedStoreId').val($('#storeGroupCombobox').val());
                    hourReportGroup();
                }
            });
            $('#storeCombobox').on('change', function () {
                if ($("#eTime2").val().length > 16 || $("#sTime2").val().length > 16) {
                    ShowMessage("Vui lòng nhập thời gian đúng định dạng", 3);
                    return;
                }
                else {
                    $('#selectedStoreId').val($('#storeCombobox').val());
                    hourReportStores();
                }
            });
            $('#storeGroupCombobox').on('change', function () {
                if ($("#eTime3").val().length > 16 || $("#sTime3").val().length > 16) {
                    ShowMessage("Vui lòng nhập thời gian đúng định dạng", 3);
                    return;
                }
                else {
                    $('#selectedStoreId').val($('#storeGroupCombobox').val());
                    hourReportGroup();
                }
            });

            //search report
            var hourReportAll = function () {

                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("LoadMonthReport", "TimeReport")',
                    data: { 'startTime': $('#sTime1').val(), 'endTime': $('#eTime1').val(), 'selectedStoreId': 0, },
                    success: function (result) {
                        var startTime = $('#sTime1').val();
                        var endTime = $('#eTime1').val();
                        var dateRange = startTime + (startTime == endTime ? '' : ' - ' + endTime);
                        if (dateRange != "") {

                            $('[data-role=small-date]').html('(' + dateRange + ')'); // Chage date at page header
                        }
                        else {
                            $('[data-role=small-date]').html('(01/01/' + new Date().getFullYear() + ' - 31/12/' + new Date().getFullYear() + ')');
                        }
                        InitProDatatable1(result.datatable);
                        
                        DoanhThuChart1(result.dataChart, result.dataPie);
                    }
                });
            };
            var hourReportStores = function () {
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("LoadMonthReport", "TimeReport")',
                    data: { 'startTime': $('#sTime2').val(), 'endTime': $('#eTime2').val(), 'selectedStoreId': $('#storeCombobox').val(), },
                    success: function (result) {
                        var startTime = $('#sTime2').val();
                        var endTime = $('#eTime2').val();
                        var dateRange = startTime + (startTime == endTime ? '' : ' - ' + endTime);
                        if (dateRange != "") {

                            $('[data-role=small-date]').html('(' + dateRange + ')'); // Chage date at page header
                        }
                        else {
                            $('[data-role=small-date]').html('(01/01/' + new Date().getFullYear() + ' - 31/12/' + new Date().getFullYear() + ')');
                        }
                        InitProDatatable2(result.datatable);
                        DoanhThuChart2(result.dataChart);
                    }
                });
            };
            var hourReportGroup = function () {

                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("LoadMonthReportForGroup", "TimeReport")',
                    data: { 'startTime': $('#sTime3').val(), 'endTime': $('#eTime3').val(), 'selectedGroupId': $('#storeGroupCombobox').val(), },
                    success: function (result) {
                        var startTime = $('#sTime3').val();
                        var endTime = $('#eTime3').val();
                        var dateRange = startTime + (startTime == endTime ? '' : ' - ' + endTime);
                        if (dateRange != "") {

                            $('[data-role=small-date]').html('(' + dateRange + ')'); // Chage date at page header
                        }
                        else {
                            $('[data-role=small-date]').html('(01/01/' + new Date().getFullYear() + ' - 31/12/' + new Date().getFullYear() + ')');
                        }
                        InitProDatatable3(result.datatable);
                        DoanhThuChart3(result.dataChart);
                    }
                });
            };

            //-------------
            //- LINE CHART -
            //--------------
            function DoanhThuChart1(dataChart, dataPie) {
                $('#container1').highcharts({
                    title: {
                        text: 'BIỂU ĐỒ HÓA ĐƠN',
                        x: -20 //center
                    },
                    subtitle: {
                        text: '',
                        x: -20
                    },
                    xAxis: {
                        categories: dataChart.MonthName
                    },
                    yAxis: {
                        title: {
                            text: 'Hóa Đơn'
                        },
                        plotLines: [{
                            value: 0,
                            width: 1,
                            color: '#808080'
                        }]
                    },
                    tooltip: {
                        valueSuffix: ' Hóa Đơn'
                    },
                    legend: {
                        layout: 'vertical',
                        align: 'right',
                        verticalAlign: 'middle',
                        borderWidth: 0
                    },
                    series: [
                        {
                            name: 'TakeAway',
                            data: dataChart.TakeAway,
                        },
                        {
                            name: 'AtStore',
                            data: dataChart.AtStore,
                        },
                        {
                            name: 'Delivery',
                            data: dataChart.Delivery,
                        }
                    ]
                });
                $('#containerpie1').highcharts({
                    chart: {
                        plotBackgroundColor: null,
                        plotBorderWidth: null,
                        plotShadow: false,
                        type: 'pie'
                    },
                    title: {
                        text: 'Browser market shares January, 2015 to May, 2015'
                    },
                    tooltip: {
                        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
                    },
                    plotOptions: {
                        pie: {
                            allowPointSelect: true,
                            cursor: 'pointer',
                            dataLabels: {
                                enabled: true,
                                format: '<b>{point.name}</b>: {point.percentage:.1f} %',
                                style: {
                                    color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'
                                }
                            }
                        }
                    },
                series: [{
                    name: 'Brands',
                    colorByPoint: true,
                    data: dataPie
                }]
                
                });
                $('#containerCol1').highcharts({
                    chart: {
                        type: 'column',
                        style:{
                            fontFamily: 'arial'
                        }
                    },
                    title: {
                        text: 'BIỂU ĐỒ HÓA ĐƠN'
                    },
                    subtitle: {
                        text: 'Bộ lọc:',
                        align: 'right',
                        x: -310,
                        y: 42,
                    },
                    xAxis: {
                        categories: dataChart.MonthName
                    },
                    yAxis: {
                        min: 0,
                        title: {
                            text: 'Hóa Đơn'
                        },
                        stackLabels: {
                            enabled: true,
                            style: {
                                fontWeight: 'bold',
                                color: (Highcharts.theme && Highcharts.theme.textColor) || 'gray'
                            }
                        }
                    },
                    legend: {
                        align: 'right',
                        x: -30,
                        verticalAlign: 'top',
                        y: 25,
                        floating: true,
                        backgroundColor: (Highcharts.theme && Highcharts.theme.background2) || 'white',
                        borderColor: '#CCC',
                        borderWidth: 1,
                        shadow: false
                    },
                    tooltip: {
                        headerFormat: '<b>{point.x}</b><br/>',
                        pointFormat: '{series.name}: {point.y}<br/>Total: {point.stackTotal}'
                    },
                    plotOptions: {
                        column: {
                            stacking: 'normal',
                            dataLabels: {
                                enabled: true,
                                color: (Highcharts.theme && Highcharts.theme.dataLabelsColor) || 'white'
                            }
                        }
                    },
                    series: [
                        {
                            name: 'TakeAway',
                            data: dataChart.TakeAway,
                        },
                        {
                            name: 'AtStore',
                            data: dataChart.AtStore,
                        },
                        {
                            name: 'Delivery',
                            data: dataChart.Delivery,
                        }
                    ]
                });
            };
            function DoanhThuChart2(dataChart) {
                $('#container2').highcharts({
                    title: {
                        text: 'BIỂU ĐỒ HÓA ĐƠN',
                        x: -20 //center
                    },
                    subtitle: {
                        text: '',
                        x: -20
                    },
                    xAxis: {
                        categories: dataChart.MonthName
                    },
                    yAxis: {
                        title: {
                            text: 'Hóa Đơn'
                        },
                        plotLines: [{
                            value: 0,
                            width: 1,
                            color: '#808080'
                        }]
                    },
                    tooltip: {
                        valueSuffix: ' Hóa Đơn'
                    },
                    legend: {
                        layout: 'vertical',
                        align: 'right',
                        verticalAlign: 'middle',
                        borderWidth: 0
                    },
                    series: [
                        {
                            name: 'TakeAway',
                            data: dataChart.TakeAway,
                        },
                        {
                            name: 'AtStore',
                            data: dataChart.AtStore,
                        },
                        {
                            name: 'Delivery',
                            data: dataChart.Delivery,
                        }
                    ]
                });
                $('#containerCol2').highcharts({
                    chart: {
                        type: 'column',
                        style: {
                            fontFamily: 'arial'
                        }
                    },
                    title: {
                        text: 'BIỂU ĐỒ HÓA ĐƠN'
                    },
                    subtitle: {
                        text: 'Bộ lọc:',
                        align: 'right',
                        x: -310,
                        y: 42,
                    },
                    xAxis: {
                        categories: dataChart.MonthName
                    },
                    yAxis: {
                        min: 0,
                        title: {
                            text: 'Hóa Đơn'
                        },
                        stackLabels: {
                            enabled: true,
                            style: {
                                fontWeight: 'bold',
                                color: (Highcharts.theme && Highcharts.theme.textColor) || 'gray'
                            }
                        }
                    },
                    legend: {
                        align: 'right',
                        x: -30,
                        verticalAlign: 'top',
                        y: 25,
                        floating: true,
                        backgroundColor: (Highcharts.theme && Highcharts.theme.background2) || 'white',
                        borderColor: '#CCC',
                        borderWidth: 1,
                        shadow: false
                    },
                    tooltip: {
                        headerFormat: '<b>{point.x}</b><br/>',
                        pointFormat: '{series.name}: {point.y}<br/>Total: {point.stackTotal}'
                    },
                    plotOptions: {
                        column: {
                            stacking: 'normal',
                            dataLabels: {
                                enabled: true,
                                color: (Highcharts.theme && Highcharts.theme.dataLabelsColor) || 'white'
                            }
                        }
                    },
                    series: [
                        {
                            name: 'TakeAway',
                            data: dataChart.TakeAway,
                        },
                        {
                            name: 'AtStore',
                            data: dataChart.AtStore,
                        },
                        {
                            name: 'Delivery',
                            data: dataChart.Delivery,
                        }
                    ]
                });
            };
            function DoanhThuChart3(dataChart) {
                $('#container3').highcharts({
                    title: {
                        text: 'BIỂU ĐỒ HÓA ĐƠN',
                        x: -20 //center
                    },
                    subtitle: {
                        text: '',
                        x: -20
                    },
                    xAxis: {
                        categories: dataChart.MonthName
                    },
                    yAxis: {
                        title: {
                            text: 'Hóa Đơn'
                        },
                        plotLines: [{
                            value: 0,
                            width: 1,
                            color: '#808080'
                        }]
                    },
                    tooltip: {
                        valueSuffix: ' Hóa Đơn'
                    },
                    legend: {
                        layout: 'vertical',
                        align: 'right',
                        verticalAlign: 'middle',
                        borderWidth: 0
                    },
                    series: [
                        {
                            name: 'TakeAway',
                            data: dataChart.TakeAway,
                        },
                        {
                            name: 'AtStore',
                            data: dataChart.AtStore,
                        },
                        {
                            name: 'Delivery',
                            data: dataChart.Delivery,
                        }
                    ]
                });
                $('#containerCol3').highcharts({
                    chart: {
                        type: 'column',
                        style: {
                            fontFamily: 'arial'
                        }
                    },
                    title: {
                        text: 'BIỂU ĐỒ HÓA ĐƠN'
                    },
                    subtitle: {
                        text: 'Bộ lọc:',
                        align: 'right',
                        x: -310,
                        y: 42,
                    },
                    xAxis: {
                        categories: dataChart.MonthName
                    },
                    yAxis: {
                        min: 0,
                        title: {
                            text: 'Hóa Đơn'
                        },
                        stackLabels: {
                            enabled: true,
                            style: {
                                fontWeight: 'bold',
                                color: (Highcharts.theme && Highcharts.theme.textColor) || 'gray'
                            }
                        }
                    },
                    legend: {
                        align: 'right',
                        x: -30,
                        verticalAlign: 'top',
                        y: 25,
                        floating: true,
                        backgroundColor: (Highcharts.theme && Highcharts.theme.background2) || 'white',
                        borderColor: '#CCC',
                        borderWidth: 1,
                        shadow: false
                    },
                    tooltip: {
                        headerFormat: '<b>{point.x}</b><br/>',
                        pointFormat: '{series.name}: {point.y}<br/>Total: {point.stackTotal}'
                    },
                    plotOptions: {
                        column: {
                            stacking: 'normal',
                            dataLabels: {
                                enabled: true,
                                color: (Highcharts.theme && Highcharts.theme.dataLabelsColor) || 'white'
                            }
                        }
                    },
                    series: [
                        {
                            name: 'TakeAway',
                            data: dataChart.TakeAway,
                        },
                        {
                            name: 'AtStore',
                            data: dataChart.AtStore,
                        },
                        {
                            name: 'Delivery',
                            data: dataChart.Delivery,
                        }
                    ]
                });
            };

            // export to excel
            $(document).on('click', '#export1', function () {
                $('#startTime1').val($('#sTime1').val());
                $('#endTime1').val($('#eTime1').val());
                //$('#storeId').val(ViewBag.storeId);
                $('#formMonthReportExcel1').submit();
            });
            $(document).on('click', '#export2', function () {
                $('#startTime2').val($('#sTime2').val());
                $('#endTime2').val($('#eTime2').val());
                //$('#storeId').val(ViewBag.storeId);
                $("#selectedStoreId2").val($('#storeCombobox').val());
                ;
                $('#formMonthReportExcel2').submit();
            });
            $(document).on('click', '#export3', function () {
                $('#startTime3').val($('#sTime3').val());
                $('#endTime3').val($('#eTime3').val());
                //$('#storeId').val(ViewBag.storeId);
                $('#selectedGroupId').val($('#storeGroupCombobox').val());
                $('#formMonthReportExcel3').submit();
            });


            @*$(document).on('click', '#exporttest', function () {
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("ExportMonthTableToExceltest","TimeReportController")',
                    data: {
                        'selectedStoreId': $('#storeCombobox').val()
                    },
                });
            });*@
            function ShowChart1() {
                var display = $('#btnChart1').data('show');
                if (display == "hide") {
                    $('#btnChart1').data('show', 'show');
                    $('#btnChart1').html(' <i class="fa fa-plus"></i> Hiển thị biểu đồ');
                }
                else {
                    $('#btnChart1').html(' <i class="fa fa-minus"></i> Ẩn biểu đồ');
                    $('#btnChart1').data('show', 'hide');
                }
                $('#containerCol1').toggle('show');
            }
            function ShowChart2() {
                var display = $('#btnChart2').data('show');
                if (display == "hide") {
                    $('#btnChart2').data('show', 'show');
                    $('#btnChart2').html(' <i class="fa fa-plus"></i> Hiển thị biểu đồ');
                }
                else {
                    $('#btnChart2').html(' <i class="fa fa-minus"></i> Ẩn biểu đồ');
                    $('#btnChart2').data('show', 'hide');
                }
                $('#containerCol2').toggle('show');
            }
            function ShowChart3() {
                var display = $('#btnChart3').data('show');
                if (display == "hide") {
                    $('#btnChart3').data('show', 'show');
                    $('#btnChart3').html(' <i class="fa fa-plus"></i> Hiển thị biểu đồ');
                }
                else {
                    $('#btnChart3').html(' <i class="fa fa-minus"></i> Ẩn biểu đồ');
                    $('#btnChart3').data('show', 'hide');
                }
                $('#containerCol3').toggle('show');
            }
            $('#buildTabStore').one('click', function (e) {
                hourReportStores();
            });
            $('#buildTabGroup').one('click', function (e) {
                hourReportGroup();
            });
            $('#buildTabStore').on('click', function (e) {
                $('#btnChart1').data('show', 'show');
                $('#btnChart1').html(' <i class="fa fa-plus"></i> Hiển thị biểu đồ');
                $('#containerCol1').hide();
                $('#btnChart3').data('show', 'show');
                $('#btnChart3').html(' <i class="fa fa-plus"></i> Hiển thị biểu đồ');
                $('#containerCol3').hide();
                var startTime = $('#sTime2').val();
                var endTime = $('#eTime2').val();
                var dateRange = startTime + (startTime == endTime ? '' : ' - ' + endTime);
                if (dateRange != "") {

                    $('[data-role=small-date]').html('(' + dateRange + ')'); // Chage date at page header
                }
                else {
                    $('[data-role=small-date]').html('(01/01/' + new Date().getFullYear() + ' - 31/12/' + new Date().getFullYear() + ')');
                }
            });
            $('#buildTabAll').on('click', function (e) {
                $('#btnChart2').data('show', 'show');
                $('#btnChart2').html(' <i class="fa fa-plus"></i> Hiển thị biểu đồ');
                $('#containerCol2').hide();
                $('#btnChart3').data('show', 'show');
                $('#btnChart3').html(' <i class="fa fa-plus"></i> Hiển thị biểu đồ');
                $('#containerCol3').hide();
                var startTime = $('#sTime1').val();
                var endTime = $('#eTime1').val();
                var dateRange = startTime + (startTime == endTime ? '' : ' - ' + endTime);
                if (dateRange != "") {

                    $('[data-role=small-date]').html('(' + dateRange + ')'); // Chage date at page header
                }
                else {
                    $('[data-role=small-date]').html('(01/01/' + new Date().getFullYear() + ' - 31/12/' + new Date().getFullYear() + ')');
                }
            });
            $('#buildTabGroup').on('click', function (e) {
                $('#btnChart1').data('show', 'show');
                $('#btnChart1').html(' <i class="fa fa-plus"></i> Hiển thị biểu đồ');
                $('#containerCol1').hide();
                $('#btnChart2').data('show', 'show');
                $('#btnChart2').html(' <i class="fa fa-plus"></i> Hiển thị biểu đồ');
                $('#containerCol2').hide();
                var startTime = $('#sTime3').val();
                var endTime = $('#eTime3').val();
                var dateRange = startTime + (startTime == endTime ? '' : ' - ' + endTime);
                if (dateRange != "") {

                    $('[data-role=small-date]').html('(' + dateRange + ')'); // Chage date at page header
                }
                else {
                    $('[data-role=small-date]').html('(01/01/' + new Date().getFullYear() + ' - 31/12/' + new Date().getFullYear() + ')');
                }
            });
        </script>
