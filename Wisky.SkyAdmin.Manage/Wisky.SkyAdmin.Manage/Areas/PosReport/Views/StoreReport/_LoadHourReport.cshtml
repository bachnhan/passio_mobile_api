@using System.Globalization
@model IEnumerable<Wisky.SkyUp.Website.Areas.PosReport.Models.HourReportModel>
@{
    var count = 6;
}
<div id="container" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
<br/>
<p>Chi tiết ngày: @ViewBag.Start - @ViewBag.End</p>
<table id="hourReport" class="table table-striped table-bordered table-hover" style="width: 100% !important">
    <thead style="white-space: nowrap; text-overflow: ellipsis;">
        <tr>
            <th>
                <label class="">STT</label>
            </th>
            <th>
                <label class="">Khoảng thời gian</label>
            </th>
            <th>
                <label class="">Số lượng(Mang đi)</label>
            </th>
            <th>
                <label class="">Thành tiền</label>
            </th>
            <th>
                <label class="">Số lượng(Tại store)</label>
            </th>
            <th>
                <label class="">Thành tiền</label>
            </th>
            <th>
                <label class="">Số lượng(Giao hàng)</label>
            </th>
            <th>
                <label class="">Thành tiền</label>
            </th>
            <th>
                <label class="">Tổng cộng</label>
            </th>
            <th>
                <label class="">Thành tiền</label>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@(count++)</td>
                <td>@item.StartTime :00 - @item.EndTime :00</td>
                <td>@item.TakeAway</td>
                <td>@string.Format(CultureInfo.InvariantCulture,
                        "{0:0,0}", @item.PriceTakeAway)</td>
                <td>@item.AtStore</td>
                <td>@string.Format(CultureInfo.InvariantCulture,
                     "{0:0,0}", @item.PriceAtStore)</td>
                <td>@item.Delivery</td>
                <td>@string.Format(CultureInfo.InvariantCulture,
                     "{0:0,0}", @item.PriceDelivery)</td>
                <td>@item.TotalQuantity</td>
                <td>@string.Format(CultureInfo.InvariantCulture,
                     "{0:0,0}", @item.TotalPrice)</td>
            </tr>
        }
    </tbody>
    @*<tfoot>
            <tr>
                <th colspan="2" style="text-align:right">Tổng doanh thu của tất cả cửa hàng:</th>
                <th></th>
            </tr>
        </tfoot>*@
</table>
<script>
    $(document).ready(function() {
        $("#hourReport").dataTable({
            "iDisplayLength": 25,
            "aLengthMenu": [25],
            "oLanguage": {
                "sSearch": "Tìm kiếm:",
                "sZeroRecords": "Không có dữ liệu phù hợp",
                "sInfo": "Hiển thị từ _START_ đến _END_ trên tổng số _TOTAL_ dòng",
                "sEmptyTable": "Không có dữ liệu",
                "sInfoFiltered": " - lọc ra từ _MAX_ dòng",
                "sLengthMenu": "Hiển thị _MENU_ dòng",
                "sProcessing": "Đang xử lý..."
            },
            "aoColumnDefs": [
                {
                    "visible": false, "targets": 0
                }
            ],
            "dom": 'T<"clear">lfrtip',
            "tableTools": {
                "sSwfPath": "/Content/ace/assets/swf/copy_csv_xls_pdf.swf",
                "aButtons": [
        {
            "sExtends": "copy",
            "oSelectorOpts": { filter: 'applied', order: 'current' }
        },
        {
            "sExtends": "xls",
            "oSelectorOpts": { filter: 'applied', order: 'current' },
            "sFileName": "Báo cáo khoảng thời gian-@ViewBag.Start-@ViewBag.End .xls"
        },
        {
            "sExtends": "print",
            "oSelectorOpts": { filter: 'applied', order: 'current' },
        }
                ]
            }
        }).fnSetFilteringDelay(delaySearch);
    });


    //HuyNQ - View line chart flow hour
    var timeSet = [];
    var delivery = [];
    var atStore = [];
    var takeAway = [];
    var listData = @Html.Raw(Json.Encode(@Model));
    for (var i = 0; i < listData.length; i++) {
        timeSet[i] = listData[i].StartTime +"-" +listData[i].EndTime;
        takeAway[i] = listData[i].TakeAway;
        atStore[i] = listData[i].AtStore;
        delivery[i] = listData[i].Delivery;
    }
    $(function () {
        $('#container').highcharts({
            chart: {
                type: 'column'
            },
            title: {
                text: 'Biểu Đồ kinh Doanh Theo Giờ'
            },
            subtitle: {
                text: ''
            },
            xAxis: {
                categories: timeSet,
                crosshair: true
            },
            yAxis: {
                min: 0,
                title: {
                    text: 'Số Lượng'
                }
            },
            tooltip: {
                headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
                pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
                    '<td style="padding:0"><b>{point.y} sản phẩm</b></td></tr>',
                footerFormat: '</table>',
                shared: true,
                useHTML: true
            },
            plotOptions: {
                column: {
                    pointPadding: 0.2,
                    borderWidth: 0
                }
            },
            series: [{
                name: 'Tại chỗ',
                data: atStore

            }, {
                name: 'Mang đi',
                data: takeAway

            }, {
                name: 'Giao Hàng',
                data: delivery

            }]
        });
    });

</script>