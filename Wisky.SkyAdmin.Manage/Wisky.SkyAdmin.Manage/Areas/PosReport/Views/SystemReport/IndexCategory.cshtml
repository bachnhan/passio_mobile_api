@using HmsService.ViewModels
@model IEnumerable<ProductCategoryViewModel>
@{
    ViewBag.Title = "Báo cáo doanh thu theo ngành hàng";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    List<StoreViewModel> stores = (List<StoreViewModel>)ViewBag.Stores;
}
<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-md-6">
                <h3>Báo cáo ngành hàng</h3>
                <h5 data-role="small-date" id="dateRange"></h5>
            </div>
            <div class="col-md-6 text-right">
                <button type="submit" id="exportAllStore" class="btn btn-primary btn-sm">
                    <i class="fa fa-download"></i>
                    Xuất ra file Excel
                </button>

                <button type="submit" id="exportOneStore" class="btn btn-primary btn-sm">
                    <i class="fa fa-download"></i>
                    Xuất ra file Excel
                </button>
            </div>
        </div>
        <hr />

        <div class="row" style="margin-top: 19px;">
            <div class="col-md-12">
                <form id="" class="form-inline">

                    <div class="input-group myGroupChooseWeek" style="display: inline-flex;margin-right: 15px;">
                        <label class="right-icon">Danh mục: &nbsp;</label>
                        <div class="styled-select blue semi-square" style="width: 80px;">
                            <select id="categoryId">
                                <option value="0">Tất cả</option>
                                @foreach (var item in Model)
                                {
                                    <option value="@item.CateID">@item.CateName</option>
                                }

                            </select>
                        </div>
                    </div>

                    <div class="input-group myGroupChooseWeek" style="margin-right: 15px;display: inline-flex;">
                        <label class="right-icon">Nhóm: &nbsp;</label>
                        <div class="styled-select blue semi-square" style="width: 80px;">
                            <select id="storeGroup" onchange="loadStoresCombobox()"></select>
                        </div>
                    </div>
                    <div class="input-group myGroupChooseWeek" style="display: inline-flex">
                        <label class="right-icon">Cửa hàng: &nbsp;</label>
                        <div class="styled-select blue semi-square" style="width: 80px;">

                            <select id="storeCategoryReport">
                                <option value="0">Tất cả</option>
                                @foreach (var item in stores)
                                {
                                    <option value="@item.ID">@item.Name</option>
                                }

                            </select>
                        </div>
                    </div>
                    <div class="input-group pull-right">
                        <!-- Daterange picker -->
                        @*<div class="dateTime">
                                <div id="reportrange" class="fg-line m-t-5">
                                    <input type="text" id="date-string" readonly class="form-control text-center"/>
                                    <a class="myCelenderA"><i class="fa fa-calendar"></i></a>
                                </div>

                            </div>*@

                        <div class="dateTime width230 pull-right">
                            <div class="fg-line m-t-5">
                                <div id="reportrange">
                                    <input id="date-string" readonly class="form-control text-center">
                                    <a class="myCelenderA" id=""><i class="fa fa-calendar"></i></a>
                                </div>
                            </div>
                        </div>
                        <div class="input-group-btn FindButtonDateTime">
                            <a class="btn btn-primary btn-sm FindDateTime" id="btnSearch" style="margin-top: -5px;">
                                <i class="left-icon fa fa-search"></i>  Tìm
                            </a>
                        </div>


                    </div>
                    @*<div class="input-group">
                            <div class="date-picker">
                                <input type="text" id="date-string" readonly="">
                                <a id="reportrange"><i class="fa fa-calendar"></i></a>
                            </div><!-- /input-group -->
                            <div class="input-group-btn">
                                <a class="btn btn-success btn-sm" id="btnSearch">
                                    <i class="left-icon fa fa-search"></i>Tìm
                                </a>
                            </div>
                        </div>*@
                    <input type="text" id="sTime" name="startTime" placeholder="Chọn giờ bắt đầu" hidden="hidden" />
                    <input type="text" id="eTime" name="endTime" placeholder="Chọn giờ kết thúc" hidden="hidden" />
                </form>
            </div>
        </div>


    </div>

    <div class="card-padding">
        <div id="container" style="min-width: 310px; height: 400px;"></div>
        <div role="tabpanel" class="tab-pane fade in active" id="datatable">
            <table id="categoryReport" class="table table-striped table-bordered table-hover" style="width: 100% !important">
                <thead>
                    <tr>
                        <th>
                            <label class="">STT</label>
                        </th>
                        <th>
                            <label class="">Tên danh mục</label>
                        </th>
                        <th>
                            <label class="">Số lượng sản phẩm</label>
                        </th>
                        <th>
                            <label class="">Tổng doanh thu</label>
                        </th>
                        <th>
                            <label class="">Giảm giá</label>
                        </th>
                        <th>
                            <label class="">Tỉ lệ xuất hiện<br /><small>hóa đơn/Tổng hóa đơn</small> </label>
                        </th>
                        <th>
                            <label class="">Tỉ lệ đóng góp doanh số</label>
                        </th>
                        <th>
                            <label class="">So sánh</label>
                        </th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>

    <div class="modal fade " tabindex="-1" id="store-comparison-modal" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content" style="width: 1314px; margin-left: -198px;">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title text-center"></h4>
                </div>
                <!-- MODAL BODY END -->
                <div class="modal-body">
                    <div class="row">
                        <!-- COMPARISON CHART -->
                        <div class="col-md-9">
                            <div id="comparison-container" style="width:885px;height:auto"></div>
                        </div><!-- COMPARISON CHART END -->
                        <!-- STORE FILTER -->
                        <div class="col-md-3">
                            <!-- CHECK BOXES FOR CHOOSING STORE -->
                            <div id="store-filter" class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                <div class="row">

                                </div>
                            </div><!-- CHECK BOXES FOR CHOOSING STORE END -->
                            <!-- SELECT ALL AND UNSELECT ALL -->
                            <div id="store-filter-option" class="col-lg-12 col-md-12 col-sm-12 col-xs-12" style="margin-top: 10px">
                                <button class="btn btn-primary btn-sm" id="filter-select-all">Chọn tất cả</button>
                                <button class="btn btn-success btn-sm" id="filter-unselect-all">Hủy chọn tất cả</button>
                            </div><!-- SELECT ALL AND UNSELECT ALL END -->
                        </div><!-- STORE FILTER -->
                    </div>
                </div><!-- MODAL BODY END -->
            </div>
        </div>
    </div>
</div>
@*<div class="page-content">
        <div class="page-header">
            <div class="row">
                <div class="col-md-4">
                    <h1>Báo cáo ngành hàng</h1>
                    <h1><small data-role="small-date" id="dateRange"></small></h1>
                </div>
                <div class="col-md-8 row">
                    <div class="col-md-4">
                        <div class="input-group">
                            <label class="right-icon">Danh mục:</label>
                            <select id="categoryId">
                                <option value="0">Tất cả</option>
                                @foreach (var item in Model)
                                {
                                <option value="@item.CateID">@item.CateName</option>
                                }

                            </select>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="input-group">
                            <label class="right-icon">Cửa hàng:</label>
                            <select id="storeCategoryReport">
                                <option value="0">Tất cả</option>
                                @foreach (var item in list)
                                {
                                <option value="@item.ID">@item.Name</option>
                                }

                            </select>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="input-group">
                            <div class="date-picker">
                                <input type="text" id="date-string" readonly="">
                                <a id="reportrange"><i class="fa fa-calendar"></i></a>
                            </div><!-- /input-group -->
                            <div class="input-group-btn">
                                <a class="btn btn-success btn-sm" id="btnSearch">
                                    <i class="left-icon fa fa-search"></i>Tìm
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
                <input type="hidden" id="sTime" />
                <input type="hidden" id="eTime" />
            </div>
        </div>
        <div id="container" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
        @*<p id="date"></p>

        <!-- export to excel -->
        <div style="margin-right:15px;">
            <button type="submit" id="exportAllStore" class="btn btn-success btn-sm">
                <i class="fa fa-download"></i>
                Xuất ra file Excel
            </button>

            <button type="submit" id="exportOneStore" class="btn btn-success btn-sm">
                <i class="fa fa-download"></i>
                Xuất ra file Excel
            </button>
        </div>
        <!-- CATEGORIES TABLE -->
        <div role="tabpanel" class="tab-pane fade in active" id="datatable">
            <table id="categoryReport" class="table table-striped table-bordered table-hover" style="width: 100% !important">
                <thead style="white-space: nowrap; text-overflow: ellipsis;">
                    <tr>
                        <th>
                            <label class="">STT</label>
                        </th>
                        <th>
                            <label class="">Tên danh mục</label>
                        </th>
                        <th>
                            <label class="">Số lượng sản phẩm</label>
                        </th>
                        <th>
                            <label class="">Tổng doanh thu</label>
                        </th>
                        <th>
                            <label class="">Giảm giá</label>
                        </th>
                        <th>
                            <label class="">Tỉ lệ xuất hiện trên hóa đơn/Tổng hóa đơn</label>
                        </th>
                        <th>
                            <label class="">Tỉ lệ đóng góp doanh số</label>
                        </th>
                        <th>
                            <label class="">So sánh</label>
                        </th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div><!-- CATEGORIES TABLE END -->
        <!-- MODAL FOR STORE COMPARISON -->
        <div class="modal fade " tabindex="-1" id="store-comparison-modal" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                        <h4 class="modal-title text-center"></h4>
                    </div>
                    <!-- MODAL BODY END -->
                    <div class="modal-body">
                        <div class="row">
                            <!-- COMPARISON CHART -->
                            <div class="col-md-9">
                                <div id="comparison-container" style="width:885px;height:auto"></div>
                            </div><!-- COMPARISON CHART END -->
                            <!-- STORE FILTER -->
                            <div class="col-md-3">
                                <!-- CHECK BOXES FOR CHOOSING STORE -->
                                <div id="store-filter" class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                    <div class="row">

                                    </div>
                                </div><!-- CHECK BOXES FOR CHOOSING STORE END -->
                                <!-- SELECT ALL AND UNSELECT ALL -->
                                <div id="store-filter-option" class="col-lg-12 col-md-12 col-sm-12 col-xs-12" style="text-align: center;margin-top: 10px">
                                    <button class="btn btn-success btn-sm" id="filter-select-all">Select all</button>
                                    <button class="btn btn-success btn-sm" id="filter-unselect-all">Unselect all</button>
                                </div><!-- SELECT ALL AND UNSELECT ALL END -->
                            </div><!-- STORE FILTER -->
                        </div>
                    </div><!-- MODAL BODY END -->
                </div>
            </div>
        </div><!-- MODAL FOR STORE COMPARISON END -->
    </div>*@

<form class="hidden" id="formCategoryReportAllExcel" action="@Url.Action("ExportCategoryAllStoreToExcel","SystemReport")">
    <input id="startTimeAll" name="startTime" />
    <input id="endTimeAll" name="endTime" />
    <input id="categoryAll" name="categoryId" />
</form>

<form class="hidden" id="formCategoryReportOneExcel" action="@Url.Action("ExportCategoryOneStoreToExcel","SystemReport")">
    <input id="startTimeOne" name="startTime" />
    <input id="endTimeOne" name="endTime" />
    <input id="categoryOne" name="categoryId" />
    <input name="storeIdReport" />
</form>

<script>
    var SystemRevenueComparisonData;

    $(document).ready(function () {
        // Load store group data
        loadStoreGroupCombobox();
        // loadStoresCombobox();

        // For saving value of comparison chart data
        SystemRevenueComparisonData = [];

        // Envent when click on the check box (Comparison chart)
        $("#store-filter").on("change", function () {
            filterStoreList = [];
            filterTotalList = [];

            $(".store-name-filter:checked").each(function () {
                filterStoreList.push($(this).val());
                filterTotalList.push($(this).data("total"));
            });

            SystemRevenueComparisonData.xAxis = filterStoreList;
            SystemRevenueComparisonData.yAxis = filterTotalList;

            setUpComparisonChart(SystemRevenueComparisonData); // Set up comparison chart
        });

        // Select all on click
        $("#store-filter-option").on("click", "#filter-select-all", function () {
            $(".store-name-filter").prop("checked", "checked");
            $("#store-filter").trigger("change");
        });

        // Unselect all on click
        $("#store-filter-option").on("click", "#filter-unselect-all", function () {
            $(".store-name-filter").removeAttr("checked");
            $("#store-filter").trigger("change");
        });

        // "So sánh" button
        $(document).on('click', '.btnComparison', function () {
            cateName = $(this).data('catname');

            $.ajax({
                url: '@Url.Action("LoadComparisonStoreReport", "SystemReport")',
                type: 'GET',
                data: { startTime: $('#sTime').val(), endTime: $('#eTime').val(), cateName: cateName, GroupID: $('#storeGroup').val(), },
                success: function (rs) {
                    $("#store-filter .row").empty();
                    //InitComparison(rs.dataTable);
                    SystemRevenueComparisonData = rs.dataChart;
                    setUpComparisonChart(SystemRevenueComparisonData);
                    var getEl = function (index, val) {
                        return $('<div/>', {
                            'class': 'col-md-6',
                            'html': [
                                $('<input/>', {
                                    'type': 'checkbox',
                                    'value': val,
                                    'class': 'nice-check nice-check-sm store-name-filter',
                                    'id': 'filter-' + index,
                                    'checked': 'checked'
                                }),
                                $('<label/>', {
                                    'type': 'checkbox',
                                    'for': 'filter-' + index,
                                    'html': val
                                }),
                            ]
                        });
                    }

                    // Add check box to modal (Store name)
                    $.each(SystemRevenueComparisonData.xAxis, function (index, value) {
                        $("#store-filter .row").append(getEl(index, value));
                    });

                    // Add more data to check box (Total amount)
                    var listCheckbox = $(".store-name-filter");
                    $.each(SystemRevenueComparisonData.yAxis, function (index, value) {
                        var checkbox = listCheckbox.eq(index);
                        checkbox.attr("data-total", value);
                    });

                    $('.modal-title').html(cateName);
                    $('#store-comparison-modal').modal('show');
                }
            });
        });

        function loadStoreGroupCombobox() {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetStoreGroup", "SystemReport")',
                success: function (result) {
                    if (result.success) {
                        $('#storeGroup').html(result.html);
                    } else {
                        ShowMessage(result.message, 3);
                    }
                },
                error: function (result) {
                    ShowMessage("Lỗi xảy ra, xin thử lại sau.", 3);
                }
            });
        }



        // Daterange picker
        function cb(start, end, label) {
            var startTime = start.format("DD/MM/YYYY"),
                endTime = end.format("DD/MM/YYYY"),
                dateString = "(" + startTime + (startTime == endTime ? "" : " - " + endTime) + ")";

            if (label != "Tùy chọn") {
                $('#date-string').val(label);
            } else {
                $("#date-string").val(dateString);
            }

            $("#sTime").val(startTime);
            $("#eTime").val(endTime);

        }
        cb(moment(), moment(), "Hôm nay");

        $('#reportrange').daterangepicker({
            "opens": "left",
            "maxDate": moment(),
            locale: {
                format: 'DD/MM/YYYY'
            },
            ranges: {
                'Hôm nay': [moment(), moment()],
                'Hôm qua': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                'Tuần này': [moment().startOf('isoweek'), moment().endOf('isoweek')],
                'Tuần trước': [moment().subtract(1, 'week').startOf('isoweek'), moment().subtract(1, 'week').endOf('isoweek')],
                'Tháng này': [moment().startOf('month'), moment().endOf('month')],
                'Tháng trước': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
            }
        }, cb);

        startDate = $("#sTime").val();
        endDate = $("#eTime").val();
        var dateString = "(" + startDate + (startDate == endDate ? "" : " - " + endDate) + ")";
        $("#dateRange").html(dateString);

        categoryReportAllStore();
    });

    function loadStoresCombobox() {
        $.ajax({
            type: 'GET',
            url: '@Url.Action("GetStoreByGroup", "SystemReport")',
            data: {
                "GroupID": $('#storeGroup').val(),
            },
            success: function (result) {
                if (result.success) {
                    $('#storeCategoryReport').html(result.html);
                } else {
                    ShowMessage(result.message, 3);
                }
            },
            error: function (result) {
                ShowMessage("Lỗi xảy ra, xin thử lại sau.", 3);
            }
        });
    }

    $('#btnSearch').on('click', function () {
        sStartDate = $("#sTime").val();
        sEndDate = $("#eTime").val();
        dStartDate = moment(sStartDate, 'DD/MM/YYYY');
        dEndDate = moment(sEndDate, 'DD/MM/YYYY');

        if (sStartDate.length > 16 || sEndDate.length > 16) {
            ShowMessage("Vui lòng nhập thời gian đúng định dạng", 3);
            return;
        }

        if ((sStartDate.length > 0 && sEndDate.length == 0) || (sEndDate.length > 0 && sStartDate.length == 0) || (dStartDate > dEndDate)) {
            ShowMessage("Thời gian bắt đầu và kết thúc không phù hợp", 3);
            return;
        }

        if ($('#storeCategoryReport').val() == 0) {
            categoryReportAllStore();
        }
        else {
            categoryReportOneStore();
        }

        var dateString = "(" + sStartDate + (sStartDate == sEndDate ? "" : " - " + sEndDate) + ")";
        $("#dateRange").html(dateString);
    });

    var categoryReportOneStore = function () {
        $('#container').hide();
        $('#exportOneStore').show();
        $('#exportAllStore').hide();
        $.ajax({
            url: '@Url.Action("CategoryReportOneStore", "SystemReport")',
            type: 'GET',
            data: { 'startTime': $('#sTime').val(), 'endTime': $('#eTime').val(), 'storeIdReport': $('#storeCategoryReport').val(), 'catetoryId': $('#categoryId').val() },
            success: function (rs) {
                initCategoryReportDatatable(rs.dataTable, false);
                if ($('#categoryId').val() == 0) {
                    $('#container').show();
                    setUpChart(rs.chartData);
                } else {
                    $('#container').hide();
                }
            }
        });
    };

    var categoryReportAllStore = function () {

        $('#exportAllStore').show();
        $('#exportOneStore').hide();
        $.ajax({
            url: '@Url.Action("CategoryReportAllStore", "SystemReport")',
            type: 'GET',
            data: { 'startTime': $('#sTime').val(), 'endTime': $('#eTime').val(), 'catetoryId': $('#categoryId').val(), 'brandId': 1 },
            success: function (rs) {
                //console.log(rs);
                initCategoryReportDatatable(rs.dataTable, true);
                if ($('#categoryId').val() == 0) {
                    $('#container').show();
                    setUpChart(rs.chartData);
                } else {
                    $('#container').hide();
                }
            }
        });
    };

    var initCategoryReportDatatable = function (data, visible) {
        //console.log(data);
        $('#datatable').html('<table id="categoryReport" class="table table-striped table-bordered table-hover" style="width: 100% !important">'
            + '<thead style="white-space: nowrap; text-overflow: ellipsis;">'
                + '<tr>'
                    + '<th>'
                        + '<label class="">STT</label>'
                    + '</th>'
                    + '<th>'
                        + '<label class="">Tên danh mục</label>'
                    + '</th>'
                    + '<th>'
                        + '<label class="">Số lượng sản phẩm</label>'
                    + '</th>'
                    + '<th>'
                        + '<label class="">Tổng doanh thu</label>'
                    + '</th>'
                    + '<th>'
                        + '<label class="">Giảm giá</label>'
                    + '</th>'
                    + '<th>'
                        + '<label class="">Tỉ lệ xuất hiện trên hóa đơn/Tổng hóa đơn</label>'
                    + '</th>'
                    + '<th>'
                        + '<label class="">Tỉ lệ đóng góp doanh số</label>'
                    + '</th>'
                    + '<th>'
                        + '<label class="">So sánh</label>'
                    + '</th>'
                + '</tr>'
            + '</thead>'
            + '<tbody></tbody>'
        + '</table>');

        $("#categoryReport").dataTable({
            "bFilter": false,
            "bSort": false,
            "bRetrieve": true,
            "bScrollCollapse": true,
            "data": data,
            "iDisplayLength": 15,
            "aLengthMenu": [15, 50],
            "oLanguage": {
                "sZeroRecords": "Không có dữ liệu phù hợp",
                "sInfo": "Hiển thị từ _START_ đến _END_ ",
                "sEmptyTable": "Không có dữ liệu",
                "sInfoFiltered": " ",
                "sLengthMenu": "Hiển thị _MENU_ dòng",
                "sProcessing": "Đang xử lý...",
                "oPaginate": {
                    "sNext": "<i class='fa fa-chevron-right'></i>",
                    "sPrevious": "<i class='fa fa-chevron-left'></i>"
                }

            },
            "aoColumnDefs": [
                {
                    "aTargets": [0, 2, 3, 4, 6],
                    "sClass": "text-center"
                },
                {
                    "aTargets": [0, 1, 2, 3],
                    "bSortable": false
                },
                {
                    "aTargets": [7],
                    "mRender": function (data, type, o) {
                        return '<a data-catname="' + o[7] + '" class="btn btn-sm btn-info btnComparison"><span class="fa fa-tasks"></span></a>';
                    }
                },
                {
                    "aTargets": [5],
                    "visible": false
                },
                {
                    "aTargets": [7],
                    "visible": visible
                }
            ],
            "bAutoWidth": false
        }).fnSetFilteringDelay(delaySearch);
    };

    var setUpChart = function (data) {
        var categoryTemp = data.listCategories;
        var totalProduct = data.totalProduct;
        var categoryChart = [];
        for (var i = 0; i < categoryTemp.length; i++) {
            var array = { "name": categoryTemp[i].Item1, "y": (categoryTemp[i].Item2 / totalProduct) * 100, "drilldown": categoryTemp[i].Item1 };
            categoryChart.push(array);
        }

        $('#container').highcharts({
            chart: {
                type: 'column'
            },
            title: {
                text: 'Biểu đồ ngành hàng'
            },
            subtitle: {
                text: $("#date").html()
            },
            xAxis: {
                type: 'category'
            },
            yAxis: {
                title: {
                    text: ''
                }

            },
            legend: {
                enabled: false
            },
            plotOptions: {
                series: {
                    borderWidth: 0,
                    dataLabels: {
                        enabled: true,
                        format: '{point.y:.1f}%'
                    }
                }
            },
            tooltip: {
                valueDecimals: 1,
                valueSuffix: '%'
            },
            series: [{
                name: "Tỷ lệ",
                colorByPoint: true,
                data: categoryChart
            }],
        });
    }

    // export to excel
    $(document).on('click', '#exportAllStore', function () {
        $('#startTimeAll').val($('#sTime').val());
        $('#endTimeAll').val($('#eTime').val());
        $('#categoryAll').val($('#categoryId').val())
        $('#formCategoryReportAllExcel').submit();
        @*$.ajax({
            url: '@Url.Action("ExportCategoryAllStoreToExcel","SystemReport")',
            type: 'GET',
            data: { 'startTime': $('#sTime').val(), 'endTime': $('#eTime').val(), 'storeIdReport': $('#storeCategoryReport').val(), 'catetoryId': $('#categoryId').val() },
            success: function (rs) {
                if (rs.success == true) {
                    ShowMessage('Xuất file Excel thành công <br/> ' + rs.fileName, 3);
                } else {
                    ShowMessage('Xuất file Excel thất bại', 1);
                }
            }
        });*@
    });
    // export to excel
    $(document).on('click', '#exportOneStore', function () {
        $('#startTimeOne').val($('#sTime').val());
        $('#endTimeOne').val($('#eTime').val());
        $('#categoryOne').val($('#categoryId').val());
        $('input[name=storeIdReport]').val($('#storeCategoryReport').val());
        $('#formCategoryReportOneExcel').submit();
        @*$.ajax({
            url: '@Url.Action("ExportCategoryOneStoreToExcel","SystemReport")',
            type: 'GET',
            data: { 'startTime': $('#sTime').val(), 'endTime': $('#eTime').val(), 'storeIdReport': $('#storeCategoryReport').val(), 'catetoryId': $('#categoryId').val() },
            success: function (rs) {
                if (rs.success == true) {
                    ShowMessage('Xuất file Excel thành công <br/> D:\\' + rs.fileName, 3);
                } else {
                    ShowMessage('Xuất file Excel thất bại', 1);
                }
            }
        });*@
    });

    function setUpComparisonChart(data) {
        $('#comparison-container').highcharts({
            chart: {
                type: 'column'
            },
            title: {
                text: 'Tổng thu'
            },
            subtitle: {
                text: $("#date").html()
            },
            xAxis: {
                categories: data.xAxis,
                crosshair: true
            },
            yAxis: {
                min: 0,
                title: {
                    text: 'Tổng thu'
                }
            },
            tooltip: {
                headerFormat: '<span style="font-size:12px;font-weight:bold">{point.key}</span><table>',
                pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
                    '<td style="padding:0"><b> {point.y} VNĐ</b></td></tr>',
                footerFormat: '</table>',
                shared: true,
                useHTML: true
            },
            plotOptions: {
                column: {
                    pointPadding: 0.2,
                    borderWidth: 0,
                    colorByPoint: true,
                }
            },
            series: [{
                name: 'Tổng thu',
                data: data.yAxis
            }]
        });
    }

</script>
