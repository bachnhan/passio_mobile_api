@using HmsService.ViewModels
@{
    ViewBag.Title = "Index";
    var currentStoreDomain = this.ViewBag.CurrentDomain as StoreDomainViewModel;
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-md-8">
                <h3>Danh sách sản phẩm</h3>
            </div>
            <div class="col-md-4 text-right">
            </div>
        </div>
        <hr />
    </div>
    <div class="card-padding">
        <!-- Customer Table -->
        <div class="row">
            <div class="tab-content">
                <div role="tabpanel" class="tab-pane active" id="allcust">
                    <!-- Datatable -->
                    <div class="col-md-12">

                        <table id="UserDatatable" class="table table-striped table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th>
                                        <label class="">STT</label>
                                    </th>
                                    <th>
                                        <label class="">Mã sản phẩm</label>
                                    </th>
                                    <th>
                                        <label class="">Tên sản phẩm</label>
                                    </th>
                                    <th>
                                        <label class="">Tùy chọn</label>
                                    </th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@*<div id="createModal" class="modal fade" role="dialog" aria-hidden="true">
    <div class="modal-dialog" style="width: 1000px">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Sản phẩm</h4>
            </div>
            <div class="modal-body">
                <input type="hidden" id="chooseProductID" />
                <div class="row">
                    <div id="divLoadItem" class="col-md-7">
                    </div>
                    <div id="divChooseItem" class="col-md-5">
                    </div>
                </div><!-- /.modal-content -->
            </div><!-- /.modal-dialog -->
        </div>

        <div class="alert alert-block" id="alert-fail" style="top: 50%; position: fixed; width: 800px; display: none; margin-left: 50px;">
            <button type="button" class="close" data-dismiss="alert">
                &times;
            </button>
            <h4>Warning!</h4>
            Sản phẩm đang được order, hoặc còn sử dụng. Bạn không thể xóa...
        </div>
    </div>
</div>*@


@section scripts {
    <script>
        $(document).ready(function () {
            ProductDataProcess();
        });
        @*function loadCategories() {
            $.ajax({
                url: "@Url.Action("LoadProductCategory", "Products")",
                success: function (result) {
                    $('#divLoadItem').html(result);
                }
            });
        }
        function checkProductDetail(btn) {
            var idDetail = $(btn).attr("data-id");
            $('#createModal').modal('show');
            $.ajax({
                url: "@Url.Action("ListItemByPro", "Products")",
                data: {
                    productID: idDetail
                },
                success: function (result) {
                    $('#divChooseItem').html(result);
                }
            });
            $.ajax({
                url: "@Url.Action("LoadProductCategory", "Products")",
                data: {
                    productId: idDetail
                },
                success: function (result) {
                    $('#divLoadItem').html(result);
                }
            });
        }*@
        function ProductDataProcess() {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("IndexList", "Products")',
                success: function (result) {

                    //console.log(result.aaData);
                    InitUserDatatable(result.aaData);
                }
            });
        };
        function InitUserDatatable(data) {
            $("#UserDatatable").dataTable({
                "bSort": false,
                "bRetrieve": true,
                "bScrollCollapse": true,
                "data": data,
                "bProcessing": true,
                "iDisplayLength": 10,
                "aLengthMenu": [10, 25, 50],
                "oLanguage": {
                    "sSearchPlaceholder": "Mã sản phẩm",
                    "sSearch": "Tìm kiếm:",
                    "sZeroRecords": "Không có dữ liệu phù hợp",
                    "sInfo": "Hiển thị từ _START_ đến _END_ trên tổng số _TOTAL_ dòng",
                    "sEmptyTable": "Không có dữ liệu",
                    "sInfoFiltered": " - lọc ra từ _MAX_ dòng",
                    "sLengthMenu": "Hiển thị _MENU_ dòng",
                    "sProcessing": "Đang xử lý...",
                    "oPaginate": {
                        "sNext": "<i class='fa fa-chevron-right'></i>",
                        "sPrevious": "<i class='fa fa-chevron-left'></i>"
                    }

                },
                "aoColumnDefs": [
                    {
                        "bSearchable": false,
                        "aTargets": [0, 2],
                    },
                    {
                        "aTargets": [0, 1, 2],
                        "bSortable": false,
                        "sClass": "text-center"
                    },


                    {
                        "aTargets": [3],
                        "mRender": function (data, type, row) {
                            var productId = row[3];
                            //var component = '<button onclick="checkProductDetail(this);" data-id="' + productId + '" ' +
                            //    'class="btn btn-primary btn-sm" data-toggle="tooltip" title="Thành phần">' +
                            //    '<i class="glyphicon glyphicon-eye-open"></button>';
                            var component = '<button onclick="location.href=\'@Url.Action("ProductDetail")/' + productId + '\'" data-id="' + productId + '" ' +
                                'class="btn btn-primary btn-sm" data-toggle="tooltip" title="Thành phần">' +
                                '<i class="glyphicon glyphicon-eye-open"></button>';
                            return component;
                        },
                        "bSortable": false,
                        "sClass": "text-center"
                    }
                ],
                "bAutoWidth": false,
            });

        }



        //redraw datatable without reload
        function reDrawDatatable(id) {
            $.fn.dataTableExt.oApi.fnStandingRedraw = function (oSettings) {
                if (oSettings.oFeatures.bServerSide === false) {
                    var before = oSettings._iDisplayStart;
                    oSettings.oApi._fnReDraw(oSettings);
                    //iDisplayStart has been reset to zero - so lets change it back
                    oSettings._iDisplayStart = before;
                    oSettings.oApi._fnCalculateEnd(oSettings);
                }
                //draw the 'current' page
                oSettings.oApi._fnDraw(oSettings);
            };
            $(id).dataTable().fnStandingRedraw();
        }

        //user datatable
        function RefreshTable() {
            reDrawDatatable("#UserDatatable");
        }

        function onDeleteButtonClick(btn) {
            ShowConfirm("Bạn có chắc là mình muốn xóa sản phẩm này không??", function () {
                var id = $(btn).attr("data-id");
                window.location.href = "@this.Url.Action("Delete", new {parameters = currentStoreDomain.Directory})/" + id;
            });
        }

    </script>
}