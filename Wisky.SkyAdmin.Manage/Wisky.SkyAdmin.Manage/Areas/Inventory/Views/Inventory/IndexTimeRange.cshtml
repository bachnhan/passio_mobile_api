
@{
    ViewBag.Title = "IndexTimeRange";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    IEnumerable<HmsService.ViewModels.ProductItemCategoryViewModel> productCategories = ViewBag.ProductCategories;
    IQueryable<HmsService.ViewModels.StoreViewModel> stores = ViewBag.Stores;

    //var currentStoreDomain = this.ViewBag.CurrentDomain as HmsService.ViewModels.StoreDomainViewModel;
    //var storeId = 0;
    //if (ViewContext.RouteData.Values["storeId"] != null)
    //{
    //    storeId = int.Parse(ViewContext.RouteData.Values["storeId"]?.ToString());
    //}
    //var store = Utils.GetStore(storeId);
}

<style>
    .input-group .input-group-btn > a.btn {
        margin-top: 0px !important;
    }
</style>

<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-md-12">
                <h3>Tồn kho theo thời gian</h3>
                <h5 class="smallDate" data-role="small-date">@ViewBag.CurDate</h5>
            </div>
        </div>
        <hr />
    </div>

    <div class="card-padding">
        <div class="row">
            <div class="col-md-3">
                <div class="form-group">
                    <select class="selectpicker" id="item-categories" title="Tất cả loại nguyên liệu" multiple>
                        @foreach (var item in productCategories)
                        {
                            <option value="@item.CateID">@item.CateName</option>
                        }
                    </select>
                </div>
            </div>
            @if (stores.Count() != 0)
            {
                @*<div class="col-md-3">
                    <button type="button" id="btn-store" class="btn btn-primary dropdown-toggle" data-toggle="dropdown">
                        <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu" style="overflow-y : scroll; height: 300px; max-height: 300px" id="store-menu"></ul>
                    <input type="hidden" id="storeId" name="storeId" value="0" />
                </div>*@
                <div class="col-md-3">
                    <div class="form-group">
                        <select class="selectpicker" id="selectedStore">
                            <option value="0" selected>Tất cả cửa hàng</option>
                            @foreach (var item in stores)
                            {
                                <option value="@item.ID">@item.Name</option>
                            }
                        </select>
                    </div>
                </div>
            }
            <div class="col-md-6 pull-right text-right">
                <div class="pull-right text-right myDatetimePicker">
                    <div class="input-group">
                        <!-- Daterange picker -->
                        <div class="dateTime width230 pull-right">
                            <div class="fg-line m-t-5">
                                <div id="reportrange">
                                    <input id="date-string" readonly class="form-control text-center">
                                    <a class="myCelenderA" id=""><i class="fa fa-calendar"></i></a>
                                </div>
                            </div>
                        </div>
                        <div class="input-group-btn FindButtonDateTime">
                            <a class="btn btn-primary btn-sm FindDateTime" id="btnSearch" style="margin-top: -5px;">
                                <i class="left-icon fa fa-search"></i> Tìm
                            </a>
                        </div>
                    </div>
                    <input type="hidden" id="sTime" />
                    <input type="hidden" id="eTime" />
                </div>

            </div>

        </div>

        <table class="table table-striped table-hover table-bordered" style="width:100%" id="main-table">
            <thead>
                <tr>
                    <th><label>STT</label></th>
                    <th><label>Tên sản phẩm</label></th>
                    <th><label>Phân loại</label></th>
                    <th><label>Đơn vị</label></th>
                    <th><label>Đơn giá</label></th>
                    <th><label>Lý thuyết</label></th>
                    <th><label>Thực tế</label></th>
                    <th><label>Chênh lệch</label></th>
                    <th><label>Tổng tiền</label></th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>
<div id="ViewItemModal" class="modal" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel"
     aria-hidden="true" style="outline: none">
</div>
<div class="modal fade" id="detailItem" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content" id="detailItem-content">

        </div>
    </div>
</div>

<script type="text/javascript">
    var status = "0";
    var inStockDate = "";
    var selectedCategories = [];

    $(document).ready(function () {
        $('.selectpicker').selectpicker({
            size: 10,
        });

        function cb(start, end, label) {
            var startTime = start.format("DD/MM/YYYY"),
                endTime = end.format("DD/MM/YYYY"),
                dateString = "(" + startTime + (startTime == endTime ? "" : " - " + endTime) + ")";

            if (label != "Tùy chọn") {
                $('#date-string').val(label);
            } else {
                $("#date-string").val(dateString);
            }

            $("#sTime").val(startTime);
            $("#eTime").val(endTime);
            $('[data-role=small-date]').html(dateString);
        };

        cb(moment(), moment(), "Hôm nay");
            
        $('#reportrange').daterangepicker({
            "opens": "left",
            "maxDate": moment(),
            locale: {
                format: 'DD/MM/YYYY'
            },
            ranges: {
                'Hôm nay': [moment(), moment()],
                'Hôm qua': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                'Tuần này': [moment().startOf('isoweek'), moment().endOf('isoweek')],
                'Tuần trước': [moment().subtract(1, 'week').startOf('isoweek'), moment().subtract(1, 'week').endOf('isoweek')],
                'Tháng này': [moment().startOf('month'), moment().endOf('month')],
                'Tháng trước': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
            }
        }, cb);
        //"Tìm" button event on click
        $('#btnSearch').on('click', function () {
            sStartDate = $("#sTime").val();
            sEndDate = $("#eTime").val();
            dStartDate = moment(sStartDate, 'DD/MM/YYYY');
            dEndDate = moment(sEndDate, 'DD/MM/YYYY');

            if (sStartDate.length > 16 || sEndDate.length > 16) {
                ShowMessage("Vui lòng nhập thời gian đúng định dạng", 3);
                return;
            }

            if ((sStartDate.length > 0 && sEndDate.length == 0) || (sEndDate.length > 0 && sStartDate.length == 0) || (dStartDate > dEndDate)) {
                ShowMessage("Thời gian bắt đầu và kết thúc không phù hợp", 3);
                return;
            }

            //$("#storeReportDatatable").dataTable().fnDestroy();
            //InitDatatable();
            if (sStartDate == sEndDate) {
                $('[data-role=small-date]').html(sStartDate);
            }
            else {
                $('[data-role=small-date]').html(sStartDate + " - " + sEndDate);
            }

            RefreshTable();
        });

        $('#item-categories').on('change', function () {
            var select = document.getElementById("item-categories");
            selectedCategories.length = 0;
            for (var i = 0; i < select.length; i++) {
                if (select.options[i].selected) selectedCategories.push(select.options[i].value);
            }
        });

        //var datetest = $('#sTime').data('daterangepicker').endDate.toISOString();
        window.TableHistory = $('#main-table').dataTable({
            //"bPaginate": false,
            "bAutoWidth": true,
            "bServerSide": true,
            "bScrollCollapse": true,
            "sAjaxSource": "@Url.Action("LoadIndexTimeRange","Inventory")",
            "bProcessing": true,
            "bSort": false,
            //"bScrollCollapse": true,
            "bInfo": false,
            //"bPaginate": false,
            "lengthMenu": [[50, 100], [50, 100]],
            "fnServerParams": function (aoData) {
                aoData.push({ "name": "cateId", "value": selectedCategories.toString() });
                aoData.push({ "name": "startTime", "value": $("#sTime").val() });
                aoData.push({ "name": "endTime", "value": $("#eTime").val() });
                aoData.push({ "name": "selectStore", "value": $('#selectedStore').val() });
            },
            "columns": [
                { "data": "No" },
                //{ "data": "itemName" },
                {
                    "data": "itemName"
                },
                { "data": "categoryName" },
                { "data": "unit" },
                { "data": "unitPrice" },
                { "data": "theoryQuantity" },
                { "data": "realQuantity" },
                {
                    "data": function (data) {
                        var labels = data.checkingQuantity;
                        return "<label>" + labels + "</label>"
                    }
                },
                { "data": "TotalRealAmount" },
            ],
            "oLanguage": {
                "sSearch": "Tìm kiếm:",
                "sZeroRecords": "Không có dữ liệu phù hợp",
                "sInfo": "Hiển thị từ _START_ đến _END_ trong tổng số _TOTAL_",
                "sEmptyTable": "Không có dữ liệu",
                "sInfoFiltered": " ",
                "sLengthMenu": "Hiển thị _MENU_ dòng",
                "sProcessing": "Đang xử lý...",
                "oPaginate": {
                    "sNext": "<i class='fa fa-chevron-right'></i>",
                    "sPrevious": "<i class='fa fa-chevron-left'></i>"
                },
                "sSearchPlaceholder": "Tên sản phẩm"

            },
            "columnDefs": [
                {
                    "aTargets": [0, 2, 3, 4, 5, 6, 7, 8],
                    "sClass": "text-center"
                }
                //{
                //    "visible": false, "targets": []
                //},
            ],
        }).fnSetFilteringDelay(delaySearch);
    })


    function loadAllStore() {

        $.ajax({
            url: '@Url.Action("LoadAllStoreById")',
            type: "POST",
            success: function (result) {
                if (result != null && result.length > 0) {
                    //render to store dropdown
                    $('#store-menu').html();
                    $('#store-menu').append("<li onclick=\"changeStore(0, \'Tất cả cửa hàng\')\"><a href=\'#\'>Tất cả cửa hàng</a></li>");
                    for (var i = 0; i < result.length; i++) {
                        $('#store-menu').append("<li onclick=\"changeStore(" + result[i].storeId + ", \'" + result[i].Name + "\')\"><a href=\'#\'>" + result[i].Name + "</a></li>");
                    }

                    //default store
                    $('#btn-store').html('Tất cả cửa hàng &#9660');
                    $('#storeId').val(0);

                } else {
                    $('#btn-store').html('Không tìm thấy cửa hàng');
                    $('#storeId').val(-1);
                }
            },
            error: function (error) {
                alert("Có lỗi xảy ra, vui lòng thử lại. Nếu lỗi tiếp tục tiếp diễn xin vui lòng liên hệ admin");
            }
        });
    }

    function changeStore(strId, storeName) {
        $('#btn-store').html(storeName + " &#9660");
        $('#storeId').val(strId);

        RefreshTable();

    }

    function checkDetailItem(btn) {
        var idDetail = $(btn).attr("data-id");
        $.ajax({
            url: "@Url.Action("CheckDetailItem", "Inventory")",
            data: {
                itemId: idDetail,
                startTime: $("#date-string").val(),
                endTime: $("#date-string").val()
            },
            success: function (result) {
                $('#detailItem').modal('show');
                $('#detailItem-content').html(result);
            }
        });
    }

    function RefreshTable() {
        var oTable = $("#main-table").dataTable();
        oTable._fnPageChange(0);
        oTable._fnAjaxUpdate();
    }

    //function refreshRowData() {
    //    var table = $('#main-table').dataTable();
    //    table._fnAjaxUpdate();
    //}
</script>
