@model HmsService.ViewModels.PromotionEditViewModel

@{
    ViewBag.Title = "PromotionApply";
}
@{
    Layout = null;
}


<div class="modal-dialog modal-lg">
    <div class="modal-content">
        <div class="modal-header">
            <div class="row">
                <div class="card-header" style="padding: 0px 18px;">

                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">
                            ×
                        </span>
                    </button>
                    <h3>
                        Áp dụng khuyến mãi
                    </h3>

                </div>
            </div>
        </div>
        <div class="modal-body">
            <div class="card-body">


                <div class="row col-md-11 col-md-offset-1" style="margin-bottom: 10px;">
                    <div class="" style="margin-top: 5px;margin-right:15px;float:left;">
                        <lable class="control-label" style="font-size: 17px;"> Khuyến mãi </lable>

                    </div>
                    <div class="" style="float:left">

                        <select id="promotionSelect" multiple="multiple" style="width:475px;">
                            @foreach (var group in Model.AvailableGroup)
                            {
                            <optgroup label="@group.Text">
                                @foreach (var item in Model.AvailablePromotion)
                                    {
                                        if (int.Parse(group.Value) == item.Group)
                                        {
                                    <option name="promoOption" value="@item.PromotionID">@item.PromotionName</option>

                                        }
                                    }
                            </optgroup>

                            }
                        </select>
                    </div>
                </div>
                <p></p>
                <div role="tabpanel" class="tab-pane fade in active" id="order">
                    <div class="row">

                        <div class="col-md-10 col-md-offset-1">
                            <table id="showTable" style="margin-bottom: 24px;" class="table table-striped table-bordered table-hover">
                                <thead style="white-space: nowrap;">
                                    <tr>
                                        <th>
                                            <label class="">Tên</label>
                                        </th>
                                        <th>
                                            <label class="">Đơn giá</label>
                                        </th>
                                        <th>
                                            <label class="">SL</label>
                                        </th>
                                        <th>
                                            <label class="">Giảm giá (%)</label>
                                        </th>
                                        <th>
                                            <label class="">Tổng cộng</label>
                                        </th>
                                        <th>
                                            <label class="">Xóa</label>
                                        </th>
                                    </tr>
                                </thead>
                                <tbody id="showTableContent"></tbody>
                                <template id="tmpItemRow">
                                    <tr>
                                        <td data-role="name"></td>
                                        <td data-role="price"></td>
                                        <td data-role="quantity"></td>
                                        <td data-role="discount"></td>
                                        <td data-role="total"></td>
                                        <td>
                                            <button class="btn btn-xs btn-danger" data-action="delete-ordered-item"><i class="glyphicon glyphicon-trash"></i></button>
                                        </td>
                                    </tr>
                                </template>
                            </table>
                            <div class="row">
                                <label class="pull-right" style="font-size:15px;margin-right:19px;" id="bill-Discount"></label>
                            </div>
                            <div class="row ">
                                <label style="font-size:15px;margin-right: 19px;margin-top:0px;" id="total-Item-money" class="pull-right text-bold"></label>
                            </div>
                            <div class="row ">
                                <label style="font-size:15px;margin-right: 19px;margin-top:0px;" id="gift-discount-amount" class="pull-right text-bold"></label>
                            </div>


                            <label style="font-size: 17px;margin-bottom:10px;">Sản phẩm tặng kèm</label>
                            <table class="table table-striped table-bordered table-hover" id="showGiftTable">
                                <thead>
                                    <tr>
                                        <th>Tên sản phẩm</th>
                                        <th>Số lượng</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                                <template id="tblGift">
                                    <tr>
                                        <td data-role="id" style="display: none"></td>
                                        <td data-role="name"></td>
                                        <td data-role="quantity"></td>
                                    </tr>
                                </template>

                            </table>

                        </div>


                    </div>
                </div>
            </div>

        </div>

        <div class="modal-footer">
            <div class="row text-right">
                <div><button onclick="saveOrder()" style="margin-right: 11.55%;" type="button" class="btn btn-primary">Hoàn tất</button></div>
            </div>
        </div>
    </div>
</div>

<script>
    // dùng để lưu promotionId
    var arrayTemp = new Array();


    $(document).ready(function () {
        //$('#total-Item-money').html('Tổng cộng : ' + toMoney(window.OnlineOrder.getTotal(), ',', ''))
        $('#promotionSelect').select2();

        loadTable(false);

    });

    //reset values to default
    $('#btn-order').click(function () {
        var OrderDetails = window.OnlineOrder.Order.OrderDetails;
        for (var i = 0; i < OrderDetails.length; i++) {
            OrderDetails[i].DiscountPercent = 0;
            OrderDetails[i].FinalAmount = OrderDetails[i].TotalAmount;
        }
        window.OnlineOrder.Order.DiscountPercent = 0;
    });


    //Load data to Table
    function loadTable(isDataAvail) {
        var OrderDetails = window.OnlineOrder.Order.OrderDetails;




        for (var i = 0; i < OrderDetails.length; i++) {
            var $tmpItemRow = $($('#tmpItemRow').html().trim());
            $tmpItemRow.attr('data-id', OrderDetails[i]['Id']);
            $tmpItemRow.attr('data-role', 'order-detail');

            $tmpItemRow.find('[data-role="name"]').html(OrderDetails[i]['Name']);
            $tmpItemRow.find('[data-role="price"]').html(OrderDetails[i]['UnitPrice']);
            $tmpItemRow.find('[data-role="quantity"]').html(OrderDetails[i]['Quantity']);
            $tmpItemRow.find('[data-role="discount"]').html(OrderDetails[i]['DiscountPercent']);
            $tmpItemRow.find('[data-role="total"]').html(Math.round(OrderDetails[i]['FinalAmount']));


            $('#showTable > tbody').append($tmpItemRow);


        }

        if (isDataAvail) {
            var check;
            $('#showGiftTable > tbody').html('');
            if (data.giftsItem.giftItemId.length > 0) {
                for (var i = 0; i < data.giftsItem.giftItemId.length; i++) {
                    var tblGift = $($('#tblGift').html().trim());
                    if (data.giftsItem.giftItemId[i] != 0 && data.giftsItem.giftQuantity[i] != 0) {
                        check = false;
                        var temp = $('td[data-role="id"]');
                        for (var j = 0; j < temp.length; j++) {
                            if ($(temp[j]).html() == data.giftsItem.giftItemId[j]) {
                                var t = parseInt($($('#showGiftTable td[data-role="quantity"]')[j]).html());
                                $($('#showGiftTable td[data-role="quantity"]')[j]).html(t + data.giftsItem.giftQuantity[j] + '');
                                check = true;
                            }
                        }
                        if (!check) {
                            tblGift.find('[data-role="id"]').html(data.giftsItem.giftItemId[i]);
                            tblGift.find('[data-role="name"]').html(data.giftsItem.giftName[i]);
                            tblGift.find('[data-role="quantity"]').html(data.giftsItem.giftQuantity[i]);
                            $('#showGiftTable > tbody').append(tblGift);
                        }

                    }
                }
            }
            if (data.giftItemBillId.length > 0) {
                for (var i = 0; i < data.giftItemBillId.length; i++) {

                    var tblGift = $($('#tblGift').html().trim());
                    tblGift.find('[data-role="id"]').html(data.giftItemBillId[i]);
                    tblGift.find('[data-role="name"]').html(data.giftBillName[i]);
                    tblGift.find('[data-role="quantity"]').html(data.giftBillQuantity[i]);
                    $('#showGiftTable > tbody').append(tblGift);

                }
            }

        }
        $('#total-Item-money').html('<b>Tổng cộng : </b>' +
            toMoney(window.OnlineOrder.getTotal(), ',', '') + ' VND');

        $('#bill-Discount').html('<b>Giảm giá hóa đơn :</b> ' + (isDataAvail == false ? 0 : data.discountBill) + ' %');

        $('#gift-discount-amount').html('<b>Số tiền được tặng: </b>' + (isDataAvail == false ? 0 : data.giftDiscountAmount));
    }


    function checkRedudant() {

        for (var i = 0; i < $("option[name=promoOption]:selected").length; i++) {
            if (arrayTemp[i] != $("option[name=promoOption]:selected")[i].value) {

                //param = 1: Thêm vào
                checkValid($("option[name=promoOption]:selected")[i].value, 1);
            }

        }
    }
    //check if items existed, item: OrderDetails, Idarray: itemIDs Array, QuantityArray: Items Quantity array
    function checkExist(item, IdArray, QuantityArray) {
        for (var i = 0; i < IdArray.length; i++) {
            if (item.ProductID == IdArray[i]) {
                QuantityArray[i] += item.Quantity;
                return true;
            }
        }
        return false;
    }


    var data = {
        productDiscountRate: new Array(),
        productDiscountRateTracking: {
            productId: new Array(),
            promoionId: new Array()
        },

        promotionId: new Array(),       //Dùng để tracking xem dùng Promotion Detail nào cho DIscount Bill
        promotionDetailIdDiscountforBill: new Array(), //lưu PromotionIdDetail dành cho Discount Bill
        promotionGroup: new Array(),
        discountBill: 0.0,
        giftsItem: {
            giftQuantity: new Array(),
            giftItemId: new Array(),
            giftName: new Array(),
        },
        giftBillQuantity: new Array(),
        giftItemBillId: new Array(),// lưu xem quà được tặng của Bill có id là bao nhiêu
        giftBillName: new Array(),
        giftDiscountAmount: 0, // giảm giá tiền mặt của sản phẩm
    };


    //calculate: allow us to know what to do, 1: add promotion, -1: delete promotion
    //e: promotionId
    //arrayTemp: dùng để lưu promotionId
    function checkValid(e, calculate) {
        // push promotion Id to array here. Cause ajax is asynchronous, so it wont wait the array to sort

        if (calculate == 1) {

            arrayTemp.push(e);
            arrayTemp.sort(function (a, b) {
                return b - a;
            });;
        }
        var orderDetails = window.OnlineOrder.Order.OrderDetails;

        var itemsIDs = new Array();
        var quantityDetails = new Array();
        var discount = new Array();

        for (var i = 0; i < orderDetails.length; i++) {

            if (checkExist(orderDetails[i], itemsIDs, quantityDetails) == false) {
                itemsIDs.push(orderDetails[i].ProductID);
                quantityDetails.push(orderDetails[i].Quantity);
                discount.push(orderDetails[i].DiscountPercent + 0.0);
            }
        }

        var sendValues = {
            orderDetailsIDs: itemsIDs,
            quantityDetails: quantityDetails,
            promotionId: e,
            strTotal: window.OnlineOrder.getTotal(),
            discount: discount,
            discountBillBefore: data.discountBill,
            calculate: calculate,
            otherPromotionGroup: data.promotionGroup,
            promotionDetailIdDiscountforBill: data.promotionDetailIdDiscountforBill[data.promotionId.indexOf(e)] != null ? data.promotionDetailIdDiscountforBill[data.promotionId.indexOf(e)] : -1// do mảng vị trí Promotion trùng với PromotionDetailIdDiscountforBill
        };

        var result2;
        $.ajax({
            dataType: "json",
            type: "POST",
            url: "@Url.Action("CheckPromotionDetail", "Delivery2")",
            data: sendValues,
            success: function (result) {
                if (!result.success) {
                    //if promotion is Valid with this Bills. If not rescind select option.
                    ShowMessage("Promotion ko hợp lệ", 3);
                    new_data = $.grep($('#promotionSelect').select2('data'), function (value) {
                        return value['id'] != e;
                    });
                    $('#promotionSelect').select2('data', new_data);

                    new_data2 = $.grep(arrayTemp, function (value) {
                        return value != e;
                    });
                    arrayTemp = new_data2;


                } else {
                    //cal


                    //Đã được xử lý bên server, bây h chỉ cần đổ vào lại data
                    data.productDiscountRate = result.discountRate;
                    data.discountBill = result.discountBill;
                    window.OnlineOrder.Order.DiscountPercent = result.discountBill;

                    //calculate ==  1: Thêm Promotion --> thêm quà tặng
                    //calculate == -1: Xóa  Promotion --> xóa  quà tặng
                    if (calculate == 1) {

                        data.promotionId.push(e);
                        data.promotionDetailIdDiscountforBill.push(result.promotionDetailIdDiscountforBill);


                        //của Bill
                        if (result.giftItemBillId != 0) {
                            data.giftBillQuantity.push(result.giftBillQuantity);
                            data.giftItemBillId.push(result.giftItemBillId);
                            data.giftBillName.push(result.giftBillName);

                        }

                        //của Item trong Bill
                        for (var i = 0; i < result.giftItemId.length; i++) {

                            //push vô
                            data.giftsItem.giftItemId.push(result.giftItemId[i]);

                            data.giftsItem.giftQuantity.push(result.giftQuantity[i]);

                            data.giftsItem.giftName.push(result.giftName[i]);

                        }

                        //Nhóm của promotion đã dùng
                        data.promotionGroup.push(result.promotionGroup);

                        data.giftDiscountAmount += result.giftDiscountAmount;

                    } else {
                        //Lấy vị trí i của gift mình muốn xóa và sau đó xóa

                        //Xóa promotionDetailId Discount cho Bill
                        data.promotionDetailIdDiscountforBill.splice(data.promotionId.indexOf(e), 1);
                        data.promotionId.splice(data.promotionId.indexOf(e), 1);

                        //xóa quà tặng của Bill
                        if (result.giftItemBillId != 0) {

                            data.giftBillQuantity.splice(
                                data.giftBillQuantity.indexOf(result.giftBillQuantity), 1);
                            data.giftItemBillId.splice(
                               data.giftItemBillId.indexOf(result.giftItemBillId), 1);
                            data.giftBillName.splice(
                                data.giftBillName.indexOf(result.giftBillName), 1);
                        }

                        //xóa quà tặng của Item
                        var check = 0;
                        for (var i = 0; i < data.giftsItem.giftItemId.length; i += orderDetails.length) {

                            for (var j = 0; j < result.giftItemId.length; j++) {
                                if (data.giftsItem.giftItemId[i + j] == result.giftItemId[j]) {
                                    data.giftsItem.giftQuantity[i + j] -= result.giftQuantity[j];
                                    check++;
                                }
                            }
                            if (check == orderDetails.length) {
                                // i = 1;
                                //   vị trí i sẽ là vị trí trước số cần xóa
                                //   1: số lượng số để xóa với vị trí tính bắt đầu từ i
                                // ví dụ: [ 3, 5, 1 ].splice(i, 1) --> [3 , 1]
                                data.giftsItem.giftItemId.splice(i, orderDetails.length);
                                data.giftsItem.giftQuantity.splice(i, orderDetails.length);
                                data.giftsItem.giftName.splice(i, orderDetails.length);
                                break;
                            }
                            check = 0;
                        }

                        //Xóa nhóm của promotion
                        data.promotionGroup.splice(
                            data.promotionGroup.indexOf(result.promotionGroup), 1);

                        data.giftDiscountAmount -= result.giftDiscountAmount;

                    }

                    var allOrderDetails = window.OnlineOrder.Order.OrderDetails;
                    for (var i = 0; i < allOrderDetails.length; i++) {
                        allOrderDetails[i].DiscountPercent = data.productDiscountRate[i];
                        if (allOrderDetails[i].DiscountPercent != null) {
                            allOrderDetails[i].TotalAmount = allOrderDetails[i].Quantity * allOrderDetails[i].UnitPrice;
                            allOrderDetails[i].FinalAmount =
                                allOrderDetails[i].TotalAmount * (1 - allOrderDetails[i].DiscountPercent * 0.01);
                        } else {
                            allOrderDetails[i].DiscountPercent = 0;
                        }

                    }
                    $('#showTable > tbody').html('');
                    loadTable(true);



                    ShowMessage("OK<br/> PrmotionID: " + result.promotionId + "<br/>Discount items rate: " + result.discountRate +
                        "<br/>Gift item: " + result.giftItemId + "<br/>" +
                        "Gift quantity: " + result.giftQuantity + "<br/>" +
                        "GiftBill Id : " + result.giftItemBillId + "<br/>" +
                        "Gift Bill Quantity: " + result.giftBillQuantity + "<br/>" +
                          "Gift Bill Name: " + result.giftBillName + "<br/>" +
                        "Discount bill: " + result.discountBill + "<br/>" +
                        "Discount amount: " + result.giftDiscountAmount, 2);

                }

            }
        });
    }





    function deleteItems() {
        for (var i = 0; i < arrayTemp.length; i++) {
            if (($("option[name=promoOption]:selected")[i] == null)
                || arrayTemp[i] != $("option[name=promoOption]:selected")[i].value) {

                //param = -1 : Xóa
                checkValid(arrayTemp[i], -1);


                // i = 1;
                //   vị trí i sẽ là vị trí trước số cần xóa
                //   1: số lượng số để xóa với vị trí tính bắt đầu từ i
                // ví dụ: [ 3, 5, 1 ].splice(i, 1) --> [3 , 1]
                arrayTemp.splice(i, 1);

                return;
            }
        }
    }

    $('#promotionSelect').on("change", function () {
        if ($('#promotionSelect :selected').length < arrayTemp.length) {
            deleteItems();
            ShowMessage("Notcheck", 2);
            --GlobalLength;
            return;
        }
        checkRedudant();
        GlobalLength = $('#promotionSelect :selected').length;
    });


    function saveOrder() {
        var sendValues = {
            orderDetailsIDs: itemsIDs,
            quantityDetails: quantityDetails,
            strTotal: window.OnlineOrder.getTotal(),
            discount: discount,
            discountBillBefore: data.discountBill,
            otherPromotionGroup: data.promotionGroup,
            promotionId: data.promotionId,
        };

        var result2;
        $.ajax({
            dataType: "json",
            url: "@Url.Action("CreateOnlineOrder","Delivery2")",
            data: sendValues,
            success: function (result) {
                if (result.success) {
                    ShowAlert("Đặt hóa đon thành công", 2, "@Url.Action("Create","Delivery2")");
                } else {
                    ShowMessage("Có lỗi xảy ra", 2);
                }
            }
        });

    };

   


</script>
<style>
    #showTable td:nth-child(6) {
        display: none;
    }

    #showTable th:nth-child(6) {
        display: none;
    }

    /*test*/
</style>