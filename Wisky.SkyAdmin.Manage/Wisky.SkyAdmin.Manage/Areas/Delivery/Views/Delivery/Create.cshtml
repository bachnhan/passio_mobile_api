
@{
    ViewBag.Title = "Tạo đặt hàng mới";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&signed_in=true&libraries=places&key=AIzaSyDwJA7jUX5F9KR44NAKvfJsxn-9cjQwzZk"></script>


<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-md-6">
                <h3>
                    Đặt hàng
                </h3>
                <h5>
                    <a id="btn-setting" data-status="setting" style="color: black; font-weight: 600">Call center</a>
                </h5>
            </div>
            <div class="col-md-6">
                <button id="btn-order" role="button" class="btn btn-primary btn-sm pull-right">
                    <i class="left-icon fa fa-check"></i> Đặt hàng
                </button>
            </div>
        </div>
        <hr />
    </div>

    <div class="card-padding custom">
        <div class="form-horizontal">
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group row">
                        <label class="control-label col-md-4">Tìm kiếm</label>
                        <div class="col-md-8 ">
                            <div class="styled-select blue semi-square">
                                <input id="customers-list" name="custName" class="" style="width:100%;" />
                            </div>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="control-label col-md-4">hoặc</label>
                        <div class="col-md-8">
                            <button class="btn btn-primary btn-sm btn-block" data-status="existed" id="btnIsNewUser">
                                <i class="zmdi zmdi-plus"></i> <span id="btnDisplay">Thêm khách hàng mới</span>
                            </button>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="control-label col-md-4">Tên KH</label>
                        <div class="col-md-8">
                            <input class="form-control" id="cust-name" type="text" disabled />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-4">Địa chỉ</label>
                        <div class="col-md-8">
                            <input class="form-control" id="cust-address" type="text" disabled />
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="control-label col-md-4">Điện thoại</label>
                        <div class="col-md-8">
                            <input class="form-control" id="cust-phone" type="text" disabled />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-4">Email</label>
                        <div class="col-md-8">
                            <input class="form-control" id="cust-email" type="text" disabled />
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="control-label col-md-4">Tỉnh/Thành phố</label>
                        <div class="col-md-8">
                            <select class="form-control selectpicker" data-size="7" data-live-search="true" id="province"></select>
                            @*<input class="form-control" id="provinceCode" type="hidden" value="" />*@
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="control-label col-md-4">Huyện/Quận</label>
                        <div class="col-md-8">
                            <select class="form-control selectpicker" data-size="7" data-live-search="true" id="district"></select>
                            @*<input class="form-control" id="districtCode" type="hidden" value="" />*@
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="control-label col-md-4">Phường</label>
                        <div class="col-md-8">
                            <select class="form-control selectpicker" data-size="7" data-live-search="true" id="ward"></select>
                            @*<input class="form-control" id="wardCode" type="hidden" value="" />*@
                        </div>
                    </div>
                </div>
                <div class="col-md-4 col-md-offset-4">
                    <div class="form-group">
                        <label class="control-label col-md-4">Ghi chú</label>
                        <div class="col-md-8">
                            <input class="form-control" id="notes" type="text" />
                        </div>
                    </div>
                </div>
            </div>
        </div>



        <div role="tabpanel">
            <ul class="nav nav-tabs" role="tablist">
                <li role="presentation" class="active">
                    <a id="orderTab" href="#order" role="tab" data-toggle="tab">Order</a>
                </li>

                <li role="presentation">
                    <a id="mapTab" href="#map" role="tab" data-toggle="tab">Bản đồ</a>
                </li>
                <li role="presentation" style="display: none">
                    <a id="historyTab" href="#history" role="tab" data-toggle="tab">Lịch sử mua hàng</a>
                </li>
                <li role="presentation" style="display: none">
                    <a id="customerTab" href="#customer" role="tab" data-toggle="tab">Khách hàng</a>
                </li>
            </ul>

            <!-- Tab panes -->
            <div class="tab-content">
                <!--tab Order-->
                <div role="tabpanel" class="tab-pane fade in active" id="order">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="row">
                                <div class="form-group">
                                    <div class="col-md-5">
                                        <select class="form-control" id="category-menu" data-filter="category">
                                            <option value="-1">Tất cả</option>
                                        </select>
                                    </div>
                                    <div class="col-md-7">
                                        <input class="form-control" data-filter="name" placeholder="Tìm theo tên" />
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-12" style="height:580px ;width:100%; margin-top: 30px;">
                                    @*<div id="forScroll" class="row small-margin" style="height:590px; overflow-y: auto; overflow: hidden; outline:none ;padding: 0">
                                            <ul class="row small-margin" data-role="service-container" id="iso-container" style="width:100%; list-style-type: none"></ul>
                                        </div>*@
                                    <div id="forScroll" class="row small-margin" style="height:590px; overflow-y: auto; overflow: hidden; outline:none ;padding: 0">
                                        <ul class="row small-margin" data-role="service-container" id="iso-container" style="width:100%; list-style-type: none"></ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <table id="orderItemDatatable" class="table table-striped table-bordered table-hover">
                                <thead style="white-space: nowrap;">
                                    <tr>
                                        <th>
                                            <label class="">Tên</label>
                                        </th>
                                        <th>
                                            <label class="">Đơn giá</label>
                                        </th>
                                        <th>
                                            <label class="">SL</label>
                                        </th>
                                        <th>
                                            <label class="">Giảm giá (%)</label>
                                        </th>
                                        <th>
                                            <label class="">Tổng cộng</label>
                                        </th>
                                        <th>
                                            <label class="">Xóa</label>
                                        </th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                            <label id="total-Item" class="pull-right text-bold"></label>
                        </div>
                    </div>
                </div>

                <template id="tmpServiceItem">
                    <li class="col-md-3">
                        <div class="service-item service-item-sm no-border">
                            <div class="ratio-wrapper ratio-wrapper-1-1">
                                <div class="ratio-item">
                                    <a class="img-container" data-spinner="plus">
                                        <img src="/Content/images/Default_product_img.jpg"
                                             onerror="window.HMS.ServiceItemHandler.resetDefaultImage(this)">
                                        <div class="price">
                                            <label data-role="price"></label>
                                        </div>
                                        <div class="title">
                                            <label data-role="name"></label>
                                        </div>
                                    </a>
                                </div>
                            </div>
                            <div class="ace-spinner touch-spinner">
                                <div class="input-group">
                                    <div class="spinner-buttons input-group-btn spinner-left" data-spinner="minus">
                                        <button class="btn btn-danger btn-minus btn-xs">
                                            <i class="fa fa-minus smaller-75"></i>
                                        </button>
                                    </div>
                                    <input type="text" class="input-sm input-quantity form-control" value="1" maxlength="4" onkeyup="this.value = checkDigit(this.value)">
                                    <div class="spinner-buttons input-group-btn spinner-right">
                                        <button class="btn btn-success btn-order btn-xs" data-action="order-item" data-type="spinner">
                                            <i class="fa fa-check smaller-75"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </li>
                </template>

                <template id="tmpServiceItemRow">
                    <tr>
                        <td data-role="name"></td>
                        <td data-role="price"></td>
                        <td data-role="quantity"></td>
                        <td data-role="discount"></td>
                        <td data-role="total"></td>
                        <td>
                            <button class="btn btn-xs btn-danger" data-action="delete-ordered-item"><i class="glyphicon glyphicon-trash"></i></button>
                        </td>
                    </tr>
                </template>

                <!--tab Map-->

                <div role="tabpanel" class="tab-pane fade" id="map">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="row" style="margin-bottom: 25px;">
                                <div class="col-md-10">
                                    <input type="text" id="txt-delivery-address" class="form-control" placeholder="Nhập để tìm địa chỉ">
                                </div>
                                <div class="col-md-2">
                                    <button type="button" class="btn btn-primary btn-sm pull-right" id="btn-search-address">
                                        <i class="left-icon fa fa-search"></i> Tìm
                                    </button>
                                </div>
                            </div>
                            <div>
                                <ul class="nearby-stores"></ul>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div id="map-canvas" style="width: 100%; height: 300px;"></div>
                        </div>
                    </div>
                </div>

                <!--tab History-->
                <!--
                <div role="tabpanel" class="tab-pane fade" id="history">
                    <div class="row">
                        <div class="col-md-5" id="customer-order">

                        </div>
                        <div class="col-md-7">
                            <h2>Danh sách sản phẩm đã mua</h2>
                            <table class="table table-bordered table-striped" id="customer-order-history-table">
                                <thead>
                                    <tr>
                                        <th>STT</th>
                                        <th>Tên sản phẩm</th>
                                        <th>Số lần đã mua</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
                -->

            </div>

        </div>
    </div>


</div>

<input type="hidden" id="latatt" value="0" />
<input type="hidden" id="lonatt" value="0" />

<script src="~/Scripts/accounting.min.js"></script>
<script src="~/Content/frontend/js/common.js"></script>
<script src="~/Content/Delivery/delivery.js"></script>
<script src="~/Content/frontend/js/skyplus-delivery.js"></script>
<script src="~/Content/Delivery/delivery.dom.object.init.js"></script>
<script>
    function checkDigit(str) {
        var check = /^-?$|^-?\d+$/.test(str);
        if (!check) {
            return "";
        }
        return str;
    }

    var province = [];
    var district = [];
    var ward = [];

    $(document).ready(function () {
        $("#btnIsNewUser").click(function () {
            $("#btnDisplay").html($("#btnDisplay").html() == 'Thêm khách hàng mới' ? 'Tìm kiếm khách hàng' : 'Thêm khách hàng mới');
        });
        $("#forScroll").niceScroll({
            cursorcolor: "black",
            cursoropacitymin: 0.3,
            background: "#bbb",
            cursorborder: "1",
            autohidemode: true,
            cursorfixedheight: 100
        });
        $('#ascrail2000').show();
        window.HMS.Delivery.init();
        loadAllCategory();

        window.OnlineOrder = new DeliveryOrder(window['storeId'],
                '@Url.Action("CreateOnlineOrder")');

        $(function () {
            //$("#map-canvas").width('100%').height(300);
            google.maps.event.addDomListener(window, 'load', initialize);
        });

        autocomplete = new google.maps.places.Autocomplete((document.getElementById('txt-delivery-address')), { types: ['geocode'] });

        $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
            google.maps.event.trigger(map, 'resize');
        });
        google.maps.event.addListener(autocomplete, 'place_changed', function () {
            fillInAddress();
        });

        $("#cust-address").on('focusout', function () {
            $("#txt-delivery-address").val($(this).val());
        });

        $.ajax({
                    url: '@Url.Action("LoadLocation", "Delivery", new { @area="Delivery"})',
                    type: "POST",
                    data: {
                    },
                    success: function (result) {
                        if (result.success) {
                            province = result.provinces;
                            district = result.districts;
                            ward = result.wards;
                            displayProvince();
                        }
                    },
                    error: function (error) {
                        ShowMessage("Có lỗi xảy ra, vui lòng thử lại. Nếu lỗi tiếp tục tiếp diễn xin vui lòng liên hệ admin", 1);
                    }
                });
    });

    /*Bản đồ*/
    var map;
    var mapOptions;
    var listStore = new Array();
    var listStoreSearch = new Array();
    function initialize() {
        var styles = [
            {featureType: "road.highway",stylers: [{ visibility: "off" }]},
            { featureType: "landscape", stylers: [{ visibility: "off" }] },
            { featureType: "transit", stylers: [{ visibility: "off" }] },
            { featureType: "poi", stylers: [{ visibility: "off" }] },
            { featureType: "poi.park", stylers: [{ visibility: "on" }] },
            { featureType: "poi.park", elementType: "labels", stylers: [{ visibility: "off" }] },
            { featureType: "poi.park", elementType: "geometry.fill", stylers: [{ color: "#d3d3d3" }, { visibility: "on" }] },
            { featureType: "poi.medical", stylers: [{ visibility: "off" }] },
            { featureType: "poi.medical", stylers: [{ visibility: "off" }] },
            { featureType: "road", elementType: "geometry.stroke", stylers: [{ color: "#cccccc" }] },
            { featureType: "water", elementType: "geometry.fill", stylers: [{ visibility: "on" }, { color: "#cecece" }] },
            { featureType: "road.local", elementType: "labels.text.fill", stylers: [{ visibility: "on" }, { color: "#808080" }] },
            { featureType: "administrative", elementType: "labels.text.fill", stylers: [{ visibility: "on" }, { color: "#808080" }] },
            { featureType: "road", elementType: "geometry.fill", stylers: [{ visibility: "on" }, { color: "#fdfdfd" }] },
            { featureType: "road", elementType: "labels.icon", stylers: [{ visibility: "off" }] },
            { featureType: "water", elementType: "labels", stylers: [{ visibility: "off" }] },
            { featureType: "poi", elementType: "geometry.fill", stylers: [{ color: "#d2d2d2" }] }];

        // Create a new StyledMapType object, passing it the array of styles,
        // as well as the name to be displayed on the map type control.
        var styledMap = new google.maps.StyledMapType(styles,
        { name: "Styled Map" });

        mapOptions = {
            center: new google.maps.LatLng(10.789886817455374, 106.6787300934875),
            zoom: 14,
            mapTypeControlOptions: {
                mapTypeIds: [google.maps.MapTypeId.ROADMAP, 'map_style']
            }
        };

        map = new google.maps.Map(document.getElementById("map-canvas"),
            mapOptions);
        map.mapTypes.set('map_style', styledMap);
        map.setMapTypeId('map_style');
        //setPositionTerminal();
        //setPositionUser();

        //$('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
        //    google.maps.event.trigger(map, 'resize');
        //});


        //$('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
        //    google.maps.event.trigger(MAP_OBJECT, "resize");
        //})

        window.map = map;
        window.geocoder = new google.maps.Geocoder();

        addStoreLocations();
    }

    var markerList = [];
    function addStoreLocations() {
        $.ajax({
            url: "@Url.Action("GetStoreCoordinateList")",
            type: "POST",

            success: function (data) {
                window.storeInfos = data;
                if (markerList.length != 0) {
                    for (var i in markerList) {
                        markerList[i].setMap(null);
                    }
                }
                for (var index in data) {
                    var store = data[index];
                    listStore.push(store);
                    var img = "/Content/images/m_terminal.png";
                    var marker = new google.maps.Marker({
                        position: new google.maps.LatLng(store.Latitude, store.Longitude),
                        map: window.map,
                        title: store.Name,
                        icon: img
                    });
                    markerList.push(marker);
                }
            },

            error: function () {
                window.setTimeout(addStoreLocations, 500);
            },
        });
    }

    var markers = [];

    function addLatLngTe(data) {
        for (var i = 0; i < data.length; i++) {
            var location = new google.maps.LatLng(data[i].lat, data[i].lon);
            var label = data[i].Name;
            addMarkerTerminal(location, label);
        }
    }

    function addLatLngDe(data) {
        for (var i = 0; i < data.length; i++) {
            var location = new google.maps.LatLng(data[i].Lat, data[i].Lon);
            var label = data[i].Label;
            GetPositionUser(location, label);
        }
    }

    // add marker terminal
    function addMarkerTerminal(location, label) {
        var image = '/Content/images/m_terminal.png';
        //if (map == "undefined") {
        //    map = new google.maps.Map(document.getElementById("map-canvas"),
        //        mapOptions);
        //}
        var marker = new window.google.maps.Marker({
            position: location,
            map: map,
            icon: image,
            title: label
        });
        var contentString = label;
        var infowindow = new google.maps.InfoWindow({
            content: contentString
        });

        google.maps.event.addListener(marker, 'click', function () {
            infowindow.open(map, marker);
        });

        markers.push(marker);


    }
    function fillInAddress() {
        // Get the place details from the autocomplete object.
        var place = autocomplete.getPlace();
        $('#btn-search-address').trigger('click');
    }

    var resultMarker = null;

    $("#btn-search-address").on('click', function () {
        var address = $("#txt-delivery-address").val();
        listStoreSearch = new Array();
        window.geocoder.geocode({ 'address': address }, function (results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
                map.setCenter(results[0].geometry.location);
                if (resultMarker != null) {
                    resultMarker.setMap(null);
                }
                var latitude = results[0].geometry.location.lat();
                var longitude = results[0].geometry.location.lng();
                var resultAddress = results[0];
                var resultAddressLength = resultAddress.address_components.length;
                var ward = resultAddress.address_components[resultAddressLength-4].long_name;
                var district = resultAddress.address_components[resultAddressLength-3].long_name;
                var province = resultAddress.address_components[resultAddressLength-2].long_name;

                resultMarker = new google.maps.Marker({
                    map: map,
                    position: results[0].geometry.location
                });
                $.ajax({
                    url: '@Url.Action("LoadStoreDelivery","Delivery", new { @area="Delivery"})',
                    type: "POST",
                    data: {
                        "lonatt": longitude,
                        "latatt": latitude,
                        "ward": ward,
                        "district": district,
                        "province": province,
                    },
                    success: function (result) {
                        if (result.success) {
                            $("#province").val(result.mostsimilarProvince.ProvinceCode);
                            $("#province").selectpicker('refresh');
                            $("#province").change();
                            //displayDistrict($('#province').val());
                            $('#district').val(result.mostsimilarDistrict.DistrictCode);
                            $("#district").selectpicker('refresh');
                            $("#district").change();
                            //displayWard($('#district').val());
                            $('#ward').val(result.mostsimilarWard.WardCode);
                            $("#ward").selectpicker('refresh');
                            for (var i = 0; i < result.listdata.length; i++) {
                                var store = result.listdata[i];
                                listStoreSearch.push(store);
                            }
                            searchClosestStore(address);
                        }
                    },
                    error: function (error) {
                        ShowMessage("Có lỗi xảy ra, vui lòng thử lại. Nếu lỗi tiếp tục tiếp diễn xin vui lòng liên hệ admin", 1);
                    }
                });
            } else {
                ShowMessage("Geocode không thành công vì: " + status,1);
            }
        });
    });

    function searchClosestStore(address) {
        if (window.storeInfos == null) {
            ShowMessage("Dữ liệu danh sách cửa hàng chưa được load xong, vui lòng thử lại sau.",3);
            return;
        }

        var origins = [];
        //for (var index in window.storeInfos) {
        //    var store = window.storeInfos[index];

        //    origins.push(new google.maps.LatLng(store.Latitude, store.Longitude));
        //}

        for (var i = 0; i < listStoreSearch.length; i++) {
            var store = listStoreSearch[i];
            origins.push(new google.maps.LatLng(store.Latitude, store.Longitude));
        }

        var service = new google.maps.DistanceMatrixService();
        service.getDistanceMatrix(
        {
            origins: origins,
            destinations: [address],
            travelMode: google.maps.TravelMode.DRIVING,
        }, onFindingClosestStoreFinished);


    }

    function onFindingClosestStoreFinished(response, status) {
        if (status == "OK") {
            var minDistance = Number.POSITIVE_INFINITY;
            var minIndex = -1;

            var resultString = "";
            var rs = [];
            var rows = [];
            var i;
            for (i = 0; i < response.rows.length; i++) {
                var lowest = response.rows[i].elements[0];
                lowest.storeIndex = i;
                rows.push(lowest);
            }
            var count = rows.length;
            var checkOk = function (ele) {
                return ele.status == 'OK';
            };
            for (var index = 0; rows.length > 0; i++) {
                var result = rows[0];
                if (rows.filter(checkOk).length != 0) {
                    var l = result.status == 'OK' ? result.distance.value : -1;
                    for (var j in rows) {
                        var ele = rows[j];
                        if (ele.status == 'OK' && (result.status != 'OK' || ele.distance.value < result.distance.value)) {
                            result = ele;
                        }
                    }
                }
                rows = rows.filter(function (ele) {
                    return ele.storeIndex != result.storeIndex;
                });
                if (result.status != "OK") {
                    rs.push($('<li/>', {
                        'class': 'row',
                        'html': [
                            $('<lable/>', {
                                'class': 'col-md-4',
                                html: listStoreSearch[result.storeIndex].Name
                            }),
                            $('<label/>', {
                                'class': 'col-md-8',
                                html: 'Không tìm thấy đường đi.'
                            })
                        ]
                    }));
                    continue;
                }
                rs.push($('<li/>', {

                    'html': $('<div/>', {
                        'class': 'row',
                        'html': [
                            $('<input/>', {
                                'type': 'hidden',
                                'value': listStoreSearch[result.storeIndex].ID
                            }),
                            $('<label/>', {
                                'class': 'col-md-4',
                                html: listStoreSearch[result.storeIndex].Name
                            }),
                            $('<label/>', {
                                'class': 'col-md-4',
                                html: result.distance.text
                            }),
                            $('<div/>', {
                                'class': 'col-md-4',
                                html: $('<button/>', {
                                    'class': 'btn btn-primary btn-sm pull-right',
                                    'html': 'Chọn',
                                    'data-role': 'select-storeId',
                                })
                            })
                        ]
                    })
                }));

                if (result.distance.value < minDistance) {
                    minDistance = result.distance.value;
                    minIndex = index;
                }
            }
            $('ul.nearby-stores').html('');
            if (minDistance == Number.POSITIVE_INFINITY) {
                $('#nearest-storeId').html($('<li/>', {
                    html: 'Không tìm thấy đường đi từ bất kỳ cửa hàng nào đến địa chỉ trên.'
                }));
            } else {
                var store = window.storeInfos[minIndex];
                $('ul.nearby-stores').html(rs);
                $('ul.nearby-stores li:first-child').addClass('active');
            }
        } else {
            ShowMessage("Lỗi: " + status,1);
        }
    }

    var echo = 0, MAX_VALUE = 500, MIN_VALUE = 1;
    function loadAllCategory() {

        $.ajax({
            url: '@Url.Action("LoadAllCategory","Delivery", new { @area="Delivery"})',
            type: "POST",
            success: function (result) {
                if (result != null && result.length > 0) {
                    //render to store dropdown
                    $('#category-menu').html();
                    for (var i = 0; i < result.length; i++) {
                        $('#category-menu').append("<option value=\'" + result[i].CategoryId + "\'>" + result[i].Name + "</option>");
                    }
                }
            },
            error: function (error) {
                ShowMessage("Có lỗi xảy ra, vui lòng thử lại. Nếu lỗi tiếp tục tiếp diễn xin vui lòng liên hệ admin",1);
            }
        });
    }

    $('#orderTab').on('click', function () {
        $('#ascrail2000').show();
    });
    $('#mapTab').on('click', function () {
        $('#ascrail2000').hide();
    });
    $('#historyTab').on('click', function () {
        $('#ascrail2000').hide();
    });
    $('#customerTab').on('click', function () {
        $('#ascrail2000').hide();
    });

    function displayProvince() {
        $("#province").append("<option value=''>Vui lòng chọn tỉnh/thành phố</option>");
        for (var i = 0; i < province.length; i++) {
            var code = province[i].ProvinceCode;
            var name = province[i].ProvinceType + " " + province[i].ProvinceName;
            $("#province").append('<option value =' + code + ' >' + name + '</option>');
        }
        $("#province").selectpicker('refresh');
    }
    $("#province").on('change', function () {
        var provinceCode = $("#province").val();
        var districtFiltered = district.filter(q => q.ProvinceCode == provinceCode);
        displayDistrict(districtFiltered);
    });
    function displayDistrict(districtFiltered) {
        $("#district").empty();
        $("#district").append("<option value=''>Vui lòng chọn quận/huyện</option>");
        for (var i = 0; i < districtFiltered.length; i++) {
            $("#district").append("<option value='" + districtFiltered[i].DistrictCode + "'>"
                + districtFiltered[i].DistrictType + " " + districtFiltered[i].DistrictName + "</option>")
        }
        $("#district").selectpicker('refresh');
    }
    $("#district").on('change', function () {
        var districtCode = $("#district").val();
        var wardFiltered = ward.filter(q => q.DistrictCode == districtCode);
        displayWard(wardFiltered);
    });
    function displayWard(wardFiltered) {
        $("#ward").empty();
        $("#ward").append("<option value=''>Vui lòng chọn phường/xã</option>");
        for (var i = 0; i < wardFiltered.length; i++) {
            $("#ward").append("<option value='" + wardFiltered[i].WardCode + "'>"
                + wardFiltered[i].WardType + " " + wardFiltered[i].WardName + "</option>")
        }
        $("#ward").selectpicker('refresh');
    }
</script>
<style>

</style>