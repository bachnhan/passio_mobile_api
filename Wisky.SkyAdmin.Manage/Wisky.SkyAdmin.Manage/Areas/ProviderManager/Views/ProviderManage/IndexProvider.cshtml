@model HmsService.ViewModels.ProviderViewModel
@{
    ViewBag.Title = "Quản lý nhà cung cấp";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-md-8">
                <h3>Danh sách nhà cung cấp</h3>
            </div>
            <div class="col-md-4 text-right">
                <button class="btn btn-primary btn-icon-text waves-effect addNewEmp" data-action="open-modalCostCategory" data-type="create">
                    <i class="zmdi zmdi-plus"></i>Thêm nhà cung cấp</button>
</div>
        </div>
        <hr />
    </div>

    <div class="card-padding">
        <table id="ProviderTable" class="table table-striped table-bordered table-hover">
            <thead>
                <tr>
                    <th>
                        <label>STT</label>
                    </th>
                    <th>
                        <label>Tên nhà cung cấp</label>
                    </th>
                    <th>
                        <label>Địa chỉ</label>
                    </th>
                    <th>
                        <label>Số điện thoại</label>
                    </th>
                    <th>
                        <label>Tùy chọn</label>
                    </th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>


</div>
<div class="modal fade" id="modalCostCategory">
    <div class="modal-dialog">
        <div class="modal-content">

        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
<script>

    $(document).ready(function () {
        InitProviderDatatable();
        
    });

    function InitProviderDatatable() {
        $("#ProviderTable").dataTable({
            "bFilter": true,
            "bSort": false,
            "bRetrieve": true,
            "bServerSide": true,
            "bScrollCollapse": true,
            "sAjaxSource": "@Url.Action("LoadProvider","ProviderManage")",
            "bProcessing": true,
            "bFilter": true,

            "oLanguage": {
                "sSearch": "Tìm kiếm:",
                "sZeroRecords": "Không có dữ liệu phù hợp",
                "sInfo": "Hiển thị từ _START_ đến _END_ trên tổng số _TOTAL_ dòng",
                "sEmptyTable": "Không có dữ liệu",
                "sInfoFiltered": " - lọc ra từ _MAX_ dòng",
                "sLengthMenu": "Hiển thị _MENU_ dòng",
                "sProcessing": "Đang xử lý...",
                "sInfoEmpty": "Không có dữ liệu",
                "oPaginate": {
                    "sNext": "<i class='fa fa-chevron-right'></i>",
                    "sPrevious": "<i class='fa fa-chevron-left'></i>"
                },
                "sSearchPlaceholder": "Tên nhà cung cấp"
            },
            "aoColumnDefs": [
                {
                    "aTargets": [1],
                    "bSearchable": true,
                    "bSortable": false,
                },
                {
                    "aTargets": [0, 3],
                    "sClass": "text-center"
                },
                {
                    "aTargets": [0, 2, 3],
                    "bSortable": false,
                    "bSearchable": false
                },
                {
                    "aTargets": [4],
                    "mRender": function (data, type, row) {
                        var data = row[4];
                        $edit = $('<button/>', {
                            'title':'Chỉnh sửa',
                            'class': 'btn btn-sm btn-primary',
                            'data-action': 'open-modalCostCategory',
                            'data-type': 'edit',
                            'data-id': data,
                            'html': '<i class="glyphicon glyphicon-pencil"></i>'
                        });                      
                        var deleteProvider = "<a title='Xóa' class='btn btn-sm btn-danger' onclick='deleteProvider(" + data + ")'><i class='glyphicon glyphicon-trash'></i></a>";

                        return $edit[0].outerHTML +" "+ deleteProvider;
                    },
                    "bSortable": false,
                    "sClass": "text-center"
                }
            ],
            "bAutoWidth": false,
        }).fnSetFilteringDelay(delaySearch);
    }

    $(document).on('click', '[data-action="open-modalCostCategory"]', function (e) {
        var me = $(e.currentTarget);
        var type = me.attr('data-type');
        var modal = $('#modalCostCategory');
        modal.modal('show');
        if (type == 'create') {
            $.ajax({
                url: '@Url.Action("Create","ProviderManage")',
                type: 'GET',
                dataType: 'html',
                success: function (result) {
                    modal.find('.modal-content').html(result);
                }
            });
        } else {
            $.ajax({
                url: '@Url.Action("Edit", "ProviderManage")',
                type: 'GET',
                data: { id: me.attr('data-id') },
                dataType: 'html',
                success: function (result) {
                    modal.find('.modal-content').html(result);
                }
            });
        }
    });


    function deleteProvider(id) {
        ShowConfirm("Bạn có chắc xóa dòng này?", function () {
            $.ajax({
                "type": "post",
                "url": "@(Url.Action("Delete", "ProviderManage"))",
                "data": {
                    id: parseInt(id)
                },
                success: function (result) {

                    if (result.success) {
                        ShowAlert("Xóa nhà cung cấp thành công", 2);
                        RefreshTable();
                    } else {
                        ShowAlert("Không thể xóa. Tồn tại nguyên liệu chứa nhà cung cấp này!", 1);
                    }
                },
                error: function (error) {
                    ShowAlert("Xóa thất bại, xin vui lòng thử lại !", 1);
                }
            });
        });
    }

    //redraw datatable without reload
    function reDrawDatatable(id) {
        $.fn.dataTableExt.oApi.fnStandingRedraw = function (oSettings) {
            if (oSettings.oFeatures.bServerSide === false) {
                var before = oSettings._iDisplayStart;
                oSettings.oApi._fnReDraw(oSettings);
                //iDisplayStart has been reset to zero - so lets change it back
                oSettings._iDisplayStart = before;
                oSettings.oApi._fnCalculateEnd(oSettings);
            }

            //draw the 'current' page
            oSettings.oApi._fnDraw(oSettings);
        };
        $(id).dataTable().fnStandingRedraw();
    }
    //user datatable
    function RefreshTable() {
        reDrawDatatable("#ProviderTable");
    }
</script>
