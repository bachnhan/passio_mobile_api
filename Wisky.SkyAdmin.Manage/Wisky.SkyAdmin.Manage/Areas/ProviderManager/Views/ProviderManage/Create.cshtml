@model HmsService.ViewModels.ProviderViewModel

@{
    ViewBag.Title = "Thêm nhà cung cấp";

}
<style>
    .form-control:focus {
  border-color: #4496fb !important;
  box-shadow:  0 0 8px #4496fb !important;
}


</style>

<form action="@Url.Action("Create")" method="POST"">   
    <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4>Thêm nhà cung cấp</h4>            
        </div>
    <div class="modal-body">
                <div class="form-horizontal">
                    <div class="form-group">
                        <label class="col-sm-3 control-label">
                            Tên nhà cung cấp
                        </label>
                        <div class="col-sm-9">

                            @Html.TextBoxFor(model => model.ProviderName, new { @class = "form-control " })
                            @Html.ValidationMessageFor(model => model.ProviderName)
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-3 control-label">
                            Địa chỉ
                        </label>
                        <div class="col-sm-9">
                            @Html.TextBoxFor(model => model.Address, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Address)
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-3 control-label">
                            Số điện thoại
                        </label>
                        <div class="col-sm-9">
                            @*@Html.TextBoxFor(model => model.Phone, new { @class = "form-control", onkeyup = "this.value = checkDigit(this.value)" })*@
                            @Html.TextBoxFor(model => model.Phone, new { id = "Phone", @class = "form-control input-mask", required = "true", data_mask = "000-00-0000000", placeholder = "vd: 000-00-0000000", maxlength = "12", autocomplete = "off", oninput = "correctPhone()" })
                            @Html.ValidationMessageFor(model => model.Phone)
                        </div>
                    </div>
                    <div class="form-group ">
                        <label class="col-sm-3 control-label">
                            Email
                        </label>
                        <div class="col-sm-9">
                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Email)
                        </div>
                    </div>
                </div>
    </div>
    <div class="modal-footer">                  
            <button type="submit" onclick="return validate(this)" class="btn btn-primary">Hoàn tất</button>
    </div>
</form>

<script type="text/javascript">
    function checkDigit(str) {
        var check = /^-?$|^-?\d+$/.test(str);
        if (!check) {
            return "";
        }
        return str;
    }

    //autocorrect phone field
    function correctPhone() {
        var phoneNum = $('#Phone').val().replace(/[^\d]/g, '');
        phoneNum = phoneNum.replace(/^00/, '0');

        $('#Phone').val(phoneNum);
    }
    function validateEmail(email) {
        var re = /^(([^<>()\[\]\\.,;:\s@@"]+(\.[^<>()\[\]\\.,;:\s@@"]+)*)|(".+"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        return re.test(email);
    };


    function validate(btn)
    {
        hasValue = true;
        if ($("input[name='ProviderName']").val() == "") {
            ShowMessage("Vui lòng nhập nhà cung cấp.", 3);
            hasValue = false;
        }
        else if ($("input[name='Address']").val() == "") {
            ShowMessage("Vui lòng nhập địa chỉ.", 3);
            hasValue = false;
        }
        else if ($("input[name='Phone']").val() == "") {
            ShowMessage("Vui lòng nhập số điện thoại.", 3);
            hasValue = false;
        }
        else if (!($("input[name='Phone']").val().match(/^([0-9]{10,12})$/))) {
            ShowMessage("Số điện thoại không hợp lệ", 3);
            hasValue = false;
        }
        else if ($("input[name='Email']").val() == "") {
            ShowMessage("Vui lòng nhập email.", 3);
            hasValue = false;
        }
        else if (!validateEmail($("input[name='Email']").val())) {
            ShowMessage("Email không đúng định dạng, vui lòng thử lại", 3);
            hasValue = false;
        }

        return hasValue;
    }
</script>
