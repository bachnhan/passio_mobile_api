
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-md-6">
                <h3>
                    Danh sách nhóm cửa hàng
                </h3>
            </div>
            <div class="col-md-6">
                <a data-toggle="modal" id="btnCreate" role="button" class="btn btn-primary btn-sm pull-right" >
                    <i class="zmdi zmdi-plus" hidden></i> Thêm nhóm cửa hàng
                </a>
            </div>
        </div>
        <hr />
    </div>

    <div class="card-padding">
        <table id="store-group-table" class="table table-striped table-bordered table-hover">
            <thead style="white-space:nowrap; text-overflow:ellipsis;">
                <tr>
                    <th>
                        <label class="">STT</label>
                    </th>
                    <th>
                        <label class="">Nhóm cửa hàng</label>
                    </th>
                    <th>
                        <label class="">Mô tả</label>
                    </th>
                    <th>
                        <label class="">Tùy chọn</label>
                    </th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>
<div id="createGroupPanel" class="modal fade"></div>
<div id="editGroupPanel" class="modal fade"></div>

<div id="asignStorePanel" class="modal fade" role="dialog" aria-hidden="true"></div>
<script>
    var selectedStore = [];

    $(document).ready(function () {
        InitGroupDataTable();

    });

    function InitStoresDataTable(groupId) {
        $("#store-table").dataTable({
            "bSort":false,
            "bFilter": true,
            "bRetrieve": true,
            "bScrollCollapse": true,
            "sAjaxSource": '@Url.Action("LoadStoresWithStatus")',
            "bProcessing": true,
            "fnServerParams" : function(aoData){
                aoData.push(
                    {"name" : "storeGroupId", "value" : groupId}

                );
            },
            "oLanguage": {
                "sSearchPlaceholder":"Nhóm cửa hàng",
                "sSearch": "Tìm kiếm:",
                "sZeroRecords": "Không có dữ liệu phù hợp",
                "sInfo": "Hiển thị từ _START_ đến _END_ trên tổng số _TOTAL_ dòng",
                "sEmptyTable": "Không có dữ liệu",
                "sInfoFiltered": " - lọc ra từ _MAX_ dòng",
                "sLengthMenu": "Hiển thị _MENU_ dòng",
                "sProcessing": "Đang xử lý...",
                "sInfo": "Hiển thị _START_ đến _END_ trên tổng số _TOTAL_ dòng",
                "sInfoEmpty": "Hiển thị 0 từ 0 của 0 dòng",
                "oPaginate": {
                    "sNext": "<i class='fa fa-chevron-right'></i>",
                    "sPrevious": "<i class='fa fa-chevron-left'></i>"
                }
            },
            "aoColumnDefs": [
                {
                    "aTargets": [0],
                    "sClass": "text-center",
                    "bSearchable": false
                },
                {
                    "aTargets": [1, 2],
                    "bSortable": true,
                    "bSearchable": true,
                },
                {
                    "aTargets": [3],
                    "mRender": function (data, type, row) {
                        var selected = row[4];
                        return "<input type='checkbox' id='" + data + "' " + (selected == true ? "checked" : "") + "/>";;
                    }
                },

            ],
            "bAutoWidth": false,

        }).fnSetFilteringDelay(delaySearch);
    }
    var StoreTable = function (data) {
        $("#StoreDatatable").dataTable({
            "aaData": data,
            "bSort": false,
            "bRetrieve": true,
            "bScrollCollapse": true,
            "bStateSave": true,
            "bProcessing": true,
            "oLanguage": {
                "sSearch": "Tìm kiếm:",
                "sSearchPlaceholder": "Nhóm cửa hàng",
                "sZeroRecords": "Không có dữ liệu phù hợp",
                "sInfo": "Hiển thị từ _START_ đến _END_ trên tổng số _TOTAL_ dòng",
                "sEmptyTable": "Không có dữ liệu",
                "sInfoFiltered": " - lọc ra từ _MAX_ dòng",
                "sLengthMenu": "Hiển thị _MENU_ dòng",
                "sProcessing": "Đang xử lý...",
                "sInfo": "Hiển thị _START_ đến _END_ trên tổng số _TOTAL_ dòng",
                "sInfoEmpty": "Hiển thị 0 từ 0 của 0 dòng",
                "oPaginate": {
                    "sNext": "<i class='fa fa-chevron-right'></i>",
                    "sPrevious": "<i class='fa fa-chevron-left'></i>"
                }
            },
            "aoColumnDefs": [
                {
                    "aTargets": [0, 1, 2, 4],
                    "bSortable": false,
                },
            ],

            "aoColumnDefs": [
                {
                    "aTargets": [3],
                    'targets': 0,
                    'searchable': false,
                    'orderable': false,
                    'className': 'dt-body-center',
                    "bSortable": false,
                },
            ],

            "aoColumnDefs": [
                {
                    "aTargets": [5],
                    "mRender": function (data, type, row) {
                        var checkboxPosition = row[0];
                        var storeName = row[1];
                        var isChecked = row[5];
                        var storeId = row[6];
                        var checkbox = "<input type='checkbox' name='managerchk' onclick='checkStore(" + checkboxPosition + ")' id='" + storeName + "' value='" + storeId + "' " + (isChecked ? "checked" : "") + "/>";

                        return checkbox;
                    },
                    'searchable': false,
                    'orderable': false,
                    'className': 'dt-body-center',
                    "bSortable": false,
                },
            ],
            "bAutoWidth": false,

        }).fnSetFilteringDelay(delaySearch);
    };
    $(document).on('click', '#btnAssignStore', function () {
        $.ajax({
            type: 'POST',
            url: '@Url.Action("ManagerStore")',
            dataType: 'json',
            data: {
                "selectedStore": selectedStore,
                "selectedStoreGroupId": $("#StoreGroupID").val(),
            },
            success: function (data) {
                if (data.success) {
                    $('#asignStorePanel').modal('hide');
                    ShowMessage("Đã cập nhật cửa hàng thành công!", 2);
                }
            },
        });

        return false;
    });

    function InitGroupDataTable(){
        $("#store-group-table").dataTable({
            "bSort":false,
            "bFilter": true,
            "bRetrieve": true,
            "bScrollCollapse": true,
            "sAjaxSource": '@Url.Action("LoadAllStoreGroup")',
            "bProcessing": true,
            "oLanguage": {
                "sSearchPlaceholder":"Nhóm cửa hàng",
                "sSearch": "Tìm kiếm:",
                "sZeroRecords": "Không có dữ liệu phù hợp",
                "sInfo": "Hiển thị từ _START_ đến _END_ trên tổng số _TOTAL_ dòng",
                "sEmptyTable": "Không có dữ liệu",
                "sInfoFiltered": " - lọc ra từ _MAX_ dòng",
                "sLengthMenu": "Hiển thị _MENU_ dòng",
                "sProcessing": "Đang xử lý...",
                "sInfo": "Hiển thị _START_ đến _END_ trên tổng số _TOTAL_ dòng",
                "sInfoEmpty": "Hiển thị 0 từ 0 của 0 dòng",
                "oPaginate": {
                    "sNext": "<i class='fa fa-chevron-right'></i>",
                    "sPrevious": "<i class='fa fa-chevron-left'></i>"
                }
            },
            "aoColumnDefs": [
                {
                    "aTargets": [0, 1],
                    "sClass": "text-center",
                    "bSearchable": false
                },
                {
                    "aTargets": [2],
                    "bSortable": true,
                    "bSearchable": true,
                },
                {
                    "aTargets": [3],
                    "mRender": function (data, type, row) {
                        var edit = "<a href='javascript:showEditGroupPanel(" + data + ")' title='Chỉnh sửa' class='btn btn-sm btn-info'><i class='glyphicon glyphicon-pencil'></i></a>"
                        var asign = "<a href='javascript:showAsignStore(" + data + ")' title='Thêm cửa hàng' class='btn btn-success btn-assign btn-sm'><i class='fa fa-user-plus'></i></a>"
                        var remove = "<a href='javascript:deleteGroup(" + data + ")' title='Hủy nhóm' class='btn btn-sm btn-danger'><i class='glyphicon glyphicon-trash'></i></a>"
                        return edit + ' ' + asign + ' ' + remove;
                    }
                },

            ],
            "bAutoWidth": false,

        }).fnSetFilteringDelay(delaySearch);
    }

    function showCreateGroupPanel() {
        $.ajax({
            url: '@Url.Action("Create")',
            type: "GET",
            success: function (result) {
                $("#createGroupPanel").modal("show");
                $("#createGroupPanel").html(result);
            },
            error: function (result) {
                ShowMessage(result, 1);
            }
        })
    }

    function showEditGroupPanel(storeGroupID) {
        $.ajax({
            url : '@Url.Action("Edit")',
            type : "GET",
            data: {
                'storeGroupId' : storeGroupID
            },
            success : function (result) {
                $("#editGroupPanel").modal("show");
                $("#editGroupPanel").html(result);
            },
            error: function (result) {
                ShowMessage(result, 1);
            }
        })
    }
    function showAsignStore(storeGroupID) {
        $.ajax({
            type: "GET",
            url: '@Url.Action("AsignStore")',
            success: function (result) {
                $('#asignStorePanel').html(result);
                $('#asignStorePanel').modal('show');
                $("#modalStoreHeader").html(name + " Manager");
                $("#StoreGroupID").val(storeGroupID);

                initAssignStoreDataTable();
            }
        });
    }

    function initAssignStoreDataTable() {
        $.ajax({
            type: "POST",
            url: '@Url.Action("LoadStoreInGroup")',
            data: {
                'selectedGroupId': $('#StoreGroupID').val(),
            },
            success: function (result) {
                StoreTable(result);
                $('#StoreDatatable').dataTable().fnPageChange(0);
                initSelectedStoreData(result)
            },
            error: function (result) {
                ShowMessage("Error happened!", 3);
            }
        });
    }

    function initSelectedStoreData(data) {
        selectedStore = [];
        for (var i = 0; i < data.length; i++) {
            selectedStore.push({
                ID: data[i][6],
                selected: data[i][5]
            });
        }
    }

    function checkStore(pos) {
        selectedStore[pos - 1].selected = !selectedStore[pos - 1].selected;
    }

    $("#btnCreate").on("click", function () {
        showCreateGroupPanel();
    });

    //redraw datatable without reload
    function reDrawDatatable(id) {
        $.fn.dataTableExt.oApi.fnStandingRedraw = function (oSettings) {
            if (oSettings.oFeatures.bServerSide === false) {
                var before = oSettings._iDisplayStart;
                oSettings.oApi._fnReDraw(oSettings);
                //iDisplayStart has been reset to zero - so lets change it back
                oSettings._iDisplayStart = before;
                oSettings.oApi._fnCalculateEnd(oSettings);
            }

            //draw the 'current' page
            oSettings.oApi._fnDraw(oSettings);
        };
        $(id).dataTable().fnStandingRedraw();
        $(id).dataTable()._fnPageChange(0);
        $(id).dataTable()._fnAjaxUpdate();
    }

    // refresh storegroup datatable
    function RefreshTable() {
        reDrawDatatable("#store-group-table");
    }

    function deleteGroup(storeGroupID) {
        ShowConfirm("Bạn có chắc là muốn xóa nhóm cửa hàng này?", function () {
            $.ajax({
                url: '@Url.Action("Delete", "StoreGroup")',
                type: 'POST',
                data: {
                    'storeGroupId': storeGroupID,
                },
                success: function (result) {
                    if (result.success) {
                        ShowAlert(result.message, 2);
                        RefreshTable();
                    } else {
                        ShowAlert(result.message, 3);
                    }
                },
                error: function (result) {
                    ShowAlert("Có lỗi xảy ra. Xin hãy thử lại!", 3);
                }
            });
        });
    }
    function confirmSubmitCreate(btn) {
        if ($("#Name").val() == "") {
            ShowMessage("Vui lòng nhập tên nhóm cửa hàng.", 3);
            return;
        }
        else {
            createStoreGroup();
        }
    }
    function createStoreGroup() {
        var formData = $('#storeGroupForm').serialize();

        $.ajax({
            type: "POST",
            url: '@Url.Action("Create")',
            dataType: 'JSON',
            data: formData,
            success: function (result) {
                if (result) {
                    ShowMessage(result.message, 2, '@Url.Action("Index")');
                    RefreshTable();
                    $('#createGroupPanel').modal('hide');
                } else {
                    ShowMessage(result.message, 1);
                }
            },

            //error: function (error) {
            //    ShowMessage(error.message,1);
            //}
        });
    }

    function confirmSubmit() {
        if ($("#groupName").val() == "") {
            ShowMessage("Vui lòng nhập tên cửa hàng.", 3);
            return;
        }
        else {
            editStoreGroup();
        }
    }
    function editStoreGroup() {
        var formData = $('#editStoreGroupForm').serialize();

        $.ajax({
            type: "POST",
            url: '@Url.Action("Edit")',
            dataType: 'JSON',
            data: formData,
            success: function (result) {
                if (result.success) {
                    ShowMessage(result.message, 2);
                    $("#editGroupPanel").modal("hide");
                    RefreshTable();
                } else {
                    ShowMessage(result.message, 1);
                }
            },

            //error: function (error) {
            //    ShowMessage(error.message,1);
            //}
        });
    }

</script>
