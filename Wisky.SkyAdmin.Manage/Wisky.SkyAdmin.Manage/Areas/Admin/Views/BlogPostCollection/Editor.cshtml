@model BlogPostCollectionEditViewModel
@{
    var currentStoreDomain = this.ViewBag.CurrentDomain as StoreDomainViewModel;
    ViewBag.Title = "Tạo chuyên mục mới";
}
<form role="form" method="post">
    @this.Html.AntiForgeryToken()
    @this.Html.HiddenFor(q => q.Id)
    <div class="block-header">
        <h2>Thêm chuyên mục mới</h2>

        <ul class="actions">
            <li class="m-r-10">
                <a href="@this.Url.Action("Index", new { parameters = currentStoreDomain.Directory })" class="btn btn-default">Quay lại</a>
            </li>
            <li>
                <button type="submit" class="btn btn-primary">Hoàn tất</button>
            </li>
        </ul>
    </div>

    @if (this.ViewData.ModelState.Any(q => q.Value.Errors.Count > 0))
    {
        <div class="card">
            <div class="card-body card-padding text-danger">
                @this.Html.ValidationSummary()
            </div>
        </div>
    }

    <div class="row">
        <div class="col-md-7">
            <div class="card">
                <div class="card-header">
                    <h2>Thông tin chính</h2>
                </div>
                <div class="card-body card-padding">
                    <div class="form-group">
                        <label for="inputTitle" class="control-label">Tên chuyên mục</label>
                        <div class="fg-line">
                            @Html.EditorFor(model => model.Name, new
                       {
                           additionalClasses = "seo-source",
                           htmlAttributes = new KeyValuePair<string, string>[] { new KeyValuePair<string, string>("data-seo-target", "#SeoName"), }
                       }
                       )
                        </div>
                        <div class="form-group">
                            <label for="inputTitle" class="control-label">Đường dẫn SEO</label>
                            <div class="fg-line">
                                @this.Html.EditorFor(q => q.SeoName)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card">
                <div class="card-header">
                    <h2>Hình ảnh đại diện</h2>
                </div>
                <div class="card-body card-padding">
                    <div class="row sm-margin">
                        <div class="col-md-4">
                            <ul class="row sm-margin images-preview avatar" id="avatar-preview">
                                @if (this.Model.PicUrl != null)
                                {
                                    <li class="col-md-4 photo-item removeable">
                                        <div class="ratio-wrapper ratio-wrapper-1-1">
                                            <div class="ratio-item">
                                                <div class="img-container">
                                                    <img src="@(this.Model.PicUrl)" />
                                                </div>
                                                <input type="hidden" name="@(this.Html.NameFor(a=>a.PicUrl))" value="@(this.Model.PicUrl)" />
                                                <span class="btn-remove"><i class="glyphicon glyphicon-remove"></i></span>
                                            </div>
                                        </div>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                    <div>
                        <input type="hidden" id="PicUrl" data-name="@this.Html.NameFor(q => q.PicUrl)" />
                        @*<button type="button" id="GetElImage" class="btn btn-sm btn-success getimagefromelfinder">
                                <i class="icon-upload"></i>Browse
                            </button>*@
                        <div style="display: none">
                            <input type="file" hidden id="uploadImage" accept="image/*" class="btn btn-sm btn-success uploadImageToBlob" />
                        </div>
                        <button type="button" id="btnUploadImage" class="btn btn-sm btn-success">
                            <i class="icon-upload"></i>Browse
                        </button>
                    </div>
                </div>
            </div>
        </div>
        @{
            var parentId = Model.ParentId;
            string flags = (string)ViewBag.Flag;
            if (parentId != null || flags.Equals("Create"))
            {
                <div class="col-md-5">
                    <div class="card">
                        <div class="card-header">
                            <h2>Liên kết</h2>
                        </div>
                        <div class="card-body card-padding">
                            <label for="" class="control-label">Chuyên mục cha</label>
                            <div class="fg-line">
                                <div class="select">
                                    @this.Html.DropDownListFor(q => q.ParentId, this.Model.AvailableBlogCollections, new { @class = "form-control", })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</form>
<template id="tmpPhotoBlock">
    <li class="col-md-4 photo-item">
        <div class="ratio-wrapper ratio-wrapper-1-1">
            <div class="ratio-item">
                <div class="img-container">
                    <img />
                </div>
                <input type="hidden" name="@(this.Html.NameFor(a=>a.PicUrl))" value="" />
            </div>
        </div>
    </li>
</template>

<template id="templatePairGroup">
    <div class="pair-group form-group xs-margin">
        <div class="col-sm-5">
            <div class="fg-line">
                <input type="text" class="form-control" name="Specifications.Name" placeholder="Tên" />
            </div>
        </div>
        <div class="col-sm-6">
            <div class="fg-line">
                <input type="text" class="form-control" name="Specifications.Value" placeholder="Nội dung" />
            </div>
        </div>
        <div class="col-sm-1">
            <button type="button" class="btn btn-danger form-control" data-action="remove-pair-group">
                <i class="zmdi zmdi-close"></i>
            </button>
        </div>
    </div>
</template>

<!-- Template Variant Group -->
<template id="templateVariantGroup">
    <div class="variant-group form-group sm-margin">
        <div class="col-sm-4">
            <div class="fg-line">
                <input type="text" class="form-control" name="title" />
            </div>
        </div>
        <div class="col-sm-7">
            <div class="fg-line">
                <input type="text" class="form-control" name="content" />
            </div>
        </div>
        <div class="col-sm-1">
            <button type="button" class="btn btn-danger form-control" data-action="remove-variant-group">
                <i class="zmdi zmdi-close"></i>
            </button>
        </div>
    </div>
</template>

<!-- Template Mutant Group -->
<template id="templateMutantGroup">
    <div class="mutant-group form-group sm-margin">
        <div class="col-sm-4 mutant-label"></div>
        <div class="col-sm-8">
            <div class="fg-line">
                <input type="text" class="form-control" />
            </div>
        </div>
    </div>
</template>

<script>
    $(document).ready(function () {
        $("#btnUploadImage").on('click', function () {
            $('#uploadImage').click();
        });

        $("#uploadImage").on('change', function () {
            var file, img;

            if (file = this.files[0]) {
                sendFile(file);
            }
        });
    });

    function sendFile(file) {
        var formData = new FormData();
        formData.append('file', file);

        $.ajax({
            type: 'POST',
            url: '@Url.Action("UploadImage", "File")',
            data: formData,
            success: function (result) {
                if (result.success) {
                    var htmlInnerData = '<li class="col-md-4 photo-item removeable">' +
                    '<div class="ratio-wrapper ratio-wrapper-1-1">' +
                    '<div class="ratio-item"><div class="img-container"><img src="' + result.imageUrl + '"/></div>' +
                    '<input type="hidden" name="PicUrl" value="' + result.imageUrl + '"/>'
                    + '<span class="btn-remove"><i class="glyphicon glyphicon-remove"></i></span>' +
                                '</div></div></li>';

                    $("#avatar-preview").html(htmlInnerData);
                }
            },
            processData: false,
            contentType: false,
            error: function () {
                ShowMessage("Có lỗi xảy ra!", 1);
            }
        });
    }
</script>
