@model IEnumerable<HmsService.ViewModels.StoreViewModel>

@*cửa hàng*@

<div class="row">
    @*dropdownlist và date range picker*@
    <div class="col-md-12 small-bot-margin">
        @*date range picker*@
        <div class="input-group pull-right">
            <div class="dateTime width230">
                <div class="fg-line m-t-5">
                    <div id="reportrange">
                        <input id="date-string" readonly class="form-control text-center">
                        <a class="myCelenderA" id=""><i class="fa fa-calendar"></i></a>
                    </div>
                </div>
            </div>
        </div>
        <input type="text" id="sTime" name="startTime" placeholder="Chọn giờ bắt đầu" hidden="hidden" />
        <input type="text" id="eTime" name="endTime" placeholder="Chọn giờ kết thúc" hidden="hidden" />
    </div>

</div>

@*table và chart*@
<div>
    <button type="submit" id="export" class="width230 btn btn-primary btn-sm pull-right">
        <i class="fa fa-download"></i>
        Xuất ra file Excel
    </button>
    <button type="button" data-show="show" id="buttonChart" class="btn btn-primary btn-sm" style="width:150px" onclick="ShowChart1()">
        <i class="fa fa-plus">
        </i> Hiển thị biểu đồ
    </button>
</div>

<form class="hidden" id="formDateReportExcel" action="@Url.Action("ExportDateStoreReportToExcel","TimeReport")">
    <input id="startTime" name="startTime" />
    <input id="endTime" name="endTime" />
    <input id="selectedStoreId" name="selectedStoreId" />
</form>

<div id="chartCuaHang" style="min-width: 300px; height: 290px;" hidden="hidden"></div>
<div id="datatableCuaHang" style="padding-top: 5px; overflow-x: scroll; cursor: grab; cursor :-o-grab; cursor :-moz-grab; cursor:-webkit-grab;" class="dragscroll">
</div>


<script type="text/javascript" src="https://cdn.rawgit.com/asvd/dragscroll/master/dragscroll.js"></script>
<script>
    $(document).ready(function () {
        $("#buttonChart").click(function () {
            $("#chartCuaHang").stop().slideToggle();
        });
        cb(moment().startOf('month'), moment(), "Tháng này");
        setupDaterangepicker();
        ReportStores();
    });

    //day la load date range picker
    function cb(start, end, label) {
        var startTime = start.format("DD/MM/YYYY"),
            endTime = end.format("DD/MM/YYYY"),
            dateString = "(" + startTime + (startTime == endTime ? "" : " - " + endTime) + ")";

        if (label != "Tùy chọn") {
            $('#date-string').val(label);
        } else {
            $("#date-string").val(dateString);
        }

        $("#sTime").val(startTime);
        $("#eTime").val(endTime);
        $("#dateRange").html(dateString);
        ReportStores();
    }
    function setupDaterangepicker() {
        $('#reportrange span').html(moment().add(-30, 'days').format('MMM D, YYYY') + ' - ' + moment().add(0, 'days').format('MMM D, YYYY'));
        $('#reportrange').daterangepicker({
            startDate: moment().startOf('month'),
            endDate: moment(),
            "opens": "left",
            "maxDate": moment(),
            locale: {
                format: 'DD/MM/YYYY'
            },
            ranges: {
                'Tháng này': [moment().startOf('month'), moment().endOf('month')],
                'Tháng trước': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
            }
        }, cb);
    }
    //chart
    function ChartStore(dataChart) {
        $('#chartCuaHang').highcharts({
            chart: {
                type: '',
                style: {
                    fontFamily: 'arial'
                }
            },
            title: {
                text: 'BIỂU ĐỒ HÓA ĐƠN',
                x: -20 //center
            },
            subtitle: {
                text: 'Bộ lọc:',
                align: 'right',
                x: -330,
                y: 42,
            },
            xAxis: {
                categories: dataChart.DateName
            },
            yAxis: {
                title: {
                    text: 'Hóa đơn'
                },
                plotLines: [{
                    value: 0,
                    width: 1,
                    color: '#808080'
                }]
            },
            tooltip: {
                headerFormat: '<b>{point.x}</b><br/>',
                pointFormat: '{series.name}: {point.y} '
            },
            legend: {
                align: 'right',
                x: -30,
                verticalAlign: 'top',
                y: 25,
                floating: true,
                backgroundColor: (Highcharts.theme && Highcharts.theme.background2) || 'white',
                borderColor: '#CCC',
                borderWidth: 1,
                shadow: false
            },
            series: [
                {
                    name: 'Mang đi',
                    data: dataChart.TakeAway,
                },
                {
                    name: 'Tại cửa hàng',
                    data: dataChart.AtStore,
                },
                {
                    name: 'Giao hàng',
                    data: dataChart.Delivery,
                }
            ]
        });
    }
    //datatable
    function InitProDatatableStore(data) {

        $('#datatableCuaHang').html('<table id="storeReportDatatable" class="table table-condensed table-striped table-bordered table-hover">'
            + '<thead style="white-space: nowrap; text-overflow: ellipsis;">'
            + '<tr>'
            + '<th rowspan="2">'
            + '<label class="">STT</label>'
            + '</th>'
            + '<th rowspan="2">'
            + '<label class="">Ngày</label>'
            + '</th>'
            + '<th colspan="2">'
            + '<label class="">Mang đi</label>'
            + '</th>'
            + '<th colspan="2">'
            + '<label class="">Tại store</label>'
            + '</th>'
            + '<th colspan="2">'
            + '<label class="">Giao hàng</label>'
            + '</th>'
            + '<th rowspan="2">'
            + '<label class="">Tổng số bill</label>'
            + '</th>'
            + '<th rowspan="2">'
            + '<label class="">Tổng doanh thu</label>'
            + '</th>'
            + '<th rowspan="2">'
            + '<label class="">Tiền giảm giá</label>'
            + '</th>'
            + '<th rowspan="2">'
            + '<label class="">Tổng doanh thu sau giảm giá</label>'
            + '</th>'
            + '</tr>'
            + '<tr>'
            + '<th>'
            + '<label class="">Số bill</label>'
            + '</th>'
            + '<th>'
            + '<label class="">Doanh thu</label>'
            + '</th>'
            + '<th>'
            + '<label class="">Số bill</label>'
            + '</th>'
            + '<th>'
            + '<label class="">Doanh thu</label>'
            + '</th>'
            + '<th>'
            + '<label class="">Số bill</label>'
            + '</th>'
            + '<th>'
            + '<label class="">Doanh thu</label>'
            + '</th>'
            + '</tr>'
            + ' </thead>'
                    + '<tbody></tbody>'
                + '</table>');

        $("#storeReportDatatable").dataTable({
            "bFilter": false,
            "bSort": false,
            "bRetrieve": true,
            "bScrollCollapse": true,
            "data": data,
            "iDisplayLength": 50,
            "aLengthMenu": [50, 100],
            "oLanguage": {
                "sSearch": "Tìm kiếm:",
                "sZeroRecords": "Không có dữ liệu phù hợp",
                "sInfo": "Hiển thị từ _START_ đến _END_ trên tổng số _TOTAL_ dòng",
                "sEmptyTable": "Không có dữ liệu",
                "sInfoFiltered": " - lọc ra từ _MAX_ dòng",
                "sLengthMenu": "Hiển thị _MENU_ dòng",
                "sProcessing": "Đang xử lý...",
                "oPaginate": {
                    "sNext": "<i class='fa fa-chevron-right'></i>",
                    "sPrevious": "<i class='fa fa-chevron-left'></i>"
                }
            },
            "aoColumnDefs": [
                {
                    "aTargets": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],
                    "sClass": "text-center"
                }
                //{
                //    'aTargets': [1, 2, 3],
                //    "mRender": function (data, type, row) {
                //        return toMoney(data, ',', 'đ');
                //    }
                //}
            ],
            "bAutoWidth": false
        }).fnSetFilteringDelay(delaySearch);
        $('table').wrap('<div class="tableDiv-responsive" />');
    }
    function ReportStores() {
        $.ajax({
            type: 'GET',
            url: '@Url.Action("DateReportTable", "TimeReport")',
            data: { 'startTime': $('#sTime').val(), 'endTime': $('#eTime').val(), 'storeIdd': $('#storeIdReport').val() },
            success: function (result) {
                InitProDatatableStore(result.dataList);
                ChartStore(result.dataChart);
            }
        });
    };

    //combobox change
    function ShowChart1() {
        var display = $('#buttonChart').data('show');
        if (display == "hide") {
            $('#buttonChart').data('show', 'show');
            $('#buttonChart').html(' <i class="fa fa-plus"></i> Hiển thị biểu đồ');
        }
        else {
            $('#buttonChart').html(' <i class="fa fa-minus"></i> Ẩn biểu đồ');
            $('#buttonChart').data('show', 'hide');
        }
    }

    //export to exel
    $(document).on('click', '#export', function () {
        $('#startTime').val($('#sTime').val());
        $('#endTime').val($('#eTime').val());
        $("#selectedStoreId").val($('#storeIdReport').val());
        $('#formDateReportExcel').submit();
    });
</script>