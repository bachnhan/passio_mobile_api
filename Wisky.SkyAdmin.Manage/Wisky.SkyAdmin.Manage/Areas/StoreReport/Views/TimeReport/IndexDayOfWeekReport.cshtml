@model IEnumerable<HmsService.ViewModels.StoreViewModel>
@{
    ViewBag.Title = "Báo cáo theo thứ";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-md-6">
                <h3>Báo cáo doanh thu cửa hàng theo thứ</h3>
                <h5 class="smallDate" data-role="small-date"></h5>
            </div>
        </div>
        <div class="card">
            <div class="card-header">
                <div class="row" style="margin-top: 19px;">
                    <div class="col-md-12">

                        <form id="form-create-session" class="form-inline">
                            <div class="input-group pull-right">
                                <div class="dateTime width230">
                                    <div class="fg-line m-t-5">
                                        <div id="reportranger" class="height-fix">
                                            <input id="date-string" size="26" readonly class="form-control text-center pull-right">
                                            <a class="myCelenderA" id=""><i class="fa fa-calendar"></i></a>
                                        </div>
                                    </div>
                                </div>
                                <div class="input-group-btn FindButtonDateTime">
                                    <a class="btn btn-primary btn-sm FindDateTime" id="btnSearch" style="margin-top: -5px;">
                                        <i class="left-icon fa fa-search"></i> Tìm
                                    </a>
                                </div>
                            </div>
                            <input type="text" id="sTime" name="startTime" placeholder="Chọn giờ bắt đầu" hidden="hidden" />
                            <input type="text" id="eTime" name="endTime" placeholder="Chọn giờ kết thúc" hidden="hidden" />
                        </form>
                    </div>
                </div>
            </div>
            <div class="card-padding">
                <div class="row">
                    <div class="col-md-6">
                        <button type="button" data-show="show" id="btnChart_store"
                                class="btn btn-primary btn-sm" style="width:150px" onclick="ShowChart_store()">
                            <i class="fa fa-plus">
                            </i> Hiển thị biểu đồ
                        </button>
                    </div>
                    <div class="col-md-6">

                        <div style="text-align: right">

                            <button type="submit" id="exportOneStore" class="btn btn-primary btn-sm">
                                <i class="fa fa-download"></i>
                                Xuất ra file Excel
                            </button>
                        </div>
                    </div>

                </div>
                <div id="container_store" style="min-width: 310px; height: 300px;"></div>
                <div id="datatable">

                </div>
            </div>



            <form class="hidden" id="formReportExcel_store" action="@Url.Action("ReportDayOfWeekExportExcelEPPlus","TimeReport")">
                <input name="startTime" />
                <input name="endTime" />
                <input name="storeIdReport" />
            </form>
        </div>
    </div>
</div>




<script>
    $('#exportOneStore').on('click', null, function () {
        $('[name=startTime]').val($('#sTime').val());
        $('[name=endTime]').val($('#eTime').val());
        $('[name=storeIdReport]').val(@ViewBag.storeId);
        $('#formReportExcel_store').submit();
    });
    $(document).ready(function () {
        setupDaterangerpicker();
        DayOfWeekReportOneStore();
        $('#btnChart_store').html(' <i class="fa fa-plus"></i> Hiển thị biểu đồ');
        $('#container_store').hide();
    });
    function ShowChart_store() {
        var display = $('#btnChart_store').data('show');
        if (display == "hide") {
            $('#btnChart_store').data('show', 'show');
            $('#btnChart_store').html(' <i class="fa fa-plus"></i> Hiển thị biểu đồ');
        }
        else {
            $('#btnChart_store').html(' <i class="fa fa-minus"></i> Ẩn biểu đồ');
            $('#btnChart_store').data('show', 'hide');
        }
        $('#container_store').toggle('show');
    }
    function setupDaterangerpicker() {
        function cb(start, end, label) {
            //console.log(start.toISOString(), end.toISOString(), label);

            //Prepare start time and end time format
            var startTime = start.format("DD/MM/YYYY"),
                endTime = end.format("DD/MM/YYYY"),
                dateString = "(" + startTime + (startTime == endTime ? "" : " - " + endTime) + ")";

            if (label != "Tùy chọn") {
                $('#date-string').val(label);
            } else {
                $('#date-string').val(dateString);
            }

            $('#sTime').val(startTime);
            $('#eTime').val(endTime);

            //Chage date at page header
            $('[data-role=small-date]').html(dateString);

            $('#reportranger span').html(start.format('MMM D, YYYY') + ' - ' + end.format('MMM D, YYYY'));
        };
        cb(moment().add(0, 'week').startOf('isoweek'), moment().add(0, 'week').endOf('isoweek'), "Tuần này");
        $('#reportranger').daterangepicker({
            format: 'DD/MM/YYYY',
            startDate: moment().add(0, 'week').startOf('isoweek'),
            endDate: moment().add(0, 'week').endOf('isoweek'),
            minDate: '01/01/2012',
            maxDate: '31/12/2100',
            dateLimit: { days: 365 },
            showDropdowns: true,
            showWeekNumbers: true,
            timePicker: false,
            timePickerIncrement: 1,
            timePicker12Hour: true,
            //parentEl: '.modal-body',
            ranges: {
                'Tuần này': [moment().add(0, 'week').startOf('isoweek'), moment().add(0, 'week').endOf('isoweek')],
                'Tuần trước': [moment().add(-1, 'week').startOf('isoweek'), moment().add(-1, 'week').endOf('isoweek')],
                'Tháng này': [moment().add(0, 'month').startOf('month'), moment().add(0, 'month').endOf('month')],
                'Tháng trước': [moment().add(-1, 'month').startOf('month'), moment().add(-1, 'month').endOf('month')]
            },
            opens: 'left',
            drops: 'down',
            buttonClasses: ['btn', 'btn-sm'],
            applyClass: 'btn-primary',
            cancelClass: 'btn-success',
            separator: ' to ',
            locale: {
                applyLabel: 'Chọn',
                cancelLabel: 'Hủy',
                fromLabel: 'Từ',
                toLabel: 'Đến',
                customRangeLabel: 'Tùy chọn',
                daysOfWeek: ['CN', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7'],
                monthNames: ['Tháng 1', 'Tháng 2', 'Tháng 3', 'Tháng 4', 'Tháng 5', 'Tháng 6', 'Tháng 7', 'Tháng 8', 'Tháng 9', 'Tháng 10', 'Tháng 11', 'Tháng 12'],
                firstDay: 1
            }
        }, cb);


    }
    $('#btnSearch').on('click', function () {
        if ($("#eTime").val().length > 16 || $("#sTime").val().length > 16) {
            ShowMessage("Vui lòng nhập thời gian đúng định dạng", 3);
            return;
        }
        else {
            DayOfWeekReportOneStore();
        }
    });
    function RefreshTable() {
        var oTable = $("#dayRReport").dataTable();
        oTable._fnPageChange(0);
        oTable._fnAjaxUpdate();
    };
    var InitProDatatable = function (data) {
        $("#dayRReport").dataTable({
            "bFilter": false,
            "bSort": false,
            "bRetrieve": true,
            "bScrollCollapse": true,
            'data': data,
            "bProcessing": true,
            "bPaginate": false,
            "iDisplayLength": 50,
            "aLengthMenu": [50, 100],
            "oLanguage": {
                "sSearch": "Tìm kiếm:",
                "sZeroRecords": "Không có dữ liệu phù hợp",
                "sInfo": "Hiển thị từ _START_ đến _END_ trên tổng số _TOTAL_ dòng",
                "sEmptyTable": "Không có dữ liệu",
                "sInfoFiltered": " - lọc ra từ _MAX_ dòng",
                "sLengthMenu": "Hiển thị _MENU_ dòng",
                "sProcessing": "Đang xử lý...",
                "oPaginate": {
                    "sNext": "<i class='fa fa-chevron-right'></i>",
                    "sPrevious": "<i class='fa fa-chevron-left'></i>"
                }
            },
            "aoColumnDefs": [
                {
                    "aTargets": [0, 1, 2, 3, 4, 5, 6, 7],
                    "bSortable": false,
                    "sClass": "text-center"
                },
                {
                    'atargets': [9],
                    "mrender": function (data, type, o) {
                        return '<a data-time="' + o[0] + '" data-starttime="' + o[9] + '" class="btn btn-sm btn-info btncomparison"><span class="fa fa-tasks"></span></a>';
                    },

                }
            ],
            "bAutoWidth": false
        }).fnSetFilteringDelay(delaySearch);
    };
    var DayOfWeekReportOneStore = function () {
        $.ajax({
            type: 'GET',
            url: '@this.Url.Action("LoadDayOfWeekReportOneStore")',
            data: { 'startTime': $('#sTime').val(), 'endTime': $('#eTime').val(), "storeIdReport": @ViewBag.storeId },
            success: function (result) {
                $('#datatable').html('<table id="dayRReport" class="table table-striped table-bordered table-hover">'
                    + '<thead>'
                    + '<tr>'
                    + '<th>'
                        + '<label style="width: 80px;" class="">Thứ</label>'
                    + '</th>'
                    + '<th>'
                        + '<label class="">Số lượng(Mang đi)</label>'
                    + '</th>'
                    + '<th>'
                        + '<label class="">Thành tiền</label>'
                    + '</th>'
                    + '<th>'
                       + '<label class="">Số lượng(Tại store)</label>'
                    + '</th>'
                    + '<th>'
                       + '<label class="">Thành tiền</label>'
                    + '</th>'
                    + '<th>'
                        + '<label class="">Số lượng(Giao hàng)</label>'
                    + '</th>'
                    + '<th>'
                        + '<label class="">Thành tiền</label>'
                    + '</th>'
                    + '<th>'
                        + '<label class="">Tổng cộng</label>'
                    + '</th>'
                    + '<th>'
                        + '<label class="">Thành tiền</label>'
                    + '</th>'
                    + '</tr>'
                    + '</thead>'
                    + '<tbody></tbody>'
                    + '</table');

                InitProDatatable(result.datatable);
                DoanhThuChart(result.dataChart)
            }
        });
    };
    function DoanhThuChart(dataChart) {
        $('#container_store').highcharts({
            title: {
                text: 'BIỂU ĐỒ HÓA ĐƠN',
                x: -20 //center
            },
            subtitle: {
                text: '',
                x: -20
            },
            xAxis: {
                categories: dataChart.WeekDay
            },
            yAxis: {
                title: {
                    text: 'Hóa đơn'
                },
                plotLines: [{
                    value: 0,
                    width: 1,
                    color: '#808080'
                }]
            },
            tooltip: {
                valueSuffix: ' Hóa đơn'
            },
            legend: {
                layout: 'vertical',
                align: 'right',
                verticalAlign: 'middle',
                borderWidth: 0
            },
            series: [
                {
                    name: 'TakeAway',
                    data: dataChart.TakeAway,
                },
                {
                    name: 'AtStore',
                    data: dataChart.AtStore,
                },
                {
                    name: 'Delivery',
                    data: dataChart.Delivery,
                }
            ]
        });
    };
</script>



