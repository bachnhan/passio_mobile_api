@using HmsService.Models
@{
    ViewBag.Title = "Orders";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@model Wisky.SkyAdmin.Manage.Areas.SysAdmin.Controllers.OrderController.ProductEditViewModel
<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-md-6">
                <h3>Quản Lý Order</h3>
            </div>
        </div>
        <hr />
    </div>

    <!-- field search-->
    <div class="card-padding">
        <div class="row">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body">
                        <div class="row" style="margin-bottom: 25px;">
                            <div class="col-md-10">
                                <input type="text" id="txt-delivery-address" class="form-control" placeholder="Nhập Invoice Id">
                            </div>
                            <div class="col-md-2">
                                <button type="button" class="btn btn-primary btn-sm pull-right findOrder" id="btn-search-address">
                                    <i class="left-icon fa fa-search"></i> Tìm
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                    <div class="card-body">
                        <div class="row" style="margin-bottom: 25px;">
                            <div class="col-md-8">
                            </div>
                            <div class="col-md-4">
                                <button type="button" class="btn btn-primary btn-sm pull-right addOrderDetail" id="btn-add-item" >
                                    <i class="left-icon fa fa-plus"></i> Thêm sản phẩm
                                </button>
                            </div>
                        </div>
                    </div>
            </div>
        </div>
    </div>
    <!-- field search-->
    <!-- Theme Datatable -->
    <div class="row">
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <table id="OrderDatatable" class="table table-striped table-bordered table-hover">
                        <thead>
                            <tr>
                                <th>
                                    <label class="">Mã đơn hàng </label>
                                </th>
                                <th>
                                    <label class="">Tổng cộng</label>
                                </th>
                                <th>
                                    <label class="">Giảm hóa đơn</label>
                                </th>
                                <th>
                                    <label class="">Giảm thành phần </label>
                                </th>
                                <th>
                                    <label class="">Thành tiền</label>
                                </th>
                                <th>
                                    <label class="">Ngày tạo</label>
                                </th>
                                <th>
                                    <label class="">Tùy chọn</label>
                                </th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <table id="OrderDetailsDatatable" class="table table-striped table-bordered table-hover">
                        <thead>
                            <tr>
                                <th>
                                    <label class="">Id</label>
                                </th>
                                <th>
                                    <label class="">Id</label>
                                </th>
                                <th>
                                    <label class="">Id</label>
                                </th>
                                <th>
                                    <label class="">Tên</label>
                                </th>
                                <th>
                                    <label class="">Đơn giá</label>
                                </th>
                                <th>
                                    <label class="">SL</label>
                                </th>
                                <th>
                                    <label class="">Giảm giá </label>
                                </th>
                                <th>
                                    <label class="">Tổng cộng</label>
                                </th>
                                <th>
                                    <label class="">Trạng thái</label>
                                </th>
                                <th>
                                    <label class="">Tùy chọn </label>
                                </th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <!-- Theme Datatable -->
</div>

<div class="modal fade" id="EditModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                <h4 class="modal-title" id="modalUserHeader"></h4>
            </div>
            <div class="modal-body">
                <div class="form-horizontal">
                    <div class="attribute-panel">

                        <div class="pair-group form-group xs-margin">
                            <label for="Product_Name" class="control-label col-md-4">Sản phẩm:</label>
                            <div class="col-md-8">
                                <div class="fg-line">
                                    <select id="Product_Name" @*title=""*@ class="selectpicker" data-live-search="true" onchange="FindProduct()"></select>
                                    @*<input class="form-control" id="Card_Type" name="" type="text" readonly value="@Model.membershipCard.MembershipTypeName">*@
                                </div>
                            </div>
                        </div>


                        <div class="pair-group form-group xs-margin">
                            <div class="col-sm-4">
                                <div class="fg-line">
                                    <label class="control-label">Số lượng:</label>
                                </div>
                            </div>
                            <div class="col-sm-8">
                                <div class="fg-line">
                                    <input type="text" class="form-control number percent" id="quantity" />
                                </div>
                            </div>
                        </div>

                        <div class="pair-group form-group xs-margin">
                            <div class="col-sm-4">
                                <div class="fg-line">
                                    <label class="control-label">Đơn giá:</label>
                                </div>
                            </div>
                            <div class="col-sm-8">
                                <div class="fg-line">
                                    <input type="text" class="form-control number percent" id="unitPrice" />
                                </div>
                            </div>
                        </div>

                        <div class="pair-group form-group xs-margin">
                            <div class="col-sm-4">
                                <div class="fg-line">
                                    <label class="control-label">Thành tiền:</label>
                                </div>
                            </div>
                            <div class="col-sm-8">
                                <div class="fg-line">
                                    <input type="text" class="form-control currency number" id="finalAmount" />
                                </div>
                            </div>
                        </div>


                        <input type="hidden" value="" id="detailId" />
                    </div>
                </div>
            </div>
            <div class="modal-footer" style="border-top: none;">
                <button type="button" class="btn btn-primary" id="btnsubmit" >Cập Nhật</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->


<div class="modal fade" id="EditModal2">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                <h4 class="modal-title" id="modalUserHeader2"></h4>
            </div>
            <div class="modal-body">
                <div class="form-horizontal">
                    <div class="attribute-panel">

                        <div class="pair-group form-group xs-margin">
                            <label for="Product_Name2" class="control-label col-md-4">Sản phẩm:</label>
                            <div class="col-md-8">
                                <div class="fg-line">
                                    <select id="Product_Name2" @*title=""*@ class="selectpicker" data-live-search="true" onchange="FindProduct2()"></select>
                                    @*<input class="form-control" id="Card_Type" name="" type="text" readonly value="@Model.membershipCard.MembershipTypeName">*@
                                </div>
                            </div>
                        </div>


                        <div class="pair-group form-group xs-margin">
                            <div class="col-sm-4">
                                <div class="fg-line">
                                    <label class="control-label">Số lượng:</label>
                                </div>
                            </div>
                            <div class="col-sm-8">
                                <div class="fg-line">
                                    <input type="text" class="form-control number percent" id="quantity2" />
                                </div>
                            </div>
                        </div>

                        <div class="pair-group form-group xs-margin">
                            <div class="col-sm-4">
                                <div class="fg-line">
                                    <label class="control-label">Đơn giá:</label>
                                </div>
                            </div>
                            <div class="col-sm-8">
                                <div class="fg-line">
                                    <input type="text" class="form-control number percent" id="unitPrice2" />
                                </div>
                            </div>
                        </div>

                        <div class="pair-group form-group xs-margin">
                            <div class="col-sm-4">
                                <div class="fg-line">
                                    <label class="control-label">Thành tiền:</label>
                                </div>
                            </div>
                            <div class="col-sm-8">
                                <div class="fg-line">
                                    <input type="text" class="form-control currency number" id="finalAmount2" />
                                </div>
                            </div>
                        </div>


                        <input type="hidden" value="" id="detailId" />
                    </div>
                </div>
            </div>
            <div class="modal-footer" style="border-top: none;">
                <button type="button" class="btn btn-primary" id="btnsubmit" onclick="submitform2()">Thêm sản phẩm</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->


<script>

    $(document).ready(function () {

        HMS.General.init();



        $(document).on("click", ".findOrder", function () {
            SearchInvoiceId();
            SearchOrderDetails();
        });

        $("#quantity").blur(function () {

            var quantity = $(this).val();

            var tmpPrice = $("#unitPrice").val();
            var unitPrice = Number(tmpPrice.replace(/[^0-9\.]+/g, ""));
            $("#finalAmount").val(toMoney(unitPrice * quantity, ',', 'đ'));
        });

        $("#quantity2").blur(function () {

            var quantity = $(this).val();

            var tmpPrice = $("#unitPrice2").val();
            var unitPrice = Number(tmpPrice.replace(/[^0-9\.]+/g, ""));
            $("#finalAmount2").val(toMoney(unitPrice * quantity, ',', 'đ'));
        });
        GetAllProducts();
        InitOrderDatatable();
        InitOrderDetailsDatatable();
    });



    function submitform(data) {
        var table2 = $('#OrderDatatable').DataTable();
        var data2 = table2.row($("#Edit").parents('tr')).data();

        $.ajax({
            type: 'POST',
            url: '@Url.Action("UpdateOrderDetail")',
            data: {
                "orderDetailID":data.OrderDetailID,
                "productId": $("#Product_Name").val(),
                "quantity": $("#quantity").val(),
                "invoiceId": data2.InvoiceID,
                "rentId": data.RentID,
        },
            success: function (result) {
                if (result.success) {
                    $('#EditModal').modal('hide');
                    ShowMessage("Cập nhật thành công", 2);
                    SearchInvoiceId();
                    SearchOrderDetails();
                } else {
                    ShowMessage(result.message, 1);
                }
            }
        });
    }

     function submitform2() {
        var table = $('#OrderDetailsDatatable').DataTable();
        var data = table.row($("#Edit").parents('tr')).data();
        var table2 = $('#OrderDatatable').DataTable();
        var data2 = table2.row($("#Edit").parents('tr')).data();

        $.ajax({
            type: 'POST',
            url: '@Url.Action("AddOrderDetail")',
            data: {
                "orderDetailID":data.OrderDetailID,
                "productId": $("#Product_Name2").val(),
                "quantity": $("#quantity2").val(),
                "invoiceId": data2.InvoiceID,
                "rentId": data.RentID,
        },
            success: function (result) {
                if (result.success) {
                    $('#EditModal2').modal('hide');
                    ShowMessage("Thêm sản phẩm thành công", 2);
                    SearchInvoiceId();
                    SearchOrderDetails();
                } else {
                    ShowMessage(result.message, 1);
                }
            }
        });
    }

     function FindProduct() {
         $.ajax({
             type: 'POST',
             url: '@Url.Action("GetProduct")',
             data: { 'productId': $("#Product_Name").val() },
             success: function (result) {
                 if (result.success) {
                     $("#quantity").val(1);
                     $("#finalAmount").val(toMoney(result.product, ',', 'đ'));
                     $("#unitPrice").val(toMoney(result.product, ',', 'đ'));
                 } else {
                     ShowMessage(result.message, 1);
                 }
             },
             error: function (result) {
                 ShowMessage("Có lỗi xảy ra", 1);
             }
         });
     }

    function FindProduct2() {
              $.ajax({
            type: 'POST',
            url: '@Url.Action("GetProduct")',
            data: { 'productId': $("#Product_Name2").val() },
            success: function (result) {
                if (result.success) {
                    $("#quantity2").val(1);
                    $("#finalAmount2").val(toMoney(result.product, ',', 'đ'));
                    $("#unitPrice2").val(toMoney(result.product,',','đ'));
                } else {
                    ShowMessage(result.message, 1);
                }
            },
            error: function (result) {
                ShowMessage("Có lỗi xảy ra", 1);
            }
        });
    }



    function RefreshOrderTable() {
        reDrawDatatable("#OrderDatatable");
    }

       function GetAllProducts() {
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetAllProducts")',
            success: function (result) {
                if (result.success) {
                    var content = "";
                    for (var i = 0; i < result.list.length; ++i) {
                        content += "<option value='" + result.list[i].ProductID + "'>" + result.list[i].ProductName + "</option>";
                    }
                    $("#Product_Name").html(content);
                    $("#Product_Name").selectpicker('refresh');

                    $("#Product_Name2").html(content);
                    $("#Product_Name2").selectpicker('refresh');
                } else {
                    ShowMessage(result.message, 1);
                }
            },
            error: function (result) {
                ShowMessage("Có lỗi xảy ra", 1);
            }
        });
    }




    function SearchInvoiceId() {
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetOrder")',
            data: { invoiceId: $("#txt-delivery-address").val() },
            success: function (result) {
                if (result.aaData != null) {
                    if ($.fn.DataTable.isDataTable('#OrderDatatable')) {
                        $("#OrderDatatable").dataTable().fnDestroy();
                    }
                    InitOrderDatatable(result.aaData);

                } else {
                    ShowAlert("Tìm kiếm order không thành công, xin liên hệ admin!", 1);
                }
            },
            error: function (error) {
                ShowAlert("Tìm kiếm Order không thành công, xin liên hệ admin!", 1);
            }
        })
    }

    function SearchOrderDetails() {
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetOrderDetails")',
            data: { invoiceId: $("#txt-delivery-address").val() },
            success: function (result) {
                if (result.aaData != null) {
                    if ($.fn.DataTable.isDataTable('#OrderDetailsDatatable')) {
                        $("#OrderDetailsDatatable").dataTable().fnDestroy();
                    }
                    InitOrderDetailsDatatable(result.aaData);

                } else {
                    ShowAlert("Tìm kiếm OrderDetail không thành công, xin liên hệ admin!", 1);
                }
            },
            error: function (error) {
                ShowAlert("Tìm kiếm OrderDetail không thành công, xin liên hệ admin!", 1);
            }
        })
    }
    function InitOrderDatatable(data) {

        $("#OrderDatatable").dataTable({
            "bFilter": false,
            "bRetrieve": true,
            "bServerSide": false,
            "bScrollCollapse": true,
            "aaData": data,
            @*"sAjaxSource": "@Url.Action("GetOrder")",
            "fnServerParams": function (aoData) {
                aoData.push({ "name": "invoiceId", "value": invoiceId });
            },*@
            "bProcessing": true,
            "oLanguage": {
                "sSearch": "",
                "sZeroRecords": "Không có dữ liệu phù hợp",
                "sInfo": "Hiển thị từ _START_ đến _END_ trên tổng số _TOTAL_ dòng",
                "sEmptyTable": "Không có dữ liệu",
                "sInfoFiltered": " - lọc ra từ _MAX_ dòng",
                "sLengthMenu": "Hiển thị _MENU_ dòng",
                "sProcessing": "Đang xử lý...",
                "sInfoEmpty": "Không có dữ liệu",
                "oPaginate": {
                    "sNext": "<i class='fa fa-chevron-right'></i>",
                    "sPrevious": "<i class='fa fa-chevron-left'></i>",
                }
            },
            "aoColumns": [
                { "mData": "InvoiceID" },
                { "mData": "TotalAmount" },
                { "mData": "Discount" },
                { "mData": "DiscountOrderDetail" },
                { "mData": "FinalAmount" },
                { "mData": "CheckInDate" },

            ],

            "aoColumnDefs": [
                {
                    "aTargets": [6],
                    "mRender": function (data, type, row) {
                        var data = row[6];
                        //var edit = "<a title='Chỉnh sửa' class='btn btn-sm btn-primary waves-effect waves-light' href='javascript:SearchOrderDetails()'><i class='glyphicon glyphicon-pencil'></i></a>";

                        var deleteTheme = "<a title='Xóa' class='btn btn-sm btn-danger waves-effect waves-light deleteTheme' id='" + data + "' href='#inline'><i class='glyphicon glyphicon-trash'></i></a>";
                        return  deleteTheme;
                    },
                    "bSortable": false,
                    "sClass": "text-center"
                },
            ],



            "bAutoWidth": false,
        }).fnSetFilteringDelay(delaySearch);
    }

     function InitOrderDetailsDatatable(data) {
               $("#OrderDetailsDatatable").dataTable({
            "bFilter": false,
            "bRetrieve": true,
            "bServerSide": false,
            "bScrollCollapse": true,
            "aaData": data,
            "bProcessing": true,
            "oLanguage": {
                "sSearch": "",
                "sZeroRecords": "Không có dữ liệu phù hợp",
                "sInfo": "Hiển thị từ _START_ đến _END_ trên tổng số _TOTAL_ dòng",
                "sEmptyTable": "Không có dữ liệu",
                "sInfoFiltered": " - lọc ra từ _MAX_ dòng",
                "sLengthMenu": "Hiển thị _MENU_ dòng",
                "sProcessing": "Đang xử lý...",
                "sInfoEmpty": "Không có dữ liệu",
                "oPaginate": {
                    "sNext": "<i class='fa fa-chevron-right'></i>",
                    "sPrevious": "<i class='fa fa-chevron-left'></i>",
                }
            },
            "aoColumns": [
                { "mData": "OrderDetailID" },
                { "mData": "ProductID" },
                { "mData": "RentID" },
                { "mData": "ProductName" },
                { "mData": "UnitPrice" },
                { "mData": "Quantity" },
                { "mData": "Discount" },
                { "mData": "FinalAmount" },
                { "mData": "Status" },
            ],
            "aoColumnDefs": [
                {
                    "aTargets": [9],
                    "mRender": function (data, type, row) {
                        var editButton = '<button class="fa fa-pencil btn btn-sm btn-info" type="button" data-action="edit-child-general" data-status="0" id="Edit">' +
                            '  Sửa</button>';
                        var deleteTheme = "<a title='Xóa' class='btn btn-sm btn-danger waves-effect waves-light deleteTheme' id='Delete' ><i class='glyphicon glyphicon-trash'></i></a>";
                        return editButton + " " + deleteTheme;
                    },
                    "bSortable": false,
                    "sClass": "text-center"
                },
                {
                    "aTargets": [3, 4, 5, 6, 7, 8],
                    "bSortable": false,
                    "sClass": "text-center"
                },
                {
                    "targets": [0,1,2],
                    "visible": false
                }
            ],

            "bAutoWidth": false,
         }).fnSetFilteringDelay(delaySearch);

    }

     $('#OrderDetailsDatatable tbody').on('click', '#Edit', function () {
         var table = $('#OrderDetailsDatatable').DataTable();
         var data = table.row($(this).parents('tr')).data();
         openEditModel(data);  // @*Id cua Model*@
         $('#btnsubmit').on('click', function () {
             submitform(data);
         });
     });
     $('.addOrderDetail').on('click', function () {
         var table = $('#OrderDetailsDatatable').DataTable();
         var data = table.row($("#Edit").parents('tr')).data();
         if (data != null) {
             openEditModel2();
         }
         else {
             ShowAlert("Thiếu thông tin Order", 1);
         }
           // @*Id cua Model*@
     });
    
     $('#OrderDetailsDatatable tbody').on('click', '#Delete', function () {
         var table = $('#OrderDetailsDatatable').DataTable();
         var data = table.row($(this).parents('tr')).data();
         deleteOrderDetail(data);  // @*Id cua Model*@
     });

     function deleteOrderDetail(data) {
         var table2 = $('#OrderDatatable').DataTable();
         var data2 = table2.row($("#Edit").parents('tr')).data();
          ShowConfirm("Bạn có muốn xóa OrderDetail này?", function () {
            $.ajax({
                type: "POST",
                url: '@Url.Action("DeleteOrderDetail")',
                data: {
                    "orderDetailID": data.OrderDetailID,
                    "invoiceId": data2.InvoiceID,
                    "rentId": data.RentID,
                },
                success: function (result) {
                    if (result.success) {
                        ShowAlert("Xóa thành công!", 2);
                        SearchInvoiceId();
                        SearchOrderDetails();
                        // refresh datatable
                    } else {
                        ShowAlert("Xóa không thành công, xin liên hệ admin!", 1);
                    }
                },
                error: function (error) {
                    ShowAlert("Xóa không thành công, xin liên hệ admin!", 1);
                }
            });
        });
     }

     function openEditModel(data) {
         $('#EditModal').modal({
             backdrop: 'static',
             keyboard: false
         });

         $("#modalUserHeader").text("Chỉnh sửa sản phẩm " + data.ProductName);
         $("#")
         $("#unitPrice").val(toMoney(data.UnitPrice, ',', 'đ'));
         $("#quantity").val(data.Quantity);
             $("#unitPrice").prop('readonly', true);
             $("#finalAmount").prop('readonly', true);
             $("#finalAmount").val(toMoney(data.UnitPrice * data.Quantity, ',', 'đ'));
             $("#Product_Name option").filter(function () {
                 return $.trim($(this).text()) == data.ProductName
             }).prop('selected', true);
             $("#Product_Name").selectpicker('refresh');
         $('#EditModal').modal('show');

     };

     function openEditModel2() {
         $('#EditModal2').modal({
             backdrop: 'static',
             keyboard: false
         });

         $("#modalUserHeader2").text("Thêm sản phẩm ");
         $("#quantity2").val(0);
         $("#unitPrice2").val(toMoney(0, ',', 'đ'));
         $("#unitPrice2").prop('readonly', true);
         $("#finalAmount2").prop('readonly', true);
         $("#finalAmount2").val(toMoney(0, ',', 'đ'));
         $("#Product_Name2").selectpicker('refresh');
         FindProduct2();
         $('#EditModal2').modal('show');

     };

        function FindOrder(invoiceId) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("Delete")',
                data: { invoiceId: $("#txt-delivery-address").val() },
                success: function (result) {
                        if (result.success) {
                            for (var i = 0; i < result.listdata.length; i++) {
                                var store = result.listdata[i];
                                listStoreSearch.push(store);
                            }
                            reDrawDatatable("#OrderDatatable");
                        }
                        // refresh datatable
                     else {
                        ShowAlert("Không tìm thấy order", 1);
                    }
                },
                error: function (error) {
                    ShowAlert("Lỗi !!!!", 1);
                }
            });

    }

    //redraw datatable without reload
    function reDrawDatatable(id) {
        $.fn.dataTableExt.oApi.fnStandingRedraw = function (oSettings) {
            if (oSettings.oFeatures.bServerSide === false) {
                var before = oSettings._iDisplayStart;
                oSettings.oApi._fnReDraw(oSettings);
                //iDisplayStart has been reset to zero - so lets change it back
                oSettings._iDisplayStart = before;
                oSettings.oApi._fnCalculateEnd(oSettings);
            }
            //draw the 'current' page
            oSettings.oApi._fnDraw(oSettings);
        };
        $(id).dataTable().fnStandingRedraw();
    }
</script>