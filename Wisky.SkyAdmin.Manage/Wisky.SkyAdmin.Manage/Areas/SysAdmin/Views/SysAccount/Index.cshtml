@model IEnumerable<AspNetUserDetailsViewModel>

@{
    this.ViewBag.Title = "Accounts";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var counter = 0;
}

<div class="row">
    <div class="col-sm-12">
        <div class="card">
            <div class="card-header">
                <div class="row">
                    <div class="col-md-6">
                        <h3>Quản lí tài khoản</h3>
                    </div>
                    <div class="col-md-6 text-right">
                        <a href="@this.Url.Action("Create")" class="btn btn-primary btn-icon-text waves-effect">
                            <i class="zmdi zmdi-plus"></i> Thêm tài khoản
                        </a>
                    </div>
                </div>
                <hr />
            </div>
            <div class="card-padding">
                <table id="AccountTable" class="table table-striped table-vmiddle">
                    <thead>
                        <tr>
                            <th>STT</th>
                            <th>Tên đăng nhập</th>
                            <th>Chức danh</th>
                            <th>Tùy chọn</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var account in this.Model)
                        {
                            <tr>
                                <td class="text-center">@(++counter)</td>
                                <td>@(account.AspNetUser.UserName)</td>
                                <td class="col-sm-6">
                                    @string.Join(", ", account.Roles.Select(q => Utils.DisplayName((RoleTypeEnum)Enum.Parse(typeof(RoleTypeEnum), q.Name))))

                                    @if (account.AdminStoreName != null)
                                    {
                                        <br />
                                        <span class="text-warning">@(account.AdminStoreName)</span>
                                    }
                                </td>
                                <td>
                                    <button data-id="@(account.AspNetUser.Id)" class="btn btn-sm btn-success" @*data-toggle="tooltip"*@ title="Tạo mật khẩu" onclick="onSetPasswordClick(this);">
                                        <i class="fa fa-lock"></i>
                                    </button>
                                    <a href="@this.Url.Action("Edit", new { id = account.AspNetUser.Id })" class="btn btn-primary btn-sm" @*data-toggle="tooltip"*@ title="Chỉnh sửa">
                                        <i class="glyphicon glyphicon-pencil"></i>
                                    </a>
                                    <button title="Xóa tài khoản" data-id="@account.AspNetUser.Id" onclick="DeleteAccount(this);" class="btn btn-sm btn-danger" @*data-toggle="tooltip"*@>
                                        <i class="glyphicon glyphicon-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!--Modal-->
<div id="changePasswordModal" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Sửa mật khẩu</h4>
            </div>
            <div class="modal-body">
                <form id="frm-set-password">
                    <input type="hidden" name="id" value="" />

                    <div class="form-horizontal">
                        <div id="FormError" class="alert alert-danger" style="display: none; padding: 10px; margin-left: 10px"></div>
                        <div id="FormSuccess" class="alert alert-success" style="display: none; padding: 10px; margin-left: 10px"></div>
                        <div class="form-group">
                            <label class="control-label col-md-4">Password mới</label>
                            <div class="col-md-5">
                                <div class="fg-line">
                                    <input class="col-sm-12" name="password" id="Password" type="password" />
                                </div>
                            </div>
                        </div>
                    </div>
                </form>

            </div>
            <div class="modal-footer">
                <button type="button" id="btnSubmit" class="btn btn-primary">Hoàn tất</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>

<div id="changePasswordModal">
    <form id="frm-set-password" class="hidden" action="@this.Url.Action("SetPassword")" method="post">
        @this.Html.AntiForgeryToken()

        <input name="id" />
        <input name="password" />
    </form>
</div>

@section scripts {
    <script>
        function onSetPasswordClick(btn) {
            //var pw = prompt("Nhập mật khẩu mới: ");

            //if (!pw) { return; }

            var id = $(btn).attr("data-id");

            var frm = $("#frm-set-password");
            frm.find("[name=id]").val(id);
            $('#changePasswordModal').modal('show');
            //frm.find("[name=password]").val(pw);
            //frm.submit();
        }
        $('#btnSubmit').on('click', function () {
            var formData = $("#frm-set-password").serialize();
            $.ajax({
                url: '@Url.Action("SetPassword")',
                type: 'POST',
                data: formData,
                async: false,
                success: function (data) {
                    if (data.success) {                        
                        $('#changePasswordModal').modal('toggle');                        
                        RefreshTable();                        
                        $("#Password").val("");
                        ShowAlert("Đổi mật khẩu thành công!", 2);
                    } else {                        
                        $('#changePasswordModal').modal('toggle');
                        $("#Password").val("");
                        ShowAlert(data.message, 1)
                        RefreshTable();
                    }
                },
                error: function (error) {
                    ShowAlert(result.message, 1);
                }
            });

        });

        $(document).ready(function () {
            //$('#AccountTable').DataTable();
            $("#AccountTable").dataTable({
                "bFilter": true,
                "bSort": false,
                "bRetrieve": true,
                "bScrollCollapse": true,
                "bProcessing": true,
                "iDisplayLength": 50,
                "aLengthMenu": [50, 100],
                "oLanguage": {
                    "sSearch": "Tìm kiếm:",
                    "sZeroRecords": "Không có dữ liệu phù hợp",
                    "sInfo": "Hiển thị từ _START_ đến _END_ trên tổng số _TOTAL_ dòng",
                    "sEmptyTable": "Không có dữ liệu",
                    "sInfoFiltered": " - lọc ra từ _MAX_ dòng",
                    "sLengthMenu": "Hiển thị _MENU_ dòng",
                    "sProcessing": "Đang xử lý...",
                    "oPaginate": {
                        "sNext": "<i class='fa fa-chevron-right'></i>",
                        "sPrevious": "<i class='fa fa-chevron-left'></i>"
                    }
                },
                
                "bAutoWidth": false
            }).fnSetFilteringDelay(delaySearch);
        })

        function DeleteAccount(button) {
            var id = $(button).attr("data-id");
            swal({
                title: "Bạn có chắc chắn ?",
                text: "Tài khoản người dùng sẽ được xóa khỏi hệ thống !",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Đồng ý",
                closeOnConfirm: true,
            }, function (isConfirm) {
                if (!isConfirm) return;
                else {
                    $.ajax({
                        url: '@Url.Action("DeleteAccount", "SysAccount")',
                        method: "POST",
                        data: {
                            'id': id,
                        },
                        success: function (result) {
                            swal({
                                title: result.message,
                                type: "success",
                                closeOnConfirm: true,
                            }, function (isConfirm) {
                                window.location.href = '@Url.Action("Index", "SysAccount")';
                            });
                        },
                        error: function (error) {
                            swal(error.message, "error");
                        }
                    });
                }
            });
        };

        function reDrawDatatable(id) {
            $.fn.dataTableExt.oApi.fnStandingRedraw = function (oSettings) {
                if (oSettings.oFeatures.bServerSide === false) {
                    var before = oSettings._iDisplayStart;
                    oSettings.oApi._fnReDraw(oSettings);
                    //iDisplayStart has been reset to zero - so lets change it back
                    oSettings._iDisplayStart = before;
                    oSettings.oApi._fnCalculateEnd(oSettings);
                }

                //draw the 'current' page
                oSettings.oApi._fnDraw(oSettings);
            };
            $(id).dataTable().fnStandingRedraw();
        }

        //user datatable
        function RefreshTable() {
            reDrawDatatable("#AccountTable");
        }
    </script>
}