@model BlogPostEditViewModel

<form method="post">
    @this.Html.AntiForgeryToken()
    @this.Html.HiddenFor(q => q.BlogPost.Id)

    <div class="block-header">
        <h2>Thêm mới tin tức</h2>

        <ul class="actions">
            <li class="m-r-10">
                <a class="btn btn-default" href="@this.Url.Action("Index")">Quay lại</a>
            </li>
            <li>
                <button type="submit" class="btn btn-primary">Hoàn tất</button>
            </li>
        </ul>
    </div>
    <div class="row">
        <div class="col-md-7">
            <div class="card">
                <div class="card-header">
                    <h2>Thông tin chính</h2>
                </div>
                <div class="card-body card-padding">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        <label for="inputTitle" class="control-label">Tiêu đề</label>
                        <div class="fg-line">
                            @Html.EditorFor(model => model.BlogPost.Title, new
                            {
                                additionalClasses = "seo-source",
                                htmlAttributes = new KeyValuePair<string, string>[] { new KeyValuePair<string, string>("data-seo-target", "#" + this.Html.IdFor(q => q.BlogPost.SeoName)), }
                            })
                            @Html.ValidationMessageFor(model => model.BlogPost.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="inputDescription" class="control-label">Nội dung</label>
                        <div class="fg-line">
                            @Html.TextAreaFor(model => model.BlogPost.BlogContent, new { @class = "ckeditor", })
                            @Html.ValidationMessageFor(model => model.BlogPost.BlogContent, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-header">
                    <h2>Hình ảnh</h2>
                </div>
                <div class="card-body card-padding">
                    <div class="row sm-margin">
                        <div class="col-md-4">
                            <ul class="row sm-margin images-preview avatar" id="avatar-preview">
                                @if (this.Model.BlogPostImages != null && this.Model.BlogPostImages.Count() > 0)
                                {
                                    var url = this.Model.BlogPostImages.First().ImageUrl;

                                    <li class="col-md-4 photo-item">
                                        <div class="ratio-wrapper ratio-wrapper-1-1">
                                            <div class="ratio-item">
                                                <div class="img-container">
                                                    <img src="@(url)" />
                                                </div>
                                                <input type="hidden" name="@this.Html.NameFor(q => q.SelectedImages)" value="@(url)" />
                                                <span class="btn-remove"><i class="glyphicon glyphicon-remove"></i></span>
                                            </div>
                                        </div>
                                    </li>
                                }


                            </ul>
                        </div>
                        <div class="col-md-8">
                            <ul class="row sm-margin images-preview" id="images-preview">
                                @if (this.Model.BlogPostImages != null && this.Model.BlogPostImages.Count() > 1)
                                {
                                    var firstImage = true;

                                    foreach (var image in this.Model.BlogPostImages)
                                    {
                                        if (firstImage)
                                        {
                                            firstImage = false;
                                            continue;
                                        }

                                        var url = image.ImageUrl;

                                        <li class="col-md-4 photo-item">
                                            <div class="ratio-wrapper ratio-wrapper-1-1">
                                                <div class="ratio-item">
                                                    <div class="img-container">
                                                        <img src="@(url)" />
                                                    </div>
                                                    <input type="hidden" name="@this.Html.NameFor(q => q.SelectedImages)" value="@(url)" />
                                                    <span class="btn-remove"><i class="glyphicon glyphicon-remove"></i></span>
                                                </div>
                                            </div>
                                        </li>
                                    }
                                }
                            </ul>
                        </div>
                    </div>
                    <div>
                        <input type="hidden" id="PicURL" data-name="@this.Html.NameFor(q => q.SelectedImages)" />
                        <a href="javascrip:void(0)" id="GetElImage" class="btn btn-sm btn-success getimagefromelfinder">
                            <i class="icon-upload"></i>Browse
                        </a>
                    </div>
                </div>
            </div>

        </div>
        <div class="col-md-5">
            <!-- Card: Collection -->
            <div class="card">
                <div class="card-header">
                    <h2>Nhóm tin tức</h2>
                </div>
                <div class="card-body card-padding">
                    <div class="form-group">
                        <label class="control-label">Nhóm</label>
                        <div class="fg-line">
                            <select class="selectpicker" name="@this.Html.NameFor(q => q.SelectedBlogPostCollections)" multiple>
                                @foreach (var item in this.Model.AvailableCollections)
                                {
                                    <option value="@(item.Value)" selected="@(item.Selected ? "" : null)">@(item.Text)</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Card: SEO -->
            <div class="card">
                <div class="card-header">
                    <h2>SEO</h2>
                </div>
                <div class="card-body card-padding">
                    <div class="form-group">
                        <label class="control-label">Từ khóa SEO</label>
                        <div class="fg-line">
                            @Html.EditorFor(model => model.BlogPost.MetaKeyword)
                            @Html.ValidationMessageFor(model => model.BlogPost.MetaKeyword, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label">Mô tả SEO</label>
                        <div class="fg-line">
                            @Html.TextAreaFor(model => model.BlogPost.MetaDescription, new { @class = "form-control", name = "MetaDescription" })
                            @Html.ValidationMessageFor(model => model.BlogPost.MetaDescription, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label">Đường dẫn</label>
                        <div class="fg-line">
                            @Html.EditorFor(model => model.BlogPost.SeoName)
                            @Html.ValidationMessageFor(model => model.BlogPost.SeoName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</form>

<!-- Template Pair Group -->
<template id="templatePairGroup">
    <div class="pair-group form-group xs-margin">
        <div class="col-sm-5">
            <div class="fg-line">
                <input type="text" class="form-control" name="Specifications.Name" placeholder="Tên" />
            </div>
        </div>
        <div class="col-sm-6">
            <div class="fg-line">
                <input type="text" class="form-control" name="Specifications.Value" placeholder="Nội dung" />
            </div>
        </div>
        <div class="col-sm-1">
            <button type="button" class="btn btn-danger form-control" data-action="remove-pair-group">
                <i class="zmdi zmdi-close"></i>
            </button>
        </div>
    </div>
</template>

<!-- Template Variant Group -->
<template id="templateVariantGroup">
    <div class="variant-group form-group sm-margin">
        <div class="col-sm-4">
            <div class="fg-line">
                <input type="text" class="form-control" name="title" />
            </div>
        </div>
        <div class="col-sm-7">
            <div class="fg-line">
                <input type="text" class="form-control" name="content" />
            </div>
        </div>
        <div class="col-sm-1">
            <button type="button" class="btn btn-danger form-control" data-action="remove-variant-group">
                <i class="zmdi zmdi-close"></i>
            </button>
        </div>
    </div>
</template>

<!-- Template Mutant Group -->
<template id="templateMutantGroup">
    <div class="mutant-group form-group sm-margin">
        <div class="col-sm-4 mutant-label"></div>
        <div class="col-sm-8">
            <div class="fg-line">
                <input type="text" class="form-control" />
            </div>
        </div>
    </div>
</template>

<!-- Template Photo Block -->
<template id="tmpPhotoBlock">
    <li class="col-md-4 photo-item">
        <div class="ratio-wrapper ratio-wrapper-1-1">
            <div class="ratio-item">
                <div class="img-container">
                    <img />
                </div>
                <input type="hidden" name="@this.Html.NameFor(q => q.SelectedImages)" value="" />
            </div>
        </div>
    </li>
</template>