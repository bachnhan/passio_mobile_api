@{
    ViewBag.Title = "Tạo tài khoản";
    Layout = null;
}

<style>
    .modal-dialog {
        width: 60%;
    }

    .in {
        background-color: rgba(0, 0, 0, 0.65);
    }
</style>

<div>
    <div class="modal-header">
        <h4 class="modal-title">
            Tạo tài khoản
        </h4>
    </div>

    <div class="modal-body">
        <div class="form-group">
            <div class="row">
                <label class="col-md-4">Tên tài khoản</label>
                <div class="col-md-8">
                    <input id="accName" type="text" class="form-control" />
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <label class="col-md-4">Loại tài khoản</label>
                <div class="col-md-8">
                    @{ 
                        AccountTypeEnum[] enums = (AccountTypeEnum[])Enum.GetValues(typeof(AccountTypeEnum));
                    }
                    @foreach (var item in enums)
                    {
                        <div class="col-md-4">
                            <input type="radio" name="accType" value="@((int)item)" />
                            <label class="control-label">@item.DisplayName()</label>
                        </div>
                    }
                    <input id="accTypeId" type="hidden" />
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <label class="col-md-4">Ngày kết thúc</label>
                <div class="col-md-8">
                    <input id="accFinishDate" type="text" class="form-control" />
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <label class="col-md-4">Số điểm</label>
                <div class="col-md-8">
                    <input id="accBalance" type="number" min="0" class="form-control" />
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <label class="col-md-4">Chọn sản phẩm</label>
                <div class="col-md-8">
                    <select id="product" class="selectpicker">
                        @foreach (var item in (List<SelectListItem>)ViewBag.array)
                        {
                            <option value="@item.Value">@item.Text</option>
                        }
                    </select>
                </div>
            </div>
        </div>
    </div>

    <div class="modal-footer">
        <label class="btn btn-default pull-right" data-dismiss="modal">Thoát</label>
        <label class="btn btn-success pull-right" onclick="AddRow()">Tạo tài khoản</label>
    </div>
</div>

<script>
    $(document).ready(function () {
        $('.selectpicker').selectpicker({
            size: 10,
            liveSearch: true,
        });

        $('#accBalance').on('input', function () {
            var str = $(this).val();
            $(this).val(str);
        });

        $('#accFinishDate').datepicker({
            format: 'MM dd, yyyy',
            startDate: moment().add(30, 'days').format("LL"),
        });

        $('input[name=accType]').iCheck({
            checkboxClass: 'icheckbox_square-green',
            radioClass: 'iradio_square-green',
            increaseArea: '20%'
        });

        $('input[name=accType]').on('ifChecked', function (event) {
            $('#accTypeId').val($(this).val());
            if ($(this).val() != parseInt('@((int)AccountTypeEnum.GiftAccount)')) {
                //$('#product').attr('disabled', true);
                $('#product').selectpicker('hide');
            } else {
                //$('#product').attr('disabled', false);
                $('#product').selectpicker('show');
            }
        });

        $('input[name=accType]:first').iCheck('check');
    });

    function AddRow() {
        if ($('#accName').val() == '' || $('#accName').val().length > 30) {
            ShowAlert("Tên tài khoản không được rỗng hoặc dài hơn 30 ký tự", 1);
            return;
        } else if ($('#accFinishDate').val() == '') {
            ShowAlert("Hãy nhập ngày kết thúc", 1);
            return;
        } else if ($('#accBalance').val() == '') {
            ShowAlert("Hãy nhập số điểm", 1);
            return;
        }

        if (table != null) {
            var num = count++;
            var name = $('#accName').val();
            var date = $('#accFinishDate').val();
            var balance = $('#accBalance').val();
            var type = $('#accTypeId').val();
            var productId = $('#product').val();

            table.row.add([
                num,
                '@DateTime.Now.ToString("ddMMyyyyhhmmssfff")',
                name,
                balance,
                '@DateTime.Now.ToString("MMM dd, yyyy")',
                date,
                type,
                type == parseInt('@((int)AccountTypeEnum.GiftAccount)') ? productId : '',
                num,
                false,
            ]).draw(false);

            $('#modal').modal('hide');
        }
    }
</script>