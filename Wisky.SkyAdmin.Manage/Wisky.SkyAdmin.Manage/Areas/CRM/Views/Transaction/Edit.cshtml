@model HmsService.ViewModels.TransactionEditViewModel
@using HmsService
@{
    //ViewBag.Title = "Edit";
    //Layout = "~/Views/Shared/_AdminLayout.cshtml";
    Layout = null;
    var disabled = Model.Status != (int)TransactionStatus.New;
}


@Html.ValidationSummary()
<div class="modal-dialog modal-md">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close btn btn-danger" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            @if (disabled == false)
            {
                <h3 class="modal-title" id="createAccountLabel">Chỉnh sửa giao dịch</h3>
            }
            else
            {
                <h3 class="modal-title" id="createAccountLabel">Chi tiết giao dịch</h3>
            }


        </div>

        <form method="post" action="@Url.Action("Edit","Transaction")">
            <div class="modal-body">
                <div class="form-horizontal">
                    <div class="row group-info" style="margin-left:-2px; margin-right:-2px;">
                        @Html.HiddenFor(q => q.AccountId)
                        @Html.HiddenFor(q => q.Id)
                        <div class="form-group">
                            <label class="control-label col-md-4" for="membership-card-code">Mã thẻ<span style="color:red"></span></label>
                            <div class="col-md-6">
                                <input class="form-control" type="text" id="membership-card-code" value="" readonly />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-4" for="account-name">Tên tài khoản<span style="color:red"></span></label>
                            <div class="col-md-6">
                                <input class="form-control" type="text" id="account-name" readonly />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-4" for="customer-name">Tên khách hàng<span style="color:red"></span></label>
                            <div class="col-md-6">
                                <input class="form-control" type="text" id="customer-name" readonly />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-4" for="customer-phone">Số điện thoại<span style="color:red"></span></label>
                            <div class="col-md-6">
                                <input class="form-control" type="text" id="customer-phone" readonly/>
                            </div>
                        </div>
                        @*đang sửa nè*@
                        @*<div class="form-group">
                            <label class="control-label col-md-4" for="CurrencyCode">Tiền tệ<span style="color:red"></span></label>
                            <div class="col-md-6">
                                @Html.DropDownListFor(q => q.CurrencyCode, Enum.GetNames(typeof(HmsService.Models.Currency)).Select(e => new SelectListItem { Text = e }), new { id = "Currency", @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-4" for="FCAmount">FCAmount<span style="color:red"></span></label>
                            <div class="col-md-6">
                                @Html.TextBoxFor(q => q.FCAmount, new { id = "FCAmount", @class = "form-control fg-line", placeholder = "Nhập tên tài khoản", required = "required", oninput = "correctFCAmount()" })
                            </div>
                        </div>*@
                        <div class="form-group">
                            <label class="control-label col-md-4" for="Amount">Mệnh giá<span style="color:red"></span></label>
                            <div class="col-md-6">
                                @Html.TextBoxFor(q => q.Amount, new { id = "Amount", @class = "form-control fg-line", placeholder = "Nhập số tiền nạp", required = "required", oninput = "correctAmount()" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-4 control-label">Ngày giao dịch</label>
                            <div class="col-md-6 dateTime">
                                <input class="form-control" type="text" name="Date" value="@this.Model.Date.ToShortDateString()" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-4" for="Status">Trạng thái</label>
                            <div class="col-md-6">
                                <select class="form-control" name="Status" id="Status">
                                    <option value="0">Chưa duyệt</option>
                                    <option value="1">Đã duyệt</option>
                                    <option value="2">Đã hủy</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-4" for="TransactionType">Loại giao dịch</label>
                            <div class="col-md-6">
                                <select class="form-control" name="TransactionType" id="TransactionType">
                                    <option value="1">Bình Thường</option>
                                    <option value="2">GD điều chỉnh</option>
                                    <option value="3">ActiveCard</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-4" for="IsIncreaseTransaction">Hình thức</label>
                            <div class="col-md-6">
                                <select class="form-control" name="IsIncreaseTransaction" id="IsIncreaseTransaction">
                                    <option value="true">Tăng</option>
                                    <option value="false">Giảm</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-4" for="Notes">Ghi chú</label>
                            <div class="col-md-6">
                                @Html.TextBoxFor(q => q.Notes, new { id = "Notes", @class = "form-control fg-line", placeholder = "Nhập chú thích nếu có" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <a data-dismiss="modal" class="btn btn-primary">Đóng</a>
                <button type="submit" class="btn btn-success">Lưu</button>
            </div>
        </form>
    </div>
</div>

<style>
    .daterangepicker {
        margin-top: initial !important;
    }
</style>
<script>
    $(function () {
        @if (Model.Date != DateTime.MinValue) {
            <text>
        var start = moment('@Model.Date.ToString("MM/dd/yyyy")').format("MM/DD/YYYY");
        </text>
        }
        else
        {
            <text>
        var start = moment().add(0, 'days');
        //$('#reportrange span').html(moment().add(-30, 'days').format('MMM D, YYYY') + ' - ' + moment().add(0, 'days').format('MMM D, YYYY'));
        </text>
        }
        $('input[name="Date"]').daterangepicker({
            format: "MM/DD/YYYY",
            singleDatePicker: true,
            showDropdowns: true,
            startDate: start,
            locale: {
                format: "MM/DD/YYYY"
            }
        },
        function (start, end, label) {
            var years = moment().diff(start, 'years');
        });
        if ('@disabled' == 'True') {
            $('#FCAmount').prop('disabled', 'disabled');
            $('#Amount').prop('disabled', 'disabled');
            $('#Notes').prop('disabled', 'disabled');
            $('#Currency').prop('disabled', 'disabled');
            $('input[name="Date"]').prop('disabled', 'disabled');
            $('#Status').prop('disabled', 'disabled');
            $('#TransactionType').prop('disabled', 'disabled');
            $('#IsIncreaseTransaction').prop('disabled', 'disabled');
            $('button[type=submit]').hide();
        }
    });

    @if(this.Model.IsIncreaseTransaction == true)
    {
        <text>
    $('#IsIncreaseTransaction').val("true");
    </text>
    }
    else
    {
        <text>
    $('#IsIncreaseTransaction').val("false");
    </text>
    }
    //-----------
    @if(this.Model.Status == 0)
    {
        <text>
    $('#Status').val("0");
    </text>
    }
    else if (this.Model.Status == 1)
    {
        <text>
    $('#Status').val("1");
    </text>
    } else
    {
         <text>
    $('#Status').val("2");
        </text>
    }
    //-----------
    @if(this.Model.TransactionType == 1)
    {
        <text>
    $('#TransactionType').val("1");
        </text>
    }
    else if (this.Model.Status == 2)
    {
        <text>
    $('#TransactionType').val("2");
        </text>
    } else
    {
        <text>
    $('#TransactionType').val("3");
        </text>
    }


    function correctAmount() {
        var amount = $('#Amount').val().replace(/[^\d]/g, '');
        $('#Amount').val(amount);
    }

    function correctFCAmount() {
        var amount = $('#FCAmount').val().replace(/[^\d]/g, '');
        $('#FCAmount').val(amount);
    }
</script>